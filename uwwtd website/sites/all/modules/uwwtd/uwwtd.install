<?php 

/***************************************************************************/
// HOOK
/***************************************************************************/
/**
 * Installmodule UWWTD 
 *  - create directory
 *  - disabled/enable module
 *  - create all fields and bundle
 *  - configure drupal    
 */ 
function uwwtd_install() 
{
    uwwtd_install_create_dir();
    uwwtd_install_trace(__FUNCTION__);

    //set this value to 1 to know later in update if the application was installing from a dump or  from install from scratch
    variable_set('uwwtd_install_from_scratch', 1);

    $batch = array(
        'title' => t('Installing UWWTD'),
        'operations' => array(
          array('uwwtd_install_execute_sql', array()),
          array('uwwtd_install_disable_module', array()),
          array('uwwtd_install_enable_module', array()),
          array('uwwtd_install_content_type', array()),
          array('uwwtd_install_configure', array()),
          array('uwwtd_install_create_page', array()),
          array('uwwtd_install_create_block', array()),    
        ),
        'finished' => 'uwwtd_install_batch_finished',
        'init_message' => t('Start to install uwwtd...'),
        'progress_message' => t('installing...'),
        'error_message' => t('An error occured while installing.'),
        'file' => drupal_get_path('module', 'uwwtd') . '/uwwtd.install',
    );
      
     
    
    //and execute all update! because all current update will not be visible on update.php    
    //on install,,execute all update function defined
    for ($i = 7100; $i < 7199; $i++) {
//     for ($i = 7100; $i < 7101; $i++) {
        $candidate = 'uwwtd_update_' . $i;
        if (function_exists($candidate)) {
//           $candidate();
          $batch['operations'][] = array($candidate, array());
        }
    }
    
     batch_set($batch);    
}

function uwwtd_enable() 
{
    uwwtd_install_trace(__FUNCTION__);
} 

function uwwtd_disable() 
{
    uwwtd_install_trace(__FUNCTION__);
}    

function uwwtd_uninstall() 
{
    uwwtd_install_trace(__FUNCTION__);
}

function uwwtd_schema() 
{
//     uwwtd_install_trace(__FUNCTION__);
    
    $schema['uwwtd_import_errors'] = array(
    'description' => 'Table for storing all import errors',
    'fields' => array(
      'errid' => array(
        'description' => 'The primary identifier for a error.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Type of the error.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'category' => array(
        'description' => 'Category of the error',
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'year' => array(
          'description' => 'reference year of data',
          'type' => 'int',
          'not null' => false,
          'default' => NULL,
      ),
      'error' => array(
        'description' => 'description of the error.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
      ),
      'date' => array(
          'description' => 'The Unix timestamp of the error.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
      ),
      'entity_type' => array(
          'description' => 'The type of entity.',
          'type' => 'varchar',
          'length' => 32,
          'not null' => FALSE,
      ),
      'entity_id' => array(
          'description' => 'The primary identifier for an entity.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => FALSE,
       ),
       'bundle' => array(
          'description' => 'The bundle to which this entity belongs.',
          'type' => 'varchar',
          'length' => 128,
          'not null' => FALSE,
        ),
    ),
    'indexes' => array(
      'uwwtd_err_date'        => array('date'),
      'uwwtd_err_entity_id'        => array('entity_id'),
      'uwwtd_err_type'        => array('type'),
      'uwwtd_err_cat'        => array('category'),
      
    ),
    'primary key' => array('errid'),
  );
  return $schema; 
}



/**
 * create table uwwtd_import_errors (if table already exist, table will be truncate and update will be displayed as failed, but it is not important,
 * we run this update only to tell drupal this table exist and it can use it now) 
 */ 
function uwwtd_update_7100(&$context = null) 
{
    uwwtd_install_trace(__FUNCTION__);
    $schema = module_invoke('uwwtd', 'schema');
    $sTableName ='uwwtd_import_errors';
    if (true === db_table_exists($sTableName)) {
        db_drop_table($sTableName);
    }
    db_create_table($sTableName, $schema['uwwtd_import_errors']);
    
    if (isset($context)) {
        uwwtd_install_trace(var_export($context, true));
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }
}

/**
 * Create or replace views for geoserver
 * Create if not exists schema wfs use by hook_cron to create tables for geoserver based on the views of the same name 
 */ 
function uwwtd_update_7101(&$context = null) 
{
    uwwtd_install_trace(__FUNCTION__);
    //delete views for updating drupal node field title size
    uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_delete_view('UWWTD_BigCity');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_DischargePoint');
    uwwtd_delete_view('UWWTD_ReceivingArea');
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_delete_view('UWWTD_UWWTPs_Agglo');
    
    uwwtd_update_node_title_size();

    //recreate the view
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_BigCity');
    uwwtd_create_or_replace_view('UWWTD_Compliance_Agglo');
    uwwtd_create_or_replace_view('UWWTD_Compliance_UWWTP');
    uwwtd_create_or_replace_view('UWWTD_DischargePoint');
    uwwtd_create_or_replace_view('UWWTD_ReceivingArea');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_create_or_replace_view('UWWTD_UWWTPs_Agglo');
    
    uwwtd_create_schema_wfs();
    
    if (isset($context)) {
        uwwtd_install_trace(var_export($context, true));
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }    
}

/**
 * Delete node type error if still in database
 */ 
function uwwtd_update_7102(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    uwwtd_delete_node_type_error();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }    
} 

/**
 * Add more choice in some field (uwwcompliance, aggcompliance, ...) and change label of some field 
 * add value in 
 * - field_uwwperformance_met, field_uwwtreatment_met, field_uwwcompliance
 * - field_aggcompliance, field_aggart3compliance, field_aggart4compliance, field_aggart5compliance, field_aggart6compliance
 * change label in
 *   field_linked_agglomerations     Linked agglomeration(s)
 *   field_linked_discharge_points   Linked discharge point(s)
 *   ...
 */
function uwwtd_update_7103(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    $msg_error = '';
    // Clear the field cache so we've got a clean slate to start on
    uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_delete_view('UWWTD_BigCity');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_DischargePoint');
    uwwtd_delete_view('UWWTD_ReceivingArea');
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_delete_view('UWWTD_UWWTPs_Agglo');
        
    field_cache_clear();
    
    $field = array (
      'field_name' => 'field_uwwperformance_met',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          2 => 'Not Calculable',
          1 => 'Yes',
          0 => 'No',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_uwwtreatment_met',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          2 => 'Not Calculable',
          1 => 'Yes',
          0 => 'No',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_uwwcompliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'NI' => 'No information',
          'NR' => 'Not relevant',
          'C' => 'Compliant',
          'NC' => 'Not compliant',
          'CE' => 'Compliant on equipment only',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_aggcompliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'NI' => 'No information',
          'NR' => 'Not relevant',
          'NC' => 'Not compliant',
          'C' => 'Compliants',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_aggart3compliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'NI' => 'No information',
          'C' => 'Compliant',
          'AddQC' => 'Not compliant',
          'QC' => 'Compliant',
          'NC' => 'Not compliant',
          'NR' => 'Not relevant',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_aggart4compliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'C' => 'Compliant',
          'NC' => 'Not compliant',
          'NR' => 'Not relevant',
          'NI' => 'No information',
          'RNC' => 'Not compliant',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }    
    
    $field = array (
      'field_name' => 'field_aggart5compliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'NI' => 'No information',
          'NR' => 'Not relevant',
          'C' => 'Compliant',
          'NC' => 'Not compliant',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    $field = array (
      'field_name' => 'field_aggart6compliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'C' => 'Compliant',
          'NC' => 'Not compliant',
          'NR' => 'Not relevant',
          'NI' => 'No information',
          'RNC' => 'Not compliant',
          '?' => '?',
        ),
        'allowed_values_function' => '',
      ),
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
    
    //change label on some field
    $list_field = array(
        'field_linked_agglomerations'     => 'Linked agglomeration(s)',
        'field_linked_discharge_points'   => 'Linked discharge point(s)',
        'field_linked_receiving_areas'    => 'Linked receiving area(s)',
        'field_uwwotherperf'              => 'Treatment performance: Other',
        'field_uwwbodincoming'            => 'Incoming load BOD (t per year)',
        'field_uwwcodincoming'            => 'Incoming load COD (t per year)',
        'field_uwwnincoming'              => 'Incoming load Ntot (t per year)',
        'field_uwwpincoming'              => 'Incoming load Ptot (t per year)',
        'field_uwwboddischarge'           => 'Discharged load BOD (t per year)',
        'field_uwwcoddischarge'           => 'Discharged load COD (t per year)',
        'field_uwwndischarge'             => 'Discharged load Ntot (t per year)',
        'field_uwwpdischarge'             => 'Discharged load Ptot (t per year)',
        'field_uwwbodincomingcalculated'  => 'Incoming load BOD-tot Calculated',
        'field_uwwcodincomingcalculated'  => 'Incoming load COD-tot Calculated',
        'field_uwwnincomingcalculated'    => 'Incoming load N-tot Calculated',
        'field_uwwpincomingcalculated'    => 'Incoming load P-tot Calculated',
        'field_uwwboddischargecalculated' => 'Discharged load BOD-tot Calculated',
        'field_uwwboddischargeestimated'  => 'Discharged load BOD-tot Estimated',
        'field_uwwcoddischargecalculated' => 'Discharged load COD-tot Calculated',
        'field_uwwcoddischargeestimated'  => 'Discharged load COD-tot Estimated',
        'field_uwwndischargeestimated'    => 'Discharged load N-tot Estimated',
        'field_uwwpdischargecalculated'   => 'Discharged load P-tot Calculated',
        'field_uwwpdischargeestimated'    => 'Discharged load P-tot Estimated',
        'field_uwwbodincomingestimated'   => 'Incoming load BOD-tot Estimated',
        'field_uwwcodincomingestimated'   => 'Incoming load COD-tot Estimated',
        'field_uwwnincomingestimated'     => 'Incoming load N-tot Estimated',
        'field_uwwpincomingestimated'     => 'Incoming load P-tot Estimated',
        'field_uwwndischargecalculated'   => 'Discharged load N-tot Calculated',
    );     
    
    foreach($list_field as $field_name => $new_label) {
        $field_instance = field_info_instance('node', $field_name, 'uwwtp');
        if (is_null($field_instance)) {
            $msg = "Unknown field instance : $field_name => $new_label";
            uwwtd_install_trace($msg);
            $msg_error .= $msg . "\n";
            continue;
        }
        $field_instance['label'] = $new_label;
        try {
            field_update_instance($field_instance);
        } catch (Exception $e) {
            $msg = "Error update field instance : $field_name => $new_label" . "\n";
            $msg .= $e->getMessage() . "\n"; 
            uwwtd_install_trace($msg);
            $msg_error .= $msg . "\n";    
        }      
    }
    
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_BigCity');
    uwwtd_create_or_replace_view('UWWTD_Compliance_Agglo');
    uwwtd_create_or_replace_view('UWWTD_Compliance_UWWTP');
    uwwtd_create_or_replace_view('UWWTD_DischargePoint');
    uwwtd_create_or_replace_view('UWWTD_ReceivingArea');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_create_or_replace_view('UWWTD_UWWTPs_Agglo');    
    
    if ('' !== $msg_error) {
        throw new DrupalUpdateException($msg_error);
    }
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }      
} 

/**
 * Delete all view creating in the UI
 * After this activate module uwwtd_views 
 */ 
function uwwtd_update_7104(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    $msg_error = '';
    $list_view = array(
        'agglomeration_conformity',
        'uwwtp_treatment',
        'uwwtp_map',
        'waste_water_network',
        'agglomeration',
        'data_deletion',
        'uwwtd_error_list',
        'test_receiving_areas',    
    );
    ctools_include('export');    
    foreach ($list_view as $view_name) {
        $view = ctools_export_crud_load('views_view', $view_name);
        if ($view) {
            try {
                $view->delete();
                uwwtd_install_trace('delete view ' . $view_name);
            } catch (Exception $e) {
                $msg = "Error, can\'t delete view " . $view_name . "\n" . $e->getMessage();
                uwwtd_install_trace($msg);
                $msg_error .= $msg;    
            }            
        } else {
            uwwtd_install_trace('view don\'t exists, can\'t delete view ' . $view_name);
        }
    }
    
    if ('' !== $msg_error) {
        throw new DrupalUpdateException($msg_error);
    }
    
    if (false === module_enable(array('uwwtd_views'))) {
        $msg = "Error, the module uwwtd_views can\'t be enabled, see in module page if a dependency is needed or if this module is installed";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }          
}
/**
 * replace all map and overlay previously created
 */ 
function uwwtd_update_7105(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    
    $list_map = array(
        'agg_compliance_map.inc',  //agglomeration/compliance
        'waste_water_treatment_network_map.inc', //block home       
    );
    $list_overlay = array(
        'agglomerations.inc', //home
        'compliance_map.inc', //agglomeration/compliance
        'dcp.inc',            //home
        'uwwtp.inc',         //home
    ); 
    $list_style = array(
        'agglomerations_style.inc',
        'carr_bleu.inc',
//         'discharge_points_style.inc',
        'triangle_violet.inc',
//         'waste_water_treatment_plant_style.inc',
    );        
    $path = drupal_get_path('module', 'uwwtd') . '/script/openlayers/';
    $pathtomap     = $path . 'map/'; 
    $pathtooverlay = $path . 'overlay/';
    $pathtostyle = $path . 'style/';
    $msgexception = ''; 
    
    foreach($list_overlay as $filename) {
        include($pathtooverlay . $filename);
        
        uwwtd_install_trace($pathtooverlay . $filename);
        
        if (! isset($openlayers_layers)) {
            uwwtd_install_trace('Error on ' . $pathtooverlay . $filename . '.$openlayers_layers don\'t exists.');
        }  
        
        if (isset($openlayers_layers)) {
            $row = array();
            $row['name'] = $openlayers_layers->name;
            $row['title'] = $openlayers_layers->title;
            $row['description'] = $openlayers_layers->description;
            $row['data'] = $openlayers_layers->data;
//             $result = drupal_write_record('openlayers_layers', $row, 'name');
//             echo '"'.$result.'"'; //2 = updatek, 1  insert, false == error
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_layers', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers layer ' . $filename . '('.$msgresult.')'."\n";
            }
            uwwtd_install_trace('layer ' . $filename . ' result : ' . $msgresult);            
        }
    }
       
    foreach($list_map as $filename) {
        include($pathtomap . $filename);
        if (isset($openlayers_maps)) {
            $row = array();
            $row['name'] = $openlayers_maps->name;
            $row['title'] = $openlayers_maps->title;
            $row['description'] = $openlayers_maps->description;
            $row['data'] = $openlayers_maps->data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_maps', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers map ' . $filename . '('.$msgresult.')'."\n";
            }
                        
            uwwtd_install_trace('map ' . $filename . ' result : ' . $msgresult);                                
        }
    }
    
    foreach($list_style as $filename) {
        include($pathtostyle . $filename);
        if (isset($openlayers_styles)) {
            $row = array();
            $row['name'] = $openlayers_styles->name;
            $row['title'] = $openlayers_styles->title;
            $row['description'] = $openlayers_styles->description;
            $row['data'] = $openlayers_styles->data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_styles', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers style ' . $filename . '('.$msgresult.')'."\n";
            }
                        
            uwwtd_install_trace('style ' . $filename . ' result : ' . $msgresult);                             
        }
    }    

    if ($msgexception != '') {
        throw new DrupalUpdateException($msgexception);
    }
//     throw new DrupalUpdateException($msgexception . 'test');
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
} 

/**
 * activate new block home
 * and desactivate home block view map 
 */ 
function uwwtd_update_7106(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    _block_rehash('uwwtd'); //theme name here
    //Change block settings old view
      db_update('block')
      ->fields(array(
          'pages' => "",
          'visibility' => 1,
      ))
      ->condition('module', 'views')
      ->condition('delta', 'waste_water_network-block_1')
      ->execute();
      
      
     db_merge('block')
        ->key(array(
          'theme' => 'uwwtd',
          'delta' => 'map_home',
          'module' => 'uwwtd',
        ))
        ->fields(array(
          'region' => 'content',
          'status' => 1,
          'weight' => -13,
          'pages' => "<front>",
          'visibility' => 1,
        ))
        ->execute();
                  
    drupal_flush_all_caches();
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Set country code for each country, set new map/layer, set map configuration accordingly
 */ 
function uwwtd_update_7107(&$context = null)
{
    global $conf;
    uwwtd_install_trace(__FUNCTION__);
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
//     uwwtd_install_trace(var_export($path, true));
    include($path);
    
    if (false === isset($country_config)) {
        throw new DrupalUpdateException('Can\'t find the config country file in '. $path);
    }
    
    $error_message = 'Please, configure the file ' . DRUPAL_ROOT . 'sites/default/settings.php. Add the line
        $conf[\'siif_eru_country_code\'] = \'XX\';  
        at the end of the file and replace the XX by your country code you will find in this list ('.implode(',', array_keys($country_config)).')';
        
    if (! isset($conf['siif_eru_country_code'])) {            
        throw new DrupalUpdateException($error_message);
    }
//     
//     set database country code
    if (false === in_array($conf['siif_eru_country_code'], array_keys($country_config))) {
        throw new DrupalUpdateException($error_message);    
    }
    
    $country_code_to_save = strtolower($conf['siif_eru_country_code']);
    variable_set('siif_eru_country_code', $country_code_to_save);
    $country_code = variable_get('siif_eru_country_code', '-1');
    
    if ($country_code != $country_code_to_save) {
        throw new DrupalUpdateException('An error occured when saving the country code from settings.php');    
    }
    
    uwwtd_update_map_overlay($country_config, $country_code); 
    
    //set version
    variable_set('siif_eru_version', __FUNCTION__);

    drupal_flush_all_caches();
        
//     throw new DrupalUpdateException('test7107');
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Rebuild all cache data for all year
 */ 
function uwwtd_update_7108(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    drupal_load('module', 'uwwtd');
    uwwtd_update_cache_data();
    variable_set('siif_eru_version', __FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Rebuild map and layer 
 */ 
function uwwtd_update_7109(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code);    
    variable_set('siif_eru_version', __FUNCTION__);
    drupal_flush_all_caches();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }         
}

/**
 * Replace View UWWTD_DischargePoint (error in left join)
 */ 
function uwwtd_update_7110(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    uwwtd_delete_view('UWWTD_DischargePoint'); 
    uwwtd_create_or_replace_view('UWWTD_DischargePoint');    
    drupal_flush_all_caches();
    drupal_load('module', 'uwwtd');
    uwwtd_update_cache_data();
    variable_set('siif_eru_version', __FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }           
}

/**
 * Delete unused sql view UWWTD_BigCity  UWWTD_Compliance_Agglo  UWWTD_Compliance_UWWTP UWWTD_UWWTPs_Agglo
 */ 
function uwwtd_update_7111(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    uwwtd_delete_view('UWWTD_BigCity');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_UWWTPs_Agglo');
    variable_set('siif_eru_version', __FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }           
}

/**
 * Delete menu main and import new one
 * update openlayer overlay  and add new field field_siteid in content_type agglo_uww   
 */ 
function uwwtd_update_7112(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    //check if module install
    //http://ftp.drupal.org/files/projects/menu_import-7.x-1.7.tar.gz
//     if(false === module_exists('menu_import')) {
//         throw new DrupalUpdateException('please install and enable the module menu_import for drupal 7 and continue the update process. (http://ftp.drupal.org/files/projects/menu_import-7.x-1.7.tar.gz)');    
//     }
    
    
    if (false === module_enable(array('menu_import'))) {
        throw new DrupalUpdateException("Error, the module menu_import can\'t be enabled, see in module page if a dependency is needed or if this module is installed");
    }
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
        
    menu_delete(array('menu_name' => $menu['menu_name']));
    
    menu_save($menu);
    //SEE menu_link_save($item); to create menu link
    
    //create a page for new download menu
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Download";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/download'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field
    
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid
    

    //install new main menu    
    uwwtd_install_menu($menu, 'main-menu7112.json');   
    
    //update on overlay waste water (add a s to agglomeration)    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code, array('waste_water_treatment_network_map.inc'), array('-'), array('-'));
    
    //add new field field_siteid in content_type agglo_uww                                                            
    field_cache_clear();    

    $instance = array(
        'field_name' => 'field_siteid',
        'entity_type' => 'node',
        'bundle' => 'agglo_uww',
      );

    $instance_exist = field_info_instance('node', $instance['field_name'], 'agglo_uww');
    if (! $instance_exist ) {
        $result = field_create_instance($instance);
    }
             
    drupal_flush_all_caches();
    
    variable_set('siif_eru_version', __FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Rebuild map and layer and main menu    
 */ 
function uwwtd_update_7113(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__); 
    //install new main menu
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    drupal_flush_all_caches();     //needto clear cache, drupal must know the unew url uwwtps/pressure exist in hook_menu uwwtd_menu besfore creating new menu    
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7113.json');   
    
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');                              
    uwwtd_update_map_overlay($country_config, $country_code, array('uwwtp_pressure_map.inc'), 
                                                                array('uwwtp_bod_pressure_.inc',
                                                                        'uwwtp_cod_pressure_.inc',
                                                                        'uwwtp_n_pressure_.inc',
                                                                        'uwwtp_p_pressure_.inc',), 
                                                                array('-'));    
                                                                
    

                                                                    
    variable_set('siif_eru_version', __FUNCTION__);
    drupal_flush_all_caches();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }          
}

/**
 * Recall redo import main menu
 */ 
function uwwtd_update_7114(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    //install new main menu
    uwwtd_update_7113();
    variable_set('siif_eru_version', __FUNCTION__);
    drupal_flush_all_caches();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Import main menu
 */ 
function uwwtd_update_7115(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    //install new main menu
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7115.json');   
    variable_set('siif_eru_version', __FUNCTION__);
    
//     throw new DrupalUpdateException(__FUNCTION__); 
    drupal_flush_all_caches();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * add new menu in management menu
 */ 
function uwwtd_update_7116(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);

    
    $list = menu_load_links('management');
//     dsm($list);
//     $bexist = false;
    $plid = -1;
    
    foreach($list as $one_menu) {
        if ($one_menu['link_path'] == drupal_get_normal_path('admin/config')) {
//             dsm($one_menu);
            $plid = $one_menu['mlid']; 
//             $bexist = true;
            break;  
        }
    }
//     dsm($plid);
    if ($plid == -1) {
        throw new DrupalUpdateException('Error, can\'t find menu admin/config in manageùent menu');     
    }  
    uwwtd_install_trace('find mlid admin/config in management menu : ' . $plid);  
//     $plid = 8;    //2 is the id of menu management/Configuration on all site where we want to insert the new link
    $menu= array(
        'link_path' => drupal_get_normal_path('admin/config/uwwtd') ,
        'link_title' => 'uwwtd configuration',
        'description' => 'Settings for the uwwtd application' ,
        'menu_name' => 'management',
        'weight' => 0,
        'expanded' => true,
        'mlid' => 0, 
        'plid' => $plid,
        'customized' => 1,
    );

    $mlid = menu_link_save($menu);
//     dsm($mlid);
    menu_cache_clear_all();
    $plid = $mlid;
    $menu= array(
        'link_path' => 'admin/configuration/uwwtd/extlinks' ,
        'link_title' => 'uwwtd external links',
        'description' => 'Configure your external links' ,
        'menu_name' => 'management',
        'weight' => 0,
//         'expanded' => false,
        'mlid' => 0, 
        'plid' => $plid,
        'customized' => 1,
    );    
    $mlid = menu_link_save($menu);
//     dsm($mlid);    
    menu_cache_clear_all();

    variable_set('siif_eru_version', __FUNCTION__);
    
//     throw new DrupalUpdateException(__FUNCTION__); 
    //drupal_flush_all_caches();
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Create new page disclaimer and update content block footer
 */ 
function uwwtd_update_7117(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    $pathpage = drupal_get_path('module', 'uwwtd') . '/script/page/disclaimer7117.inc';   
    
    //create a page for new download menu
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Disclaimer";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/disclaimer'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
    
    uwwtd_install_trace($pathpage);
                               
    $node->body['und'][0]['value'] = str_replace('[#COUNTRY#]', $country_config[$country_code]['name'], file_get_contents($pathpage));
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field
    
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid
    uwwtd_install_trace('page nid = ' . $node->nid);
    $pathbock = drupal_get_path('module', 'uwwtd') . '/script/block/footer7117.inc';
    uwwtd_install_trace($pathbock);
    //update block
    _block_rehash('uwwtd'); //theme name here
    
    //find the bid of the footer block
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Footer content', '=');
	$result = $query->execute();
    $bidfooter = -1;
	foreach($result as $row){
        $bidfooter = $row->bid;
        break;
	}
    
    if ($bidfooter == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for footer block');
    }        
    uwwtd_install_trace('find bid footer in block_custom table : ' . $bidfooter);
    //Change block settings old view
      db_update('block_custom')
      ->fields(array(
          'body' => file_get_contents($pathbock),
      ))
      ->condition('bid', $bidfooter)
      ->execute();
      
    //find bid of block home page
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Home page - introduction', '=');
	$result = $query->execute();
    $bidhome = -1;
	foreach($result as $row){
        $bidhome = $row->bid;
        break;
	}
    
    if ($bidhome == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for home page block');
    }        
    uwwtd_install_trace('find bid home page in block_custom table : ' . $bidhome);
    
      db_update('block_custom')
      ->fields(array(
          'body' => $country_config[$country_code]['block_homepage'],
      ))
      ->condition('bid', $bidhome)
      ->execute();
          

    ///////////////////////////////////
    //update regulation page
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Regulations', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $country_config[$country_code]['page_regulations'];
//         $node->body['en'][0]['value'] = $country_config[$country_code]['page_regulations'];
        node_save($node);
        break;
	}    

    ///////////////////////////////////
    //update credits page
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Credits', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $country_config[$country_code]['page_credits'];
//         $node->body['en'][0]['value'] = $country_config[$country_code]['page_credits'];
        node_save($node);
        break;
	}    
    
    ///////////////////////////////////
    //update homepage page 
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Home page', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $country_config[$country_code]['page_homepage'];
//         $node->body['en'][0]['value'] = $country_config[$country_code]['page_homepage'];
        node_save($node);
        break;
	}       

    ///////////////////////////////////
    drupal_flush_all_caches();    
    
    variable_set('siif_eru_version', __FUNCTION__);
    
//     throw new DrupalUpdateException(__FUNCTION__);
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  
}

// function uwwtd_update_7123()
// {
//     uwwtd_update_7117();
// }

/**
 * Import main menu
 */ 
function uwwtd_update_7118(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    //install new main menu
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7118.json');   
    variable_set('siif_eru_version', __FUNCTION__);
    
//     throw new DrupalUpdateException(__FUNCTION__); 
    drupal_flush_all_caches();
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Add a new field in content type agglomeration :  field_aggart3addcompliance 'Additionnal Compliance article3'
 */ 
function uwwtd_update_7119(&$context = null) 
{
   
    uwwtd_install_trace(__FUNCTION__);
    
    field_cache_clear();    
//     $field = array (
//       'field_name' => 'field_aggart3addcompliance',
//       'type' => 'list_text',
//       'settings' => array (
//         'allowed_values' => array (
//           'AddQC' => 'Not compliant',
//         ),
//         'allowed_values_function' => '',
//       ),
//     );
//     
//     $instance = array(
//         'field_name' => $field['field_name'],
//         'entity_type' => 'node',
//         'bundle' => 'agglomeration',
//         'label' => 'Additionnal Compliance article3',
//       );  
//           
//     field_delete_instance($instance);
//     field_delete_field($field['field_name']);
        
    $field = array (
      'field_name' => 'field_aggart3addcompliance',
      'type' => 'list_text',
      'settings' => array (
        'allowed_values' => array (
          'AddQC' => 'Not compliant',
        ),
        'allowed_values_function' => '',
      ),
    );    
    if (! field_info_field($field['field_name']) ) {
        $result = field_create_field($field);
    }

    $instance = array(
        'field_name' => $field['field_name'],
        'entity_type' => 'node',
        'bundle' => 'agglomeration',
        'label' => 'Additionnal Compliance article3',
      );
    $instance_exist = field_info_instance('node', $instance['field_name'], 'agglomeration');
    if (! $instance_exist ) {
        $result = field_create_instance($instance);
    }
    
    variable_set('siif_eru_version', __FUNCTION__);

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }         
}

/**
 * Update page content (useful links, ressources,)
 */ 
function uwwtd_update_7120(&$context = null) {
   
    uwwtd_install_trace(__FUNCTION__);
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    
    if ($country_code == '-1') {
        throw new DrupalUpdateException('Can\'t detect country code.');    
    }    
    
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Useful links', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
        $path_usefullinks_country = drupal_get_path('module', 'uwwtd') . '/script/page/useful_links_'.$country_code.'.inc';
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = file_get_contents($path_usefullinks_country);
//         $node->body['en'][0]['value'] = file_get_contents($path_usefullinks_country);
        node_save($node);
        break;
	}
    
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
        $path_usefullinks_country = drupal_get_path('module', 'uwwtd') . '/script/page/ressource_'.$country_code.'.inc';
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = file_get_contents($path_usefullinks_country);
//         $node->body['en'][0]['value'] = file_get_contents($path_usefullinks_country);
        node_save($node);
        break;
	}    
    
//     throw new DrupalUpdateException(__FUNCTION__); 
    variable_set('siif_eru_version', __FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }         
}

/**
 * Import main menu, change mail website contact and mail contact page per country, add
 * new content type article 17, delete old article 17content type  
 */ 
function uwwtd_update_7121(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    //install new main menu
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7121.json');  
    $list = menu_load_links('menu-editorial-menu');
//     dsm($list);
    $bexist = false;
    foreach($list as $one_menu) {
        if ($one_menu['link_path'] == drupal_get_normal_path('register')) {
//             dsm($one_menu);
            $bexist = true;
            break;  
        }
    }
    
    if (false === $bexist) {    
        $menu= array(
            'link_path' => drupal_get_normal_path('register') ,
            'link_title' => 'Register',
            'description' => '' ,
            'menu_name' => 'menu-editorial-menu',
            'weight' => -45,
            //'expanded' => true,
            'mlid' => 0, 
            'plid' => 0,
            'customized' => 1,
        );
    
        $mlid = menu_link_save($menu);
    //     dsm($mlid);
    }
    menu_cache_clear_all();
    
//     throw new DrupalUpdateException(__FUNCTION__); 
    
    //change mail
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    
    if ($country_code == '-1') {
        throw new DrupalUpdateException('Can\'t detect country code.');    
    } 
    
    //change mail cnfigured
    if ('l.guedet@oieau.fr' == variable_get('site_mail')) {
        variable_set('site_mail', $country_config[$country_code]['website_mail']);
    }
    
    
    variable_set('site_name', 'UWWTD SIIF '.$country_config[$country_code]['name'].' National Node');

    //change mail cnfigured
    db_merge('contact')
    ->fields(array(
            'recipients' => $country_config[$country_code]['contact_mail'],
            'reply' => '',
            ))
    ->condition('category', 'Website feedback', '=')
    ->condition('recipients', 'l.guedet@oieau.fr', '=')
    ->execute();

    field_cache_clear(); 
    
    //-------------------------------------------------------
    //delete field article 17 (and delete field field_articl17 of bundle uwwtp and agglomeration)
    //delete all instance of the field on each bundle and delete the field
    field_delete_field('field_article17');
//     throw new DrupalUpdateException(__FUNCTION__);     
    //check if table    	drupal_field_data_field_article17 and drupal_field_revision_field_article17 still exists
    //check table drupal_field_config_instance et drupal_field_config dans fieldname like 17
    
    //delete contenttype article17
    
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
    $result = db_query($sql, array(':type' => 'article_17'));
    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }
    // Delete all the nodes at once
    // http://api.drupal.org/api/function/node_delete_multiple/7
    node_delete_multiple($nids);
    // Delete our content type
    // http://api.drupal.org/api/function/node_type_delete/7
    node_type_delete('article_17');
    
    
    db_delete('field_config_instance')
    ->condition('field_name', 'field_article17', '=')
    ->condition('entity_type', 'node', '=')
    ->condition('bundle', 'uwwtp', '=')
    ->condition('deleted', '1', '=')
    ->execute();
    
    db_delete('field_config_instance')
    ->condition('field_name', 'field_article17', '=')
    ->condition('entity_type', 'node', '=')
    ->condition('bundle', 'agglomeration', '=')
    ->condition('deleted', '1', '=')
    ->execute();    
    
    db_delete('field_config')
    ->condition('field_name', 'field_article17', '=')
    ->condition('deleted', '1', '=')
    ->execute();   
    
//     throw new DrupalUpdateException(__FUNCTION__);       
    //-------------------------------------------------------          
    //add content type article_17 agglo et article 17 uwwtp
    //article_17_uwwtp            Article 17 uwwtp
    if (! node_type_load('article_17_uwwtp')) {
        $t = get_t();
        $node_example = array(
            'type' => 'article_17_uwwtp',
            'name' => $t('Article 17 uwwtp'),
            'base' => 'node_content',
            'description' => $t(''),
            'body_label' => $t(''),
            'custom' => false,
            'modified' => true,
            'locked' => false,            
            'disabled' => false,
        );
        $content_type = node_type_set_defaults($node_example);
//         node_add_body_field($content_type);
        // Check if we create content type or update.
        $status = node_type_save($content_type);
        // Replacement rule for the messages.
        $t_args = array('%name' => $content_type->name);
        if ($status == SAVED_UPDATED) { // update case
            drupal_set_message($t('The content type %name has been updated.', $t_args));
        } elseif ($status == SAVED_NEW) { // create case
            drupal_set_message($t('The content type %name has been added.', $t_args));
            watchdog('node', 'Added content type %name.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types')); 
        }
//         throw new DrupalUpdateException(__FUNCTION__); 
    }
    //article_17_agglomeration    Article 17 agglomeration
    if (! node_type_load('article_17_agglomeration')) {
        $t = get_t();
        $node_example = array(
            'type' => 'article_17_agglomeration',
            'name' => $t('Article 17 agglomeration'),
            'base' => 'node_content',
            'description' => $t(''),
            'body_label' => $t(''),
            'custom' => false,
            'modified' => true,
            'locked' => false,            
            'disabled' => false,
        );
        $content_type = node_type_set_defaults($node_example);
//         node_add_body_field($content_type);
        // Check if we create content type or update.
        $status = node_type_save($content_type);
        // Replacement rule for the messages.
        $t_args = array('%name' => $content_type->name);
        if ($status == SAVED_UPDATED) { // update case
            drupal_set_message($t('The content type %name has been updated.', $t_args));
        } elseif ($status == SAVED_NEW) { // create case
            drupal_set_message($t('The content type %name has been added.', $t_args));
            watchdog('node', 'Added content type %name.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types')); 
        }    
//         throw new DrupalUpdateException(__FUNCTION__); 
    }
    //-------------------------------------------------------
    //add new field
    $agglo_field = array(
        'field_anneedata' => array(
            'field_name' => 'field_anneedata',
            'type' => 'list_text',            	//List (text)        		Select list
            'widget' => array(
                'type' => 'options_select',
            ), 
            'label' => 'Year of data',       
        ),
        'field_art17agg_link_agglo' => array(            // Node reference        	Autocomplete text field
            'field_name' => 'field_art17agg_link_agglo',
            'type' => 'node_reference',            
            'widget' => array(
            'type' => 'node_reference_autocomplete',
            ), 
            'label' => 'Linked Agglomeration',           
        ),
        'field_art17agg_aggcode' => array(                //Text                 	Text field
            'field_name' => 'field_art17agg_aggcode',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'ID of the agglomeration',          
        ),                                                 
        'field_art17agg_aggname' => array(                 // Text              	Text field
            'field_name' => 'field_art17agg_aggname',
            'type' => 'text',            	
            'widget' => array(
             'type' => 'text_textfield',
            ), 
            'label' => 'Name of the agglomeration related to this UWWTP',        
        ),
        'field_art17_flaggstatus' => array(               //Text                	Text field
            'field_name' => 'field_art17_flaggstatus',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'Status of the agglomeration at the reference reporting year (Not compliant/Pending deadlines)',        
        ),
        'field_art17_flaggreasons' => array(                  	//Long text                 	Text area (multiple rows)
            'field_name' => 'field_art17_flaggreasons',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Identified reason(s) for non compliance',        
        ),
        'field_art17_flaggmeasures' => array(                 //	Long text                	Text area (multiple rows)
            'field_name' => 'field_art17_flaggmeasures',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)',        
        ),
        'field_art17_flaggexpecdatestart' => array(              //	Date                    	Text field
            'field_name' => 'field_art17_flaggexpecdatestart',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Date or expected date for completion of preparatory measures for the collecting system or IAS (planning, design, procurement, c',
        ),
        'field_art17_flaggexpecdatestartw' => array(              //	Date                    	Text field
            'field_name' => 'field_art17_flaggexpecdatestartw',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Start date or expected start date for works on the collecting systems or IAS',
        ),
        'field_art17_flaggexpecdatecomple' => array(             	//Date                     	Text field
            'field_name' => 'field_art17_flaggexpecdatecomple',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Expected date of completion of the collecting system or IAS works',        
        ),                                                        
        'field_art17_flagginv' => array(                          //	Decimal                  	Text field
            'field_name' => 'field_art17_flagginv',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Forecast investment cost for the collecting system or IAS (as in the national plan)',        
        ),
        'field_art17_flaggeufundname' => array(                 //	Long text      	Text area (multiple rows)
            'field_name' => 'field_art17_flaggeufundname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of EU fund planned to be used to complete the collecting system or IAS (if any)',        
        ),
        'field_art17_flaggeufund' => array(                      //Integer                    	Text field
            'field_name' => 'field_art17_flaggeufund',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of (planned) EU funds likely to be requested to complete the collecting system or IAS (if any)',        
        ),                                                       
        'field_art17_flaggcomments' => array(                 //	Long text            	Text area (multiple rows)
            'field_name' => 'field_art17_flaggcomments',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Any relevant comment on collecting system or IAS',        
        ),
        'field_art17_flaggexpload' => array(                   // Integer                     	Text field
            'field_name' => 'field_art17_flaggexpload',
            'type' => 'number_integer',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Expected generated load of the agglomeration at the exepected date of compliance',        
        ),
        'field_art17_flaggexploadcoll' => array(                 //	Decimal                 	Text field
            'field_name' => 'field_art17_flaggexploadcoll',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Expected rate of the generated load of agglomeration collected through collecting systems at the expected date of compliance',        
        ),                                                                                  
        'field_art17_flaggexploadias' => array(                 //	Decimal                  	Text field
            'field_name' => 'field_art17_flaggexploadias',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Expected rate of the generated load of the agglomeration addressed throug IAS at the expected date of compliance',        
        ),
        'field_art17_flaggotherfund' => array(                // 	Integer                    	Text field
            'field_name' => 'field_art17_flaggotherfund',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of funds likely to be given to complete the collecting system or IAS (if any)',        
        ),
        'field_art17_flaggotherfundname' => array(          	//Long text        	Text area (multiple rows)
            'field_name' => 'field_art17_flaggotherfundname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of the entity planned to give fund to complete the collecting system or IAS (if any)',        
        ),
        'field_art17_flaggloan' => array(                    //	Integer               Text field
            'field_name' => 'field_art17_flaggloan',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of loan likely to be granted to complete the collecting system or IAS (if any)',        
        ),                                                                               	
        'field_art17_flaggloanname' => array(              	//Long text      	Text area (multiple rows)
            'field_name' => 'field_art17_flaggloanname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of the entity planned to give loan to complete the collecting system or IAS (if any)',        
        ),                                                                                                                                                                
    );
    
    $uwwtp_field = array(
        'field_anneedata' => array(       
            'field_name' => 'field_anneedata',
            'type' => 'list_text',            	
            'widget' => array(
            'type' => 'options_select',
            ), 
            'label' => 'Year of data',        
        ),  
        'field_art17uwwtp_link_uwwtp' => array(       
            'field_name' => 'field_art17uwwtp_link_uwwtp',
            'type' => 'node_reference',            	
            'widget' => array(
            'type' => 'node_reference_autocomplete',
            ), 
            'label' => 'Linked Treatment Plant',        
        ),  
        'field_art17uwwtp_uwwcode' => array(       
            'field_name' => 'field_art17uwwtp_uwwcode',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'ID of UWWTP/ collecting system without treatment',        
        ),  
        'field_art17uwwtp_uwwname' => array(       
            'field_name' => 'field_art17uwwtp_uwwname',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'Name of UWWTP/ collecting system without treatment',        
        ),  
        'field_art17uwwtp_aggcode' => array(       
            'field_name' => 'field_art17uwwtp_aggcode',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'ID of the agglomeration related to this UWWTP',        
        ),  
        'field_art17uwwtp_aggname' => array(       
            'field_name' => 'field_art17uwwtp_aggname',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'Name of the agglomeration related to this UWWTP',        
        ),  
        'field_art17_flatpstatus' => array(       
            'field_name' => 'field_art17_flatpstatus',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'Status of the UWWTP at the reference reporting year (Not compliant/Pending deadlines)',        
        ),  
        'field_art17_flatpreasons' => array(       
            'field_name' => 'field_art17_flatpreasons',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Identified reason(s) for non compliance',        
        ),  
        'field_art17_flatpmeasures' => array(       
            'field_name' => 'field_art17_flatpmeasures',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Measure(s) to reach the compliance needed for UWWTP',        
        ),  
        'field_art17_flatpexpload' => array(       
            'field_name' => 'field_art17_flatpexpload',
            'type' => 'number_integer',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Load entering the UWWTP at the expected date of compliance (as planned)',        
        ),  
        'field_art17_flatpexpcapacity' => array(       
            'field_name' => 'field_art17_flatpexpcapacity',
            'type' => 'number_integer',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Organic design capacity UWWTP (as planned)',        
        ),  
        'field_art17_flatptexpectreatment' => array(       
            'field_name' => 'field_art17_flatptexpectreatment',
            'type' => 'text',            	
            'widget' => array(
            'type' => 'text_textfield',
            ), 
            'label' => 'Type of treatment UWWTP (as planned)',        
        ),  
        'field_art17_flatpexpecdatestart' => array(       
            'field_name' => 'field_art17_flatpexpecdatestart',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Date or expected date of completion of preparatory measures (planning, design, etc)',        
        ),  
        'field_art17_flatpexpecdatestartw' => array(       
            'field_name' => 'field_art17_flatpexpecdatestartw',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Date or expected start date for works',        
        ),  
        'field_art17_flatpexpecdatecomple' => array(       
            'field_name' => 'field_art17_flatpexpecdatecomple',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Date or expected date of completion of works',        
        ),  
        'field_art17_flatpexpecdateperfor' => array(       
            'field_name' => 'field_art17_flatpexpecdateperfor',
            'type' => 'datetime',            	
            'widget' => array(
            'type' => 'date_text',
            ), 
            'label' => 'Expected date of compliance (12 months of compliant samples) ',        
        ),  
        'field_art17_flatpinv' => array(       
            'field_name' => 'field_art17_flatpinv',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Forecast cost investment needed for the UWWTP (as in the national plan)',        
        ),  
        'field_art17_flatpeufundname' => array(       
            'field_name' => 'field_art17_flatpeufundname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of EU fund planned to be used UWWTP (if any)',        
        ),  
        'field_art17_flatpeufund' => array(       
            'field_name' => 'field_art17_flatpeufund',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of (planned) EU funding needed',        
        ),  
        'field_art17_flatpcomments' => array(       
            'field_name' => 'field_art17_flatpcomments',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Any relevant comment on UWWTP',        
        ),  
        'field_art17_flatpexploadtruck' => array(       
            'field_name' => 'field_art17_flatpexploadtruck',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Expected rate of entering load transported to this UWWTP by truck at the expected date of compliance',        
        ),  
        'field_art17_flatpotherfund' => array(       
            'field_name' => 'field_art17_flatpotherfund',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of funds likely to be given to complete the UWWTP (if any)',        
        ),  
        'field_art17_flatpotherfundname' => array(       
            'field_name' => 'field_art17_flatpotherfundname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of the entity planned to give fund to complete UWWTP (if any)',        
        ),  
        'field_art17_flatploan' => array(       
            'field_name' => 'field_art17_flatploan',
            'type' => 'number_decimal',            	
            'widget' => array(
            'type' => 'number',
            ), 
            'label' => 'Amount of loan likely to be granted to complete the UWWTP (if any)',        
        ),  
        'field_art17_flatploanname' => array(       
            'field_name' => 'field_art17_flatploanname',
            'type' => 'text_long',            	
            'widget' => array(
            'type' => 'text_textarea',
            ), 
            'label' => 'Name of the entity planned to give loan to complete the UWWTP (if any)',        
        ),                                                                                                                                                                                                     
    );
//     throw new DrupalUpdateException(__FUNCTION__); 
    foreach ($agglo_field as $newfield) {
        if (! field_info_field($newfield['field_name']) ) {
            unset($newfield['label']);
            unset($newfield['widget']);
            $result = field_create_field($newfield);
        }
    }
    
    foreach ($uwwtp_field as $newfield) {
        if (! field_info_field($newfield['field_name']) ) {
            unset($newfield['label']);
            unset($newfield['widget']);
            $result = field_create_field($newfield);
        }
    }    
//     throw new DrupalUpdateException(__FUNCTION__); 
    //-------------------------------------------------------        
    //attach new field to new bundle
    foreach ($agglo_field as $newfield) {
//         dsm($newfield);
        $instance_exist = field_info_instance('node', $newfield['field_name'], 'article_17_agglomeration');
//         dsm($instance_exist);        
        if (! $instance_exist ) {
            $instance = array(
                'field_name' => $newfield['field_name'],
                'entity_type' => 'node',
                'bundle' => 'article_17_agglomeration',
                'label' => $newfield['label'],
                'widget' => $newfield['widget'],
              );
        
            $result = field_create_instance($instance);
//             dsm($result);
        }       
    }
    
    foreach ($uwwtp_field as $newfield) {
//         dsm($newfield);
        $instance_exist = field_info_instance('node', $newfield['field_name'], 'article_17_uwwtp');
//         dsm($instance_exist);        
        if (! $instance_exist ) {
            $instance = array(
                'field_name' => $newfield['field_name'],
                'entity_type' => 'node',
                'bundle' => 'article_17_uwwtp',
                'label' => $newfield['label'],
                'widget' => $newfield['widget'],
              );
        
            $result = field_create_instance($instance);
//             dsm($result);
        }       
    } 
    
    //------------------------------------------
    //add new field to bundle agglomeration and uwwtp
    $agglo_field = array(     
        'field_article17_agglo' => array(       
            'field_name' => 'field_article17_agglo',
            'type' => 'node_reference',            	
            'widget' => array(
                'type' => 'node_reference_autocomplete',
            ), 
            'label' => 'Article 17 Agglo',        
        ),  
    ); 
    $uwwtp_field = array(
        'field_article17_uwwtp' => array(       
            'field_name' => 'field_article17_uwwtp',
            'type' => 'node_reference',            	
            'widget' => array(
                'type' => 'node_reference_autocomplete',
            ), 
            'label' => 'Article 17 Uwwtp',        
        ),  
    );

    foreach ($agglo_field as $newfield) {
        if (! field_info_field($newfield['field_name']) ) {
            unset($newfield['label']);
            unset($newfield['widget']);
            $result = field_create_field($newfield);
        }
    }
    
    foreach ($uwwtp_field as $newfield) {
        if (! field_info_field($newfield['field_name']) ) {
            unset($newfield['label']);
            unset($newfield['widget']);
            $result = field_create_field($newfield);
        }
    }  
    
    foreach ($agglo_field as $newfield) {
//         dsm($newfield);
        $instance_exist = field_info_instance('node', $newfield['field_name'], 'agglomeration');
//         dsm($instance_exist);        
        if (! $instance_exist ) {
            $instance = array(
                'field_name' => $newfield['field_name'],
                'entity_type' => 'node',
                'bundle' => 'agglomeration',
                'label' => $newfield['label'],
                'widget' => $newfield['widget'],
              );
        
            $result = field_create_instance($instance);
//             dsm($result);
        }       
    }
    
    foreach ($uwwtp_field as $newfield) {
//         dsm($newfield);
        $instance_exist = field_info_instance('node', $newfield['field_name'], 'uwwtp');
//         dsm($instance_exist);        
        if (! $instance_exist ) {
            $instance = array(
                'field_name' => $newfield['field_name'],
                'entity_type' => 'node',
                'bundle' => 'uwwtp',
                'label' => $newfield['label'],
                'widget' => $newfield['widget'],
              );
        
            $result = field_create_instance($instance);
//             dsm($result);
        }       
    }        
//     throw new DrupalUpdateException(__FUNCTION__); 
     
    variable_set('siif_eru_version', __FUNCTION__);
    drupal_flush_all_caches();
    
//     throw new DrupalUpdateException(__FUNCTION__);
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }      
}

/**
 * desactivate cron, change settings of field, change permission on contact form ( Use the site-wide contact form ) 
 */ 
function uwwtd_update_7122(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    
    //desactivate cron (run = never)
    variable_set('cron_safe_threshold', 0);
    
    //grant acces to menu contact for all role   
    foreach (array('anonymous user', 'authenticated user', 'administrator', 'editor') as $rolename) {
        $role = user_role_load_by_name($rolename);
        if (!$role) {
            continue;
        }
        
        user_role_grant_permissions($role->rid, array('access site-wide contact form'));
    }
    
    //change setting of field  display field_uwwwastewatertreated, change scale to 0
    $instance_info = field_info_instance('node', 'field_uwwwastewatertreated', 'uwwtp');
    if ($instance_info) {
        $instance_info['display']['default']['settings']['scale'] = 0;
        field_update_instance($instance_info);
    } 
    
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    
//     throw new DrupalUpdateException(__FUNCTION__);
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }      
}

/**
 * install new main menu,
 * create new dir for register and article17,
 * delete content basic page download,
 * change link to error page,
 * update path to wkhtml config,       
 * change user admin mail,
 * reload map pressure,
 * set new config variable,
 * add new entry for admin general config uwwtd page,
 * add help description on some field,
 * update page ressources,  
 * delete page  Useful links 
 * Change openlayers config (use local js OpenLayers.js + patch)         
 */ 
function uwwtd_update_7123(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__);
    
    ////////////////////////////////////////////////////////////////
    //install new menu
    menu_cache_clear_all();
    
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7123.json');        

    ////////////////////////////////////////////////////////////////
    //create new dir for register
	$register_dir = 'public://register';
	file_prepare_directory($register_dir, FILE_CREATE_DIRECTORY);     

    ////////////////////////////////////////////////////////////////
    //create new dir for article17
	$article17_dir = 'public://article17';
	file_prepare_directory($article17_dir, FILE_CREATE_DIRECTORY);
    
    ////////////////////////////////////////////////////////////////    
    //delete content basic page download
	$ids = array();
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Download', '=');
	$listnid = $query->execute();
	foreach($listnid as $nid){
        node_delete($nid->nid);
	}
    unset($listnid);  
    
    ////////////////////////////////////////////////////////////////
    //change link to error page
    //$plid = 8;    //2 is the id of menu management/Configuration on all site where we want to insert the new link
    $list = menu_load_links('menu-editorial-menu');
//     dsm($list);
    $bexist = false;
    foreach($list as $one_menu) {
        if ($one_menu['link_path'] == 'errors') {
//             dsm($one_menu);
            menu_link_delete($one_menu['mlid']);    
        }
        if ($one_menu['link_path'] == 'error-list') {
            $bexist = true;
        }
    }
    if (false === $bexist) {
        $menu= array(
            'link_path' => drupal_get_normal_path('error-list') ,
            'link_title' => 'List Error',
            'description' => '' ,
            'menu_name' => 'menu-editorial-menu',
            'weight' => 0,
            //'expanded' => true,
            'mlid' => 0, 
            'plid' => 0,
            'customized' => 1,
        );
    //     dsm($menu);
    
        $mlid = menu_link_save($menu);
    //     dsm($mlid);
    }
    menu_cache_clear_all(); 
    
    ////////////////////////////////////////////////////////////////
    //update path to wkhtml config       
    uwwtd_install_configure_wkhtmltopdf();
    
    ////////////////////////////////////////////////////////////////
    //change user admin mail
    $user = user_load_by_name('admin');
//     dsm($user);
    
    if ($user->mail == 'l.guedet@oieau.fr') {
        $user->mail = variable_get('site_mail');
        user_save($user);
    }
    
    ////////////////////////////////////////////////////////////////
    //reload map pressure
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    variable_set('siif_eru_country_name', $country_config[$country_code]['name']);    
    uwwtd_update_map_overlay($country_config, $country_code, array('uwwtp_pressure_map.inc'), array('-'), array('-'));
    
    ////////////////////////////////////////////////////////////////
    //set new config variable
    variable_set('display_only_active', '1');
    variable_set('min_aggenerated_display', '1999');
    variable_set('openlayers_gazetteer_geonames_username', 'uwwtd');
    
    //configure openlayers with local OpenLayers.js (2.13.1) version patched!
    // openlayers_ui_version_check Release 2.13.1
    // openlayers_source_internal_variant  original
    // openlayers_source_type  internal
    // openlayers_source_external  http://openlayers.org/api/2.13/OpenLayers.js
    // openlayers_default_map  default
    // openlayers_ui_preview_map 0
    variable_set('openlayers_ui_version_check', 'Release 2.13.1');
    variable_set('openlayers_source_internal_variant', 'original');
    variable_set('openlayers_source_type', 'internal');
    variable_set('openlayers_source_external', 'http://openlayers.org/api/2.13/OpenLayers.js');
    variable_set('openlayers_default_map', 'default');
    variable_set('openlayers_ui_preview_map', 0);
    
    ////////////////////////////////////////////////////////////////
    //add new entry for admin general config uwwtd page
    menu_cache_clear_all();
    //find the parent mlid and check if menu not already exists
    $list = menu_load_links('management');//look for management > Configuration > uwwtd configuration
    
    //delete bad link (duplicate)
        
    
//     $bexistgeneral = false;
    $mlid = -1;
    foreach($list as $one_menu) {
        if ($one_menu['link_path'] == 'admin/config/uwwtd') {
            $mlid = $one_menu['mlid'];
//             break;     
        }
        if ($one_menu['link_path'] == 'admin/configuration/uwwtd/general') {
//             $bexist = true;
            menu_link_delete($one_menu['mlid']);  
//             break;     
        }  
        //delete menu admin/config/uwwtps (doublon with another url admin/config/uwwtd)
        if ($one_menu['link_path'] == 'admin/config/uwwtps') {
            menu_link_delete($one_menu['mlid']);  
        }  
        if ($one_menu['link_path'] == 'admin/configuration/uwwtd/extlinks') {
            menu_link_delete($one_menu['mlid']);  
        }                      
    } 
    
    if ($mlid == -1){
        throw new DrupalUpdateException('Can\'t find the menu link "uwwtd configuration" in management menu.');     
    }
          
//     if (false === $bexist) {    
    $plid = $mlid;
    $menu= array(
        'link_path' => 'admin/configuration/uwwtd/general' ,
        'link_title' => 'UWWTD general configuration',
        'description' => 'Configure UWWTD application' ,
        'menu_name' => 'management',
        'weight' => 0,
//         'expanded' => false,
        'mlid' => 0, 
        'plid' => $plid,
        'customized' => 1,
    );    
    $mlid = menu_link_save($menu);        

    $menu= array(
        'link_path' => 'admin/configuration/uwwtd/extlinks' ,
        'link_title' => 'uwwtd external links',
        'description' => 'Configure your external links' ,
        'menu_name' => 'management',
        'weight' => 0,
    //         'expanded' => false,
        'mlid' => 0, 
        'plid' => $plid,
        'customized' => 1,
    );    
    $mlid = menu_link_save($menu);        
    menu_cache_clear_all();
//     }          
    
    ////////////////////////////////////////////////////////////////
    //add help description on some field
    //delete view else error on update field
    uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_delete_view('UWWTD_BigCity');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_DischargePoint');
    uwwtd_delete_view('UWWTD_ReceivingArea');
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_delete_view('UWWTD_UWWTPs_Agglo');
       
    $list_field_to_update = array(
        'field_uwwwastewatertreated' => 'Volume of waste water treated and partially treated in the UWWTP',
        'field_uwwbod5perf' => 'Biological Oxygen Demand',
        'field_uwwcodperf' => 'Chemical Oxygen Demand',
        'field_uwwtssperf' => 'Total Suspended Solids',
        'field_aggart3compliance' => 'Collection',
        'field_aggart4compliance' => 'Secondary treatment',
        'field_aggart5compliance' => 'More stringent treatment',
        'field_aggart6compliance' => 'Primary treatment',
        'field_uwwotherperf' => 'Other type of more stringent treatment',
    );
    $msg_error = '';
    foreach($list_field_to_update as $fieldname => $tooltip) {
        $infofield = field_info_field($fieldname);
        $infofield['custom_tooltip'] = $tooltip;
        try {
            field_update_field($infofield);
        }
        catch (Exception $e) {
            $msg = "Error update field : ".$infofield['field_name']."\n";
            $msg .= $e->getMessage() . "\n"; 
            uwwtd_install_trace($msg);
            $msg_error .= $msg . "\n";          
        } 
    }
    //recreate the view
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_BigCity');
    uwwtd_create_or_replace_view('UWWTD_Compliance_Agglo');
    uwwtd_create_or_replace_view('UWWTD_Compliance_UWWTP');
    uwwtd_create_or_replace_view('UWWTD_DischargePoint');
    uwwtd_create_or_replace_view('UWWTD_ReceivingArea');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_create_or_replace_view('UWWTD_UWWTPs_Agglo');     
    
    if ('' != $msg_error) {
        throw new DrupalUpdateException($msg_error);     
    }   
    
    ////////////////////////////////////////////////////////////////
    //update page ressources
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
        $path_usefullinks_country = drupal_get_path('module', 'uwwtd') . '/script/page/ressource_'.$country_code.'.inc';
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = file_get_contents($path_usefullinks_country);
        node_save($node);
        break;
	}     
    
    ////////////////////////////////////////////////////////////////
    //delete page  Useful links
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Useful links', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
        node_delete($row->nid);
	}   
    
        
    ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
//     //keep this for further update
//     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }          
}

/**
 * Delete variable rptFormRA,
 * Create 4 new field for bundle uwwtps for rcaaN, rcaaP, rcab, rcac,
 * Update Label and tooltip for some field,
 */  
function uwwtd_update_7124(&$context = null)
{
    uwwtd_install_trace(__FUNCTION__); 
    
    ////////////////////////////////////////////////////////////////
    //Delete variable rptFormRA
    variable_del('rptFormRA');   
    
    //////////////////////////////////////////////////         
    ///admin/config/development/maintenance
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
        
    //UWWTD SIIF Slovenia National Node is currently under maintenance. We should be back shortly. Thank you for your patience.        
    variable_set('maintenance_mode_message', "UWWTD SIIF ". $country_config[$country_code]['name'] . " National Node is currently under maintenance. We should be back shortly. Thank you for your patience.");    
    
    ////////////////////////////////////////////////////////////////
    //Create 4 new field for bundle uwwtps for rcaaN, rcaaP, rcab, rcac
    $list_field_to_install = array(        
        'field_uwww_required_rcaan',
        'field_uwww_required_rcaap',
        'field_uwww_required_rcab',
        'field_uwww_required_rcac',
    );
    
    include(drupal_get_path('module', 'uwwtd') . '/script/content_type/bundle.config.inc');
    $content_type_name = 'uwwtp';
    $t = get_t();
    foreach ($list_field_to_install as $fieldname) {
        $infofield = $list_field[$fieldname];
        if (! field_info_field($infofield['field_name']) ) {
            uwwtd_install_trace('create field ' . $infofield['field_name']);
            $result = field_create_field($infofield);
            $t_args = array('%name' => $fieldname);
            watchdog('node', 'Added field %name.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types'));
        }
        
        foreach ($list_contenttype[$content_type_name]['field_info_instance'] as $fieldinstance) {
            if ($fieldinstance['field_name'] == $fieldname) {
                $instance_exist = field_info_instance('node', $fieldinstance['field_name'], $content_type_name);
                if (! $instance_exist ) {
                    uwwtd_install_trace('create bundle field ' . $fieldinstance['field_name']);
                    $result = field_create_instance($fieldinstance);
                    $t_args = array('%name' => $fieldname, '%bundle' => $content_type_name);
                    watchdog('node', 'Added field %name to bundle %bundle.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types'));                
                }
            }           
        }      
    } 
    
    //update field_uwwtreatmentrequired with new values NPO, PO, NO
    uwwtd_install_trace('field_update_field :: field_uwwtreatmentrequired'); 
    if (1 !== variable_get('uwwtd_install_from_scratch')) {
        try {
            uwwtd_install_trace('update 24 : Update field %name with new values.');
            field_update_field($list_field['field_uwwtreatmentrequired']);
            $t_args = array('%name' => 'field_uwwtreatmentrequired');
            watchdog('node', 'Update field %name with new values.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types'));        
        } catch (Exception $e) {
            $msg = "Error update field : field_uwwtreatmentrequired\n";
            $msg .= $e->getMessage() . "\n"; 
            uwwtd_install_trace($msg);
            throw $e;           
        }
    }
    $list_field_to_update = array(
        'field_aggsewagenetwork' => array(
                'tooltip' => 'separated/combine/separated and combine',
                'label' => 'Type of sewage network',
                'type' => 'agglomeration',
                ),  
        'field_aggart3compliance' => array(
                'tooltip' => 'Connection to "collecting system" or "Individual or appropriate system" as requested by Article 3 of   the Urban Waste Water Treatment directive 91/271/EC',
                'label' => 'Connection compliance', 
                'type' => 'agglomeration',
                ),  
        'field_aggart4compliance' => array(
                'tooltip' => 'Secondary treatment in place and performance met as requested by Article 4 and Annex I.B of  the   Urban Waste Water Treatment directive 91/271/EC',
                'label' => '2nd treatment compliance',  
                'type' => 'agglomeration',
                ),  
        'field_aggart5compliance' => array(
                'tooltip' => 'More stringent treatment in place and performance met as requested by Article 5 and Annex I.B  of the Urban Waste Water Treatment directive 91/271/EC',
                'label' => '3rd treatment compliance', 
                'type' => 'agglomeration',
                ),  
        'field_aggperiodover3' => array(
                'tooltip' => 'Deadline as regards the connection to "collecting system" or "Individual or appropriate  system"  as requested by Article 3 of the Urban Waste Water Treatment directive 91/271/EC',
                'label' => 'Deadline connection compliance',  
                'type' => 'agglomeration',
                ),  
        'field_aggperiodover4' => array(
                'tooltip' => 'Deadline as regards the secondary treatment in place and performance met as requested by Article 4 and Annex I.B of the Urban Waste Water Treatment directive 91/271/EC',
                'label' => 'Deadline 2nd treatment compliance', 
                'type' => 'agglomeration',
                ),  
        'field_aggperiodover5' => array(
                'tooltip' => 'Deadline as regards the more stringent treatment in place and performance met as requested by Article 5 and Annex I.B  of the Urban Waste Water Treatment directive 91/271/EC',
                'label' => 'Deadline 3rd treatment compliance', 
                'type' => 'agglomeration',
                ),  
        'field_aggc1' => array(
//                 'tooltip' => '',
                'label' => 'Connected to collecting system',
                'type' => 'agglomeration',
                ),  
        'field_aggc2' => array(
                'tooltip' => 'Mainly individual sanitation systems that equipped households such as sceptic tanks or micro waste water treatment plants',
                'label' => 'Individual or Appropriate Systems (IAS)', 
                'type' => 'agglomeration',
                ),  
        'field_aggpercwithouttreatment' => array(
//                 'tooltip' => '',
                'label' => 'Discharged without treatment',  
                'type' => 'agglomeration',
                ),  
        'field_agggenerated' => array(
                'tooltip' => 'Load generated by the agglomeration. It Includes load generated by resident and non-resident population (e.g.  tourism), industrial and tertiary sectors connected to collecting system, rain under normal climatic conditions. It integrates Individual or Appropriate systems and seasonal variation.',
//                 'label' => '',           
                'type' => 'agglomeration',
                ),  
        'field_uwwloadenteringuwwtp' => array(
                'tooltip' => 'load expressed in population equivalent shall be calculated on the basis of the maximum average weekly load entering the treatment plant during the year, excluding unusual situations such as those due to heavy rain (Article 4 of the Urban Waste Water Treatment Directive 91/271/CE)',
//                 'label' => '', 
                'type' => 'uwwtp',
                ),  
        'field_physicalcapacityinput' => array(
                'tooltip' => 'the urban waste water treatment plants are designed, constructed, operated and maintained to ensure sufficient performance under all normal local climatic conditions. When designing the plants, seasonal variations of the load shall be taken into account. (Article 10 of the Urban Waste Water Treatment Directive 91/271/CE)',
//                 'label' => '',  
                'type' => 'uwwtp',
                ),  
        'field_uwwntotperf' => array(
                'tooltip' => 'Sum of total kjeldahl nitrogen (organic, ammonia and ammonium), nitrate and nitrite',
//                 'label' => '', 
                'type' => 'uwwtp',
                ),  
        'field_uwwptotperf' => array(
                'tooltip' => 'Sum of dissolved phosphorus and insoluble phosphorus',
//                 'label' => '',  
                'type' => 'uwwtp',
                ),  
        'field_uwwotherperf' => array(
                'tooltip' => 'e.g. e-coli',
//                 'label' => '',  
                'type' => 'uwwtp',
                ),  
        'field_validto' => array(
//                 'tooltip' => '',
                'label' => 'Date of closing', 
                'type' => 'uwwtp',
                ),  
    );  
    uwwtd_install_trace('update 24 : uwwtd_delete_view');
    uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_delete_view('UWWTD_BigCity');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_DischargePoint');
    uwwtd_delete_view('UWWTD_ReceivingArea');
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_delete_view('UWWTD_UWWTPs_Agglo'); 
         
    $msg_error = '';
    if (1 !== variable_get('uwwtd_install_from_scratch')) {
        foreach($list_field_to_update as $fieldname => $detail) {
            uwwtd_install_trace('update 24 : '.$fieldname);
            if (isset($detail['tooltip'])) {
                $infofield = field_info_field($fieldname);
                
                $infofield['custom_tooltip'] = $detail['tooltip'];
                try {
                    field_update_field($infofield);
                }
                catch (Exception $e) {
                    $msg = "Error update field : ".$infofield['field_name']."\n";
                    $msg .= $e->getMessage() . "\n"; 
                    uwwtd_install_trace($msg);
                    $msg_error .= $msg . "\n";          
                }             
            }
            
            if (isset($detail['label'])) {
                $infoinstancefield = field_info_instance('node', $fieldname, $detail['type']);
                
                $infoinstancefield['label'] = $detail['label'];
                try {
                    field_update_instance($infoinstancefield);
                }
                catch (Exception $e) {
                    $msg = "Error update field : ".$infoinstancefield['field_name']."\n";
                    $msg .= $e->getMessage() . "\n"; 
                    uwwtd_install_trace($msg);
                    $msg_error .= $msg . "\n";          
                }             
            }  
        }
    }   
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_BigCity');
    uwwtd_create_or_replace_view('UWWTD_Compliance_Agglo');
    uwwtd_create_or_replace_view('UWWTD_Compliance_UWWTP');
    uwwtd_create_or_replace_view('UWWTD_DischargePoint');
    uwwtd_create_or_replace_view('UWWTD_ReceivingArea');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_create_or_replace_view('UWWTD_UWWTPs_Agglo');
    
    if ($msg_error != '') {
        throw new DrupalUpdateException($msg_error);
    }
    
    ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
//     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }               
} 

/**
 * Update map home and add layer rbd and nuts
 * Configure pathauto pattern and correct wrong alias if install from scratch,
 * Add a menu for meta data links configuration page
 * Update variable for config  for meta data links  
 */  
function uwwtd_update_7125(&$context = null)
{
//     uwwtd_update_7124($context = null);
        
    uwwtd_install_trace(__FUNCTION__); 
    
    ////////////////////////////////////////////////////////////////
    //Update map home and add layer rbd and nuts
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');                              
    uwwtd_update_map_overlay($country_config, $country_code, 
                                            array('waste_water_treatment_network_map.inc'), 
                                            array('oieau_nuts_0.inc',
                                                  'oieau_nuts_1.inc',
                                                  'oieau_nuts_2.inc',
                                                  'oieau_nuts_3.inc',
                                                  'oieau_rbd.inc',
                                                  'oieau_rbdsu.inc',
                                                  'bathing_water.inc',), 
                                            array('-'));        
    
    //////////////////////////////////////
    //Update variable for config  for meta data links
    variable_set('metadataAgglo', $country_config[$country_code]['metadataAgglo']);
    variable_set('metadataAggloUid', $country_config[$country_code]['metadataAggloUid']);
    variable_set('metadataUwwtp', $country_config[$country_code]['metadataUwwtp']);
    variable_set('metadataUwwtpUid', $country_config[$country_code]['metadataUwwtpUid']);
    variable_set('metadataDp', $country_config[$country_code]['metadataDp']);
    variable_set('metadataDpUid', $country_config[$country_code]['metadataDpUid']);
    variable_set('metadataRca', $country_config[$country_code]['metadataRca']);
    variable_set('metadataRcaUid', $country_config[$country_code]['metadataRcaUid']);
    
    //////////////////////////////////////
    //Add a menu for meta data links configuration page 
//     menu_cache_clear_all();
    //find the parent mlid and check if menu not already exists
    $list = menu_load_links('management');
    $mlid = -1;
    $menu_download_exist = false;
    $listmid = array();
    
    $menu_download_general_conf_plid = '';
    $menu_download_external_link_plid = ''; 
    foreach($list as $one_menu) {
        if ($one_menu['link_path'] == 'admin/config/uwwtd') {
            $mlid = $one_menu['mlid'];
            $listmid[] = $one_menu;
//             break;     
        }   
        if ($one_menu['link_path'] == 'admin/configuration/uwwtd/download') {
            $menu_download_exist = true;
        }
        if ($one_menu['link_path'] == 'admin/configuration/uwwtd/general') {
            $menu_download_general_conf_plid = $one_menu['plid'];
        }
        if ($one_menu['link_path'] == 'admin/configuration/uwwtd/extlinks') {
            $menu_download_external_link_plid = $one_menu['plid'];
        }
                                          
    } 
    
//     dsm($menu_download_exist);
//     dsm($menu_download_plid);
//     dsm($menu_download_general_conf_plid);
//     dsm($menu_download_external_link_plid);
//     
//     dsm($listmid);
    //detect error in menu if duplicate
    if (count($listmid) > 1) {
        //delete the link
        if ($menu_download_general_conf_plid == $menu_download_external_link_plid) {
            
            $mlid = -1;
            foreach($listmid as $midtouse) {
                if ($menu_download_general_conf_plid == $midtouse['mlid']) {
                    $mlid = $midtouse['mlid'];
                    break;
                }
            } 
                    
            if ($mlid == -1) {
                throw new DrupalUpdateException('More than one menu admin/config/uwwtd found.');
            }
        } else {
            throw new DrupalUpdateException('Can\'t detect parent menu for new link download');
        }
        
        //delete the duplicate empty menu  'admin/config/uwwtd'
        foreach($listmid as $midtodlete) {
            if ($menu_download_general_conf_plid != '' && $menu_download_general_conf_plid != $midtodlete['mlid']) {
                menu_link_delete($midtodlete['mlid']);  
            }
        } 
    }
    
    if ($mlid == -1){
        throw new DrupalUpdateException('Can\'t find the menu link "uwwtd configuration" in management menu.');     
    } 
    
    if (false === $menu_download_exist) {
        //check if menu already exist
        $plid = $mlid;
        $menu= array(
            'link_path' => 'admin/configuration/uwwtd/download' ,
            'link_title' => 'UWWTD download configuration',
            'description' => 'Configure download link' ,
            'menu_name' => 'management',
            'weight' => 0,
    //         'expanded' => false,
            'mlid' => 0, 
            'plid' => $plid,
            'customized' => 1,
        );    
        $mlid = menu_link_save($menu);
    } 
//     menu_cache_clear_all();              
        
    //////////////////////////////////////
    //Configure pathauto pattern and correct wrong alias if exists
    variable_set('pathauto_node_agglomeration_pattern', 'agglomeration/[node:field_inspireidlocalid]/[node:field_anneedata]');
    variable_set('pathauto_node_discharge_point_pattern', 'discharge-point/[node:field_inspireidlocalid]/[node:field_anneedata]');
    variable_set('pathauto_node_receiving_area_pattern', 'receiving-area/[node:field_inspireidlocalid]/[node:field_anneedata]');
    variable_set('pathauto_node_uwwtp_pattern', 'treatment-plant/[node:field_inspireidlocalid]/[node:field_anneedata]');
    
    //set each 'basic page' node to have 'Generate automatic URL alias' checked
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));             
    $query->condition('n.type', 'page', '=');
	$result = $query->execute();
    $listnid = array();
	foreach($result as $row){
        $listnid[] = $row->nid;
	}
    
    foreach($listnid as $nid) {
        $node = node_load($nid);
        $node->path['pathauto'] = 1;
        node_save($node);
    }
   
    if (1 === variable_get('uwwtd_install_from_scratch')) {
//         dsm('here');
        
        module_load_include('inc', 'pathauto');
        module_load_include('inc', 'pathauto.pathauto');
        
        // Delete the existing node aliases.
        db_delete('url_alias')
        ->condition('source', 'node/%', 'LIKE')
        ->execute();
        
        // Regenerate the node aliases.
        $nids = db_query("SELECT nid FROM {node}")->fetchCol();
        pathauto_node_update_alias_multiple($nids, 'bulkupdate');
    }
    
    
    ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
//     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }     
}

/**
 * Update for WMS && stat : 21/12/2105
**/
function uwwtd_update_7126(&$context = null){
    uwwtd_install_trace(__FUNCTION__); 
    
    if (false === module_enable(array('proxy'))) {
        $msg = "Error, modules proxy can\'t be enabled, see in module page if a dependency is needed or if this module is installed";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    else{
        $update = false;
        module_load_include('proxy.inc', 'proxy', 'includes/proxy');
        $proxy = variable_get('proxy_whitelist_domains', PROXY_WHITELIST_DOMAINS_DEFAULT);
        $approved = _proxy_match_domain('*.discomap.eea.europa.eu', $proxy);
        if (!$approved) {
            $update = true;
            $proxy.="\n\r*.discomap.eea.europa.eu";
        }
        $approved = _proxy_match_domain('*.discomap.eea.europa.eu', $proxy);
        if (!$approved) {
            $update = true;
            $proxy.="\n\rmaps.oieau.fr";
        }
        if($update) variable_set('proxy_whitelist_domains',$proxy);
    }
    if (false === module_enable(array('wms'))) {
        $msg = "Error, modules wms can\'t be enabled, see in module page if a dependency is needed or if this module is installed";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    
    
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'oieau_nuts.inc',
        'oieau_rbd_rbdsu.inc',
        'natura2000.inc',
        'soe_monitoring_stations.inc'
    );
    uwwtd_update_map_overlay($country_config, $country_code, array(), $new_overlays, array('-'));
    
    
    //Change default theme, behaviors and add layers for all openlayers map
    $maps = openlayers_maps(true);
    foreach($maps as $name=>$old_map){
        $map = clone $old_map;
        if($name!='default' && substr($name, 0, 7)!="example" && substr($name, 0, 8)!="geofield"){
            $update = false;
            
            //===Change default path of theme
            if(strpos($map->data['image_path'], "default_dark")){
                $map->data['image_path'] = str_replace('default_dark', 'default_white', $map->data['image_path']);
                $update = true;
            }
            if(strpos($map->data['css_path'], "default_dark")){
                $map->data['css_path'] = str_replace('default_dark', 'default_white', $map->data['css_path']);
                $update = true;
            }
            
            
            //===Add behaviors
            //wmsgetfeatureinfo
            if(!isset($map->data['behaviors']['openlayers_behavior_wmsgetfeatureinfo'])){
                $map->data['behaviors']['openlayers_behavior_wmsgetfeatureinfo'] = array(
                  'getfeatureinfo_usevisiblelayers' => 1,
                  'getfeatureinfo_layers' => 'google_satellite',
                  'getfeatureinfo_info_format' => 'application/geojson',
                  'getfeatureinfo_highlight' => 0,
                  'getfeatureinfo_htmlelement' => 'getfeatureinfo',
                  'getfeatureinfo_properties' => '',
                  'getfeatureinfo_feature_count' => '5',
                );
                $update = true;
            }
            //wmsgetlegend
            if(!isset($map->data['behaviors']['openlayers_behavior_wmsgetlegend'])){
                $map->data['behaviors']['openlayers_behavior_wmsgetlegend'] = array(
                    "getlegend_htmlelement"=>"div.openlayers-legends",
                );
                $update = true;
            }
            elseif($map->data['behaviors']['openlayers_behavior_wmsgetlegend']['getlegend_htmlelement']!="div.openlayers-legends"){
                $map->data['behaviors']['openlayers_behavior_wmsgetlegend']['getlegend_htmlelement'] = "div.openlayers-legends";
                $update = true;
            }
            
            
            //mouseposition
            if(!isset($map->data['behaviors']['openlayers_behavior_mouseposition'])){
                $map->data['behaviors']['openlayers_behavior_mouseposition'] = array(
                  'prefix' => 'Cursor position : ',
                  'separator' => ', ',
                  'suffix' => ' (EPSG:4326)',
                  'numDigits' => '6',
                  'emptyString' => '',
                );
                $update = true;
            }
            //permalink
            if(!isset($map->data['behaviors']['openlayers_plus_behavior_permalink'])){
                $map->data['behaviors']['openlayers_plus_behavior_permalink'] = array();
                $update = true;
            }
            //scaleline
            if(!isset($map->data['behaviors']['openlayers_behavior_scaleline'])){
                $map->data['behaviors']['openlayers_behavior_scaleline'] = array();
                $update = true;
            }
            
            
            
            //===Add layers
            //From http://discomap.eea.europa.eu/home.html
            // need more ?
            // ---> à creuser :  http://water.discomap.eea.europa.eu/arcgis/services/RiversLakesSoE/RiversAndLakes_WM/MapServer/WMSServer?request=GetCapabilities&service=WMS
            // http://water.discomap.eea.europa.eu/arcgis/services/RiversLakesSoE/WISE_SoE_RL_Quality_NitrateRivers_Dyna_WM/MapServer/WMSServer?request=GetCapabilities&service=WMS
            // http://water.discomap.eea.europa.eu/arcgis/services/RiversLakesSoE/WISE_SoE_RL_Quality_OrthophosphateRivers_Dyna_WM/MapServer/WMSServer?request=GetCapabilities&service=WMS
            $new_layers = array('oieau_rbd_rbdsu'=>5,'oieau_nuts'=>6,'bathing_water'=>7, 'soe_monitoring_stations'=>8, 'natura_2000'=>9);
            foreach($new_layers as $layer=>$weight){
                $map->data['layers'][$layer] = $layer;
                $map->data['layer_weight'][$layer] = $weight;
                $map->data['layer_styles'][$layer] = 0;
                $map->data['layer_styles_select'][$layer] = 0;
                $map->data['layer_styles_temporary'][$layer] = 0;
                $map->data['layer_activated'][$layer] = 0;
                $map->data['layer_switcher'][$layer] = $layer;
                $update = true;
            }
            $map->data['layers']['openlayers_geojson_picture_this'] = 0;
            $map->data['layers']['geofield_formatter'] = 0;
            $map->data['layers']['openlayers_kml_example'] = 0;
            
            
            $map->data['layers']['oieau_rbd'] = 0;
            $map->data['layers']['oieau_rbdsu'] = 0;
            $map->data['layers']['oieau_nuts_0'] = 0;
            $map->data['layers']['oieau_nuts_1'] = 0;
            $map->data['layers']['oieau_nuts_2'] = 0;
            $map->data['layers']['oieau_nuts_3'] = 0;
            
            $map->data['layer_switcher']['oieau_rbd'] = 0;
            $map->data['layer_switcher']['oieau_rbdsu'] = 0;
            $map->data['layer_switcher']['oieau_nuts_0'] = 0;
            $map->data['layer_switcher']['oieau_nuts_1'] = 0;
            $map->data['layer_switcher']['oieau_nuts_2'] = 0;
            $map->data['layer_switcher']['oieau_nuts_3'] = 0;
            
            
            if($name=='agglomeration'){
                $map->data['behaviors']['openlayers_plus_behavior_piechart']['fields_series']="field_aggc1|Collecting system|#00658e\r\nfield_aggc2|Individual and Appropriate Systems (IAS)|#00ced1\r\nfield_aggpercwithouttreatment|Discharge without treatment|#d93c3c";
                
            }
            openlayers_map_save($map);
        }  
    }
    
    
    //add new openlayers style for RCA 
    //$GLOBALS['uwwtd_value']['rcatype_color']
    if(!empty($GLOBALS['uwwtd_value']['rcatype_color'])){
        foreach($GLOBALS['uwwtd_value']['rcatype_color'] as $type=>$data){
            $row['name'] ='rca_'.strtolower($type);
            $row['title'] ='RCA '.$GLOBALS['uwwtd_value']['rcatype_labels'][$type];
            $row['description'] = date('Y-m-d H:i:s');
            $row['data'] = $data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_styles', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers style ' . $row['title'] . '('.$msgresult.')'."\n";
            }
        }
    }
    ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
//     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  
}

/**
 * Change content of ressources & regulation pages
*/ 
function uwwtd_update_7127(&$context = null){
    uwwtd_install_trace(__FUNCTION__); 
    
        ///////////////////////////////////
    //update regulation page
    $regulation_content = '<h2>European legislation</h2><ul><li><a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:31991L0271" target="_blank">Directive 91/271/EC original version</a></li><li><a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:31998L0015" target="_blank">Directive 98/15/EEC amending Directive 91/271/EEC</a></li><li><a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:01991L0271-20140101" target="_blank">Directive 91/271/EC Consolidated version</a></li><li><a href="http://ec.europa.eu/environment/water/water-urbanwaste/legislation/pdf/transitional_periods_eu10_eu2.pdf" target="_blank">Deadlines of transitional periods for new Member States-EU-12</a></li><li><a href="http://ec.europa.eu/environment/water/water-urbanwaste/legislation/pdf/Transitional%20periods%20Croatia.pdf" target="_blank">Deadlines of transitional periods for Croatia</a></li><li><a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?qid=1405007191767&amp;uri=CELEX:32014D0431" target="_blank">Commission Implementing Decision 2014/431/EU of 26 June 2014 concerning formats for reporting on the national programmes for the implementation of Council Directive 91/271/EEC</a></li><li><a href="https://circabc.europa.eu/w/browse/b5f6847d-53fb-4894-8410-709e265f7f83" target="_blank">Commission Implementing Decision 2014/431/EEC excel templates (EIONET)</a></li><li><a href="http://inspire.ec.europa.eu/" target="_blank">Directive establishing an Infrastructure for Spatial Information in the European Community (INSPIRE) 2007/2/EC</a></li><li><a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A32003L0004" target="_blank">Directive on public access to environmental information 2003/4/EC</a></li></ul><h2>European Guidance</h2><ul><li><a href="http://ec.europa.eu/environment/water/water-urbanwaste/info/pdf/terms.pdf" target="_blank">Terms and Definitions of the Urban Waste Water Treatment Directive</a></li></ul><h2>National regulations</h2>';
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Regulations', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $regulation_content;
        $node->body['und'][0]['format'] = 'full_html';
        node_save($node);
        break;
	} 
    //update Ressources page
    $ressource_content = '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Waste Water LIFE project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;theme=77&amp;projectList" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;theme=77&amp;projectList</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p>';
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $ressource_content;
        $node->body['und'][0]['format'] = 'full_html';
        node_save($node);
        break;
	}
    
    
     ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
    //     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  
    
}

/**
 * Manage RCA, DCP pages
**/
function uwwtd_update_7128(&$context = null){
    uwwtd_install_trace(__FUNCTION__); 
    
    //=== Update Ressources page
    $ressource_content = '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p>';
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = $ressource_content;
        $node->body['und'][0]['format'] = 'full_html';
        node_save($node);
        break;
	}
    
    //=== Install new main menu
    drupal_flush_all_caches();
    
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7128.json');
    
    menu_cache_clear_all();
    
    //=== Install new OL layers and presets
    //dcp map
     //update on overlay waste water (add a s to agglomeration)    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code, array('dcp_map.inc','rca_map.inc'), array('rca.inc'), array('-'));
    
     ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
    //     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  
    
}


/**
 * Resource page + OL layers switcher behavior + datatables module
**/
function uwwtd_update_7129(&$context = null){
    uwwtd_install_trace(__FUNCTION__);
    
    //Define new date format
    variable_set('date_format_custom_siif', 'd F Y'); 
    
    //Update the resource page
    $ressource_content = '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li><li>Slovenia: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/slovenia/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Other national data viewers</h2><ul><li>French urban waste water website: <a href="http://assainissement.developpement-durable.gouv.fr/" target="_blank">http://assainissement.developpement-durable.gouv.fr/</a></li><li>Greek urban waste water website: <a href="http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx">http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx</a></li><li type="_moz">Luxembourg water geoportail: <a href="http://eau.geoportail.lu/">http://eau.geoportail.lu/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Good practices</h2><ul><li>Natural Water Retention Measures: <a href="http://nwrm.eu/" target="_blank">http://nwrm.eu/</a></li></ul>';
    $query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->title = "Resource";
        $node->body['und'][0]['value'] = $ressource_content;
        $node->body['und'][0]['format'] = 'full_html';
        node_save($node);
        break;
	}
    
    //Disable datatables module
    if (false === module_disable(array('Datatables' => 'datatables'))) {
        $msg = "Error, the module ".implode(',', array('Datatables' => 'datatables'))." can't be disabled.";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    
    //Manage OL layers for RBD && NUTS
    //Activate custom OL layers switcher behavior 
     db_update('block')
        ->fields(array(
          'region' => 'content',
          'status' => 1,
          'weight' => -15,
          'pages' => '',
          'title' => '<none>',
          'visibility' => 0,
        ))
          ->condition('theme', 'uwwtd')
          ->condition('delta', 'blockswitcher_plus')
          ->condition('module', 'openlayers_plus')        
        ->execute();  
    
    $maps = openlayers_maps(true);
    foreach($maps as $name=>$old_map){
        $map = clone $old_map;
        if($name!='default' && substr($name, 0, 7)!="example" && substr($name, 0, 8)!="geofield"){
            //if($map->data['layers']['oieau_nuts']!=0){
                
                //$map->data['behaviors']['openlayers_behavior_layerswitcher']['enabled'] = 0 ;
                
                //Add main layer
                
                $map->data['behaviors']['openlayers_plus_behavior_blockswitcher_plus'] = array(
                  'enabled' => 0,
                  'open' => 1,
                  'overlay_style' => 'checkbox',
                  'sort_layers' => 1,
                  'layers_agglomerations' => 1,
                  'layers_agglomerations_groupname' => 'UWWTD',
                  'layers_uwwtp' => 1,
                  'layers_uwwtp_groupname' => 'UWWTD',
                  'layers_dcp' => 1,
                  'layers_dcp_groupname' => 'UWWTD',
                  
                  //RBD
                  'layers_oieau_rbd_rbdsu' => 0,
                  'layers_oieau_rbd_rbdsu_groupname' => 'Basins',
                  'layers_oieau_rbd' => 1,
                  'layers_oieau_rbd_groupname' => 'Basins',
                  'layers_oieau_rbdsu' => 1,
                  'layers_oieau_rbdsu_groupname' => 'Basins',
                  
                  //NUTS
                  'layers_oieau_nuts' => 0,
                  'layers_oieau_nuts_groupname' => 'Regions (NUTS)',
                  'layers_oieau_nuts_0' => 1,
                  'layers_oieau_nuts_0_groupname' => 'Regions (NUTS)',
                  'layers_oieau_nuts_1' => 1,
                  'layers_oieau_nuts_1_groupname' => 'Regions (NUTS)',
                  'layers_oieau_nuts_2' => 1,
                  'layers_oieau_nuts_2_groupname' => 'Regions (NUTS)',
                  'layers_oieau_nuts_3' => 1,
                  'layers_oieau_nuts_3_groupname' => 'Regions (NUTS)',

                  //Others
                  'layers_bathing_water' => 1,
                  'layers_bathing_water_groupname' => 'Others',
                  'layers_soe_monitoring_stations' => 1,
                  'layers_soe_monitoring_stations_groupname' => 'Others',
                  'layers_natura_2000' => 1,
                  'layers_natura_2000_groupname' => 'Others',
                );
                
                foreach($map->data['layer_activated'] as $layer_name=>$activated){
                    if($activated){
                        if(!isset($map->data['behaviors']['openlayers_plus_behavior_blockswitcher_plus']['layers_'.$layer_name])){
                            $map->data['behaviors']['openlayers_plus_behavior_blockswitcher_plus']['layers_'.$layer_name] = 1;
                            $map->data['behaviors']['openlayers_plus_behavior_blockswitcher_plus']['layers_'.$layer_name.'_groupname'] = 'UWWTD';
                        }
                    }
                }
                
                //Reactivate layers 
                $new_layers = array(
                    'oieau_rbd'=> 5,
                    'oieau_rbdsu'=> 5,
                    'oieau_nuts_0'=>6,
                    'oieau_nuts_1'=>6,
                    'oieau_nuts_2'=>6,
                    'oieau_nuts_3'=>6,
                );
                
                foreach($new_layers as $layer=>$weight){
                    $map->data['layers'][$layer] = $layer;
                    $map->data['layer_weight'][$layer] = $weight;
                    $map->data['layer_styles'][$layer] = 0;
                    $map->data['layer_styles_select'][$layer] = 0;
                    $map->data['layer_styles_temporary'][$layer] = 0;
                    $map->data['layer_activated'][$layer] = 0;
                    $map->data['layer_switcher'][$layer] = $layer;
                    $update = true;
                }
                
                $map->data['layers']['oieau_rbd_rbdsu'] =   0;
                $map->data['layers']['oieau_nuts'] =  0;
                
                $map->data['layer_switcher']['oieau_rbd_rbdsu'] = 0;
                $map->data['layer_switcher']['oieau_nuts'] = 0;
                
                openlayers_map_save($map); 
            //}
            
            
        }
    }
    
    //=== Install new main menu
    drupal_flush_all_caches();
    
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7129.json');
    
    menu_cache_clear_all();
    
     ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
    //     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}


/**
 * Resource menu and new sub section
 * MS_LEVEL Content type
**/
function uwwtd_update_7130(&$context = null){
    uwwtd_install_trace(__FUNCTION__);
    
    
    drupal_flush_all_caches();
    
    //Update the resource page ==> to usefull links
    /*
    $ressource_content = '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li><li>Slovenia: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/slovenia/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Other national data viewers</h2><ul><li>French urban waste water website: <a href="http://assainissement.developpement-durable.gouv.fr/" target="_blank">http://assainissement.developpement-durable.gouv.fr/</a></li><li>Greek urban waste water website: <a href="http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx">http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx</a></li><li type="_moz">Luxembourg water geoportail: <a href="http://eau.geoportail.lu/">http://eau.geoportail.lu/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Good practices</h2><ul><li>Natural Water Retention Measures: <a href="http://nwrm.eu/" target="_blank">http://nwrm.eu/</a></li></ul>';
    $query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Ressources', '=');
    $query->condition('n.language', 'en', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->title = "Resource";
        $node->body['und'][0]['value'] = $ressource_content;
        $node->body['und'][0]['format'] = 'full_html';
        node_save($node);
        break;
	}
    */
    /*
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
//     uwwtd_install_menu($menu, 'main-menu7130.json');
    
    menu_cache_clear_all();
    */
    
     ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
    //keep this for further update
    //     throw new DrupalUpdateException(__FUNCTION__);
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  

    //==========DEBUG : permet de relancer la mise à jour si besoin.
//     throw new DrupalUpdateException(__FUNCTION__);
    
}

/**
 * Ajoute les champs field_comparison_of_compliance_p et field_comparison_of_compliance_a au type
 * de contenu MS_LEVEL.
 */
function uwwtd_update_7131(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Ajout de deux champs au type de contenu ms_level :
	addFieldToContentType('field_comparison_of_compliance_p', 'text_long', 'Comparison of compliance by p.e.', 'ms_level');
	addFieldToContentType('field_comparison_of_compliance_a', 'text_long', 'Comparison of compliance by agg', 'ms_level');
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
}

/**
 * Ajoute les pages ressources/useful-links, ressources/about-uwwwtd-siif et ressources/siif-for-developpers. 
 */
function uwwtd_update_7132(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);
	
	// Ajout des nouvelles pages :
	$nodeUseful = addNodeIfDoesntExist('page', 'Useful links', 'content/resources/useful-links', '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li><li>Slovenia: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/slovenia/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Other national data viewers</h2><ul><li>French urban waste water website: <a href="http://assainissement.developpement-durable.gouv.fr/" target="_blank">http://assainissement.developpement-durable.gouv.fr/</a></li><li>Greek urban waste water website: <a href="http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx">http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx</a></li><li type="_moz">Luxembourg water geoportail: <a href="http://eau.geoportail.lu/">http://eau.geoportail.lu/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Good practices</h2><ul><li>Natural Water Retention Measures: <a href="http://nwrm.eu/" target="_blank">http://nwrm.eu/</a></li></ul>');
	$nodeAbout = addNodeIfDoesntExist('page', 'About the UWWTD SIIF', 'content/resources/about-uwwtd-siif', 
	'<div>
	<h2>I. Content of this website</h2>
	<p>This website provides detailed information about the urban waste water agglomerations, treatment plants, discharged points and sensitive areas. It also provides information about the compliance of each agglomeration and treatment plant, the connection to collecting systems or individual and appropriate systems, the treatment in place and pressure on the environment.</p>
	<p>Through view and discovery services it allows to select data and display them depending from the criteria chosen. Download and invoke service are also implemented to ease the access to the databases or to ease the reuse of this information by other IT systems.</p>
	<p>It provides an overview of the urban waste water regulation at EU and national level.</p>
	<p>Statistic can be created or are automatically generated in the statistic webpage giving aggregated result of the database reported.</p>
	<p>Through a useful links web page you can also have access to other information related to this policy.</p>
	<p>From the Home webpage you can also have access to different layers and you can click on and off on these layers to make them appear or disappear.</p>

	<h2>II.	About the SIIF project at the origin of this IT development</h2>
	<p>The Structured Implementation and Information Framework (SIIF) concept is a ongoing European Commission (Environment Directorate General) pilot project essentially focused on the organisation and management of data in order to enhance the generation of information for policy makers, interested parties and the public at all levels on how legislation is practically implemented. The concept developed is in line with the provisions of the Public Access to Environmental Information and INSPIRE Directives.</p>
	<p>The SIIF concept is composed of a governance approach and an IT system.</p>
	<p>The SIIF implies a governance focused on compliance, good environmental status, environmental pressure and impact, economic activities and jobs creation. It has also an objective to reduce administrative burden, provide more up-to-date data, increase efficiency to all potential users. The existence of an implementation programme on how to reach or maintain the compliance for a policy is also part of the SIIF governance approach.</p>
	<p>As regards the IT components of the SIIF it has three components: (1) the content for data community (information needs and how it is organised); (2) the process for data providers (who does what and how); (3) the dissemination for data users (how to display) All these components have a national and a European dimension.</p>
	<p id="imgProjectA"><img src="/vg_uwwtd_si/sites/all/themes/uwwtd/images/pageaccueil.png" alt="" /></p>
	<p>This IT development is related to the process and the dissemination of the existing content of the European urban waste water data model.</p>
	<p>The SIIF project opted for the implementation of an open source dissemination IT toolbox. The tool was designed to disseminate environmental data and information at national level but also to facilitate the reporting process. It provides EU MS a cheap way to implement the Article 11 of the INSPIRE directive and thus to develop their national waste water website. The framework of this website can also be adapted to the use of other European Policies.</p>
	
	<h2>III. Background of the SIIF</h2>
	<p>SIIF is also a way to implement two European directives, one Decision and at least six communications:</p>
	<p>European Directives</p>
	<p>
	<a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:32003L0004&qid=1416830399380" target="_blank" title="2003/4/EC - on public access to environmental information">2003/4/EC - on public access to environmental information</a>
	<a href="http://inspire.ec.europa.eu/" target="_blank" title="2007/2/CE - establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)">2007/2/CE - establishing an Infrastructure for Spatial Information in the European Community (INSPIRE)</a>
	</p>
	<p>European Decision</p>
	<p>
	<a href="http://ec.europa.eu/environment/action-programme/" target="_blank" title="Decision 1386/2013/EU on a General Union Environment Action Programme to 2020 "Living well, within the limits of our planet"">Decision 1386/2013/EU on a General Union Environment Action Programme to 2020 ">Living well, within the limits of our planet"</a>
	</p>
	<p>European Communications</p>
	<p>
	<a href="http://eur-lex.europa.eu/legal-content/EN/ALL/?uri=CELEX:52008DC0046" target="_blank" title="COM (2008) 46 - Towards a Shared Environmental Information System (SEIS)">COM (2008) 46 - Towards a Shared Environmental Information System (SEIS)</a>
	<a href="http://ec.europa.eu/environment/legal/law/pdf/com_2008_773_en.pdf" target="_blank" title="COM (2008) 773 - on implementing European Community Environmental Law">COM (2008) 773 - on implementing European Community Environmental Law</a>
	<a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?qid=1417082394583&uri=CELEX:52010DC2020" target="_blank" title="COM (2010) 2020 - A strategy for smart, sustainable and inclusive growth">COM (2010) 2020 - A strategy for smart, sustainable and inclusive growth</a>
	<a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?qid=1417082468133&uri=CELEX:52012DC0095" target="_blank" title="COM (2012) 95 - Improving the delivery of benefits from EU environment measures : building confidence through better knowledge and responsiveness">COM (2012) 95 - Improving the delivery of benefits from EU environment measures : building confidence through better knowledge and responsiveness</a>
	<a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?qid=1417082589797&uri=CELEX:52012DC0673" target="_blank" title="COM (2012) 673 - A Blueprint to Safeguard Europe s Water Resources">COM (2012) 673 - A Blueprint to Safeguard Europe s Water Resources</a>
	<a href="http://eur-lex.europa.eu/legal-content/EN/TXT/?qid=1417082637412&uri=CELEX:52013DC0695" target="_blank" title="COM (2013) 685 - Regulatory Fitness and Performance (REFIT) : Results and Next">COM (2013) 685 - Regulatory Fitness and Performance (REFIT) : Results and Next</a>
	</p>
	</div>');
	$nodeSiif = addNodeIfDoesntExist('page', 'SIIF for developers', 'content/resources/siif-developers', 
	'<div>
		<ul>
			<li><a href="https://github.com/OIEau/uwwtd" target="_blank" title="https://github.com/OIEau/uwwtd">The development platform with the toolbox and its documentation</a></li>
			<li><a href="https://github.com/OIEau/uwwtd/issues" target="_blank" title="https://github.com/OIEau/uwwtd/issues">The bug tracker section</a></li>
		</ul>
	</div>');
	
	// Mise à jour du menu, pour utiliser la méthode habituel avec le json => false :
	$isMethod1 = false;
	 
	if ($isMethod1) {
		if (!empty($nodeUseful)) {
			updateMainMenuWith('Useful links', $nodeUseful->nid);
		}
		if (!empty($nodeAbout)) {
			updateMainMenuWith('About the UWWTD SIIF', $nodeAbout->nid);
		}
		if (!empty($nodeSiif)) {
			updateMainMenuWith('SIIF for developers', $nodeSiif->nid);
		}
	} else {
		$menu = array(
			'menu_name' => 'main-menu', 
			'title' => 'Main menu', 
			'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
		);
		menu_delete(array('menu_name' => $menu['menu_name']));
		menu_save($menu);
		uwwtd_install_menu($menu, 'main-menu7132.json');
		menu_cache_clear_all();
	}
	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
	//==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Mets à 32 la précision et à 2 le scale des champs de type décimal.
 */
function uwwtd_update_7133(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);
	
	// Récupération de tous les champs existants :
	$query = db_select('field_config_instance', 'c');
	$query->fields('c');
	$fields = $query->execute()->fetchAllAssoc('id');
	
	// Pour chaque champs :
	if (!empty($fields)) {
		foreach ($fields as $field) {
			if (!empty($field->field_name)) {
				// Redéfinition de la précision et du scale des champs de type Décimal :
				setDecimalAccuracy($field->field_name, 32, 2);
			}
		}
	}
	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
	//==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Ajoute des nouveaux champs pour être en adequation avec le nouveau format de fichier xml.
 */
function uwwtd_update_7134(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Ajout de nouveaux champs :
	addFieldToContentType('field_aggbeginlife', 'date', 'Agglomeration begin life', 'agglomeration');
	addFieldToContentType('field_aggendlife', 'date', 'Agglomeration end life', 'agglomeration');
	
	addFieldToContentType('field_repcode', 'text', 'repcode', 'uwwtp');
	addFieldToContentType('field_uwwbeginlife', 'date', 'uwwbeginlife', 'uwwtp');
	addFieldToContentType('field_uwwendlife', 'date', 'uwwendlife', 'uwwtp');

	addFieldToContentType('field_repcode', 'text', 'repcode', 'discharge_point');
	addFieldToContentType('field_dcpbeginlife', 'date', 'dcpbeginlife', 'discharge_point');
	addFieldToContentType('field_dcpendlife', 'date', 'dcpendlife', 'discharge_point');

	addFieldToContentType('field_rcaenvdom', 'text', 'rcaenvdom', 'receiving_area');
	addFieldToContentType('field_rca61datedesignation', 'date', 'rca61datedesignation', 'receiving_area');
	addFieldToContentType('field_rcahyperlink', 'text', 'rcahyperlink', 'receiving_area');
	addFieldToContentType('field_rcabeginlife', 'date', 'rcabeginlife', 'receiving_area');
	addFieldToContentType('field_rcaendlife', 'date', 'rcaendlife', 'receiving_area');
	addFieldToContentType('field_zonetype', 'text', 'zonetype', 'receiving_area');
	addFieldToContentType('field_rca_parameter_m', 'text', 'rca_parameter_m', 'receiving_area');
	addFieldToContentType('field_rcaart58datedesign', 'date', 'rcaart58datedesign', 'receiving_area');
	addFieldToContentType('field_rcaparameter', 'text', 'rcaparameter', 'receiving_area');
	addFieldToContentType('field_rcastartdate', 'date', 'rcastartdate', 'receiving_area');
	addFieldToContentType('field_rcamethod54', 'text', 'rcamethod54', 'receiving_area');
	addFieldToContentType('field_rcarelatedsa', 'text', 'rcarelatedsa', 'receiving_area');
	addFieldToContentType('field_rcarelatedsaremark', 'text', 'rcarelatedsaremark', 'receiving_area');
	addFieldToContentType('field_rcacodepredecessor', 'text', 'rcacodepredecessor', 'receiving_area');
	addFieldToContentType('field_rcaevolutiontype', 'text', 'rcaevolutiontype', 'receiving_area');
	addFieldToContentType('field_rcasalsaremark', 'text', 'rcasalsaremark', 'receiving_area');
	

    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  

	// Note vgo : il faudra bien checker que le format des dates du fichier xml est compatible avec le format attendu par
	// Drupal pour son champs Date.
	// Si ce n'est pas le cas, ajouter une conversion d'un format à l'autre lors de l'import du fichier xml.
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Change label in RCA layer styles
**/
function uwwtd_update_7135(&$context = null){
    uwwtd_install_trace(__FUNCTION__);

    if(!empty($GLOBALS['uwwtd_value']['rcatype_color'])){
        foreach($GLOBALS['uwwtd_value']['rcatype_color'] as $type=>$data){
            $row['name'] ='rca_'.strtolower($type);
            $row['title'] =isset($GLOBALS['uwwtd_value']['rcatype_labels'][$type])? $GLOBALS['uwwtd_value']['rcatype_labels'][$type] : 'RCA '.$type;
            $row['description'] = date('Y-m-d H:i:s');
            $row['data'] = $data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_styles', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers style ' . $row['title'] . '('.$msgresult.')'."\n";
            }
        }
    }
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }  
	//==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Mise à jour wording pour la page /content/useful-links.
 */
function uwwtd_update_7136(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Récupération du node de la page useful links :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', 'page', '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', 'Useful links', '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['nid'])) {
		// Mise à jour du body :
		$nodeFull = node_load($node['nid']);
		if (!empty($nodeFull->body[LANGUAGE_NONE][0]['value'])) {
			$nodeFull->body[LANGUAGE_NONE][0]['value'] = '<h2>European Commission - Directorate General Environment</h2><ul><li>DGENV website&nbsp; : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li></ul><ul><li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li></ul><h2>European Environment Agency</h2><h3><strong>Reporting Obligation Database (ROD):</strong></h3><ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul><h3><strong>Access to data and visualisation</strong></h3><ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul><h3>&nbsp;</h3><h2>European funds and loans</h2><ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p><h2>SIIF European and national platform</h2><ul><li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li><li>Croatia: <a href="https://uwwtd.eu/croatia/" target="_blank">https://uwwtd.eu/croatia/</a></li><li>Cyprus: <a href="https://uwwtd.eu/cyprus/" target="_blank">https://uwwtd.eu/cyprus/</a></li><li>Lithuania : <a href="https://uwwtd.eu/lithuania/" target="_blank">https://uwwtd.eu/lithuania/</a></li><li>Poland: <a href="https://uwwtd.eu/poland/" target="_blank">https://uwwtd.eu/poland/</a></li><li>Romania: <a href="https://uwwtd.eu/romania/" target="_blank">https://uwwtd.eu/romania/</a></li><li>Slovenia: <a href="https://uwwtd.eu/slovenia/" target="_blank">https://uwwtd.eu/slovenia/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Other national data viewers</h2><ul><li>French urban waste water website: <a href="http://assainissement.developpement-durable.gouv.fr/" target="_blank">http://assainissement.developpement-durable.gouv.fr/</a></li><li>Greek urban waste water website: <a href="http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx">http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx</a></li><li type="_moz">Luxembourg water geoportail: <a href="http://eau.geoportail.lu/">http://eau.geoportail.lu/</a></li></ul><p style="padding-left: 30px;">&nbsp;</p><h2>Good practices</h2><ul><li>Natural Water Retention Measures: <a href="http://nwrm.eu/" target="_blank">http://nwrm.eu/</a></li></ul>';
			node_save($nodeFull);
		}
	}
	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
	//==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Ajoute au type de contenu MS_LEVEL les champs "field_compliance_expired", "field_compliance_pending" et "field_compliance_total". 
 */
function uwwtd_update_7137(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Ajout de deux champs au type de contenu ms_level :
	addFieldToContentType('field_compliance_expired', 'text_long', 'Comparison of compliance expired.', 'ms_level');
	addFieldToContentType('field_compliance_pending', 'text_long', 'Comparison of compliance pending', 'ms_level');
	addFieldToContentType('field_compliance_total', 'text_long', 'Comparison of compliance total', 'ms_level');
	
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Ajout des couches SoE Nitrates et orthophosphates 
 */
function uwwtd_update_7138(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

        //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'soe_nitrates_2011.inc',
        'soe_phosphate_2011.inc',
        'oieau_rbd.inc',
        'oieau_rbdsu.inc',
        'oieau_nuts_0.inc',
        'oieau_nuts_1.inc',
        'oieau_nuts_2.inc',
        'oieau_nuts_3.inc',
    );
    $new_maps = array(
        'agg_compliance_map.inc',
        'agglomeration.inc',
        'dcp_map.inc',
        'rca_map.inc',
        'uwwtd_network_map.inc',
        'uwwtp_compliance_map.inc',
        'uwwtp_pressure_map.inc',
        'uwwtp_treatment_map.inc',
        'waste_water_treatment_network_map.inc',
        
    );
    
    uwwtd_update_map_overlay($country_config, $country_code, $new_maps, $new_overlays, array('-'));    
            
     ////////////////////////////////////////////////////////////////
    //end update
    variable_set('siif_eru_version', __FUNCTION__);
    
    drupal_flush_all_caches();
	
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
}

/**
 * Mise à jour wording pour la page /content/agglomerations (View/Discover).
 */
function uwwtd_update_7139(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Récupération du node de la page useful links :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', 'page', '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', 'Agglomerations', '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['nid'])) {
		// Mise à jour du body :
		$nodeFull = node_load($node['nid']);
		if (!empty($nodeFull->body[LANGUAGE_NONE][0]['value'])) {
			$nodeFull->body[LANGUAGE_NONE][0]['value'] = '
				<p>Under chapter IV, the INSPIRE Directive requires to establish network services and the article 11 lists the 5 services to implement, namely discover, view, download, transform and invoke services.</p>
				<p>NOTA: the platform refers to discover here as for non Inspire expert, discover means possibility to explore available data and the concept of metadata is not well known.</p>
				
				<p>On this section, you can access to pages providing discovery and view services , which means:</p>
				<p>
					<ul>
						<li>You can access an information fiche for each key geographical component of the Urban Waste Water Treatment Directive (91/271/EEC) describing in details what can be found, when and who updates the data and many more.</li>
						<li>You can visualise the data via maps, graphs and summary tables and individual fiches, navigate in the system, print, download and many more.</li>
					</ul>
					For the view part, you can access:
					<ul>	
						<li>The agglomerations with details on:
							<ul>
								<li><a href="'. base_path() .'agglomerations/compliance" title="compliance">compliance of the agglomerations</a>.</li>
								<li><a href="'. base_path() .'agglomerations/connection" title="connection">collection of wastewater</a><br /><br /></li>
							</ul>
						</li>
						<li>The waste water treatment plants with details on:
							<ul>
								<li><a href="'. base_path() .'uwwtps/compliance" title="compliance">compliance of the treatment plants</a></li>
								<li><a href="'. base_path() .'uwwtps/treatment" title="treatment">Level of treatment of wastewater</a></li>
								<li><a href="'. base_path() .'uwwtps/pressure" title="pressure">pollution pressures</a><br /><br /></li>
							</ul>
						</li>
						<li>The discharge points with details on localisation of the discharge points</li>
						<li>The <a href="'. base_path() .'sensitive-areas" title="https://uwwtd.eu/sensitive-areas">receiving areas</a> with details on delineation and localisation.</li>
					</ul>
				</p>';
			node_save($nodeFull);
		}
	}
	
    variable_set('siif_eru_version', __FUNCTION__);
	
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
}

/**
 * Mets à jour le texte du footer.
 */
function uwwtd_update_7140(&$context = null) {
	$pathbock = drupal_get_path('module', 'uwwtd') . '/script/block/footer7117.inc';
    uwwtd_install_trace($pathbock);
    //update block
    _block_rehash('uwwtd'); //theme name here
    
    //find the bid of the footer block
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Footer content', '=');
	$result = $query->execute();
    $bidfooter = -1;
	foreach($result as $row){
        $bidfooter = $row->bid;
        break;
	}
    
    if ($bidfooter == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for footer block');
    }        
    uwwtd_install_trace('find bid footer in block_custom table : ' . $bidfooter);
    //Change block settings old view
      db_update('block_custom')
      ->fields(array(
          'body' => file_get_contents($pathbock),
      ))
      ->condition('bid', $bidfooter)
      ->execute();
      
	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
}

/**
 * Mets à jour wording pour la page Credits et la page Disclaimer.
 */
function uwwtd_update_7141(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);

	// Récupération du node de la page Credits :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', 'page', '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', 'Credits', '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['nid'])) {
		// Mise à jour du body :
		$nodeFull = node_load($node['nid']);
		if (!empty($nodeFull->body[LANGUAGE_NONE][0]['value'])) {
			$nodeFull->body[LANGUAGE_NONE][0]['value'] = '
				<p>This UWWTD SIIF toolbox was developed by Office International de l’Eau (OIEau) for The European Commission Directorate General Environment under Specific contracts n°07.0307/2012/638595/D2 and further enhanced under specific contract n°07.0201/2014/SFRA/698614/ENV.C.2 implementing Framework Service Contract n°ENV.D.2/FRA/2012/0013.
				It is developed using open source softwares.</p>
				<p>A generic version together with instruction for installation and use can be found here <a href="https://github.com/OIEau/uwwtd" title="https://github.com/OIEau/uwwtd" target="_blank">https://github.com/OIEau/uwwtd</a></p>
				<p>Copyrights UWWTD-SIIF platform by Office International de l\'Eau is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</p>';
			node_save($nodeFull);
		}
	}
	
	// Récupération du node de la page Disclaimer :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', 'page', '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', 'Disclaimer', '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['nid'])) {
		// Mise à jour du body :
		$nodeFull = node_load($node['nid']);
		if (!empty($nodeFull->body[LANGUAGE_NONE][0]['value'])) {
			$nodeFull->body[LANGUAGE_NONE][0]['value'] = '
				<p><strong>The information on this site is subject to a disclaimer, a copyright notice and rules related to personal data protection.</strong></p>
				<p><strong>Disclaimer</strong></p>
				<p>This website is launched in the framework of Specific contracts n°07.0307/2012/638595/D2 and n°07.0201/2014/SFRA/698614/ENV.C.2 implementing Framework Service Contract n°ENV.D.2/FRA/2012/0013 for the European Commission, however it reflects the views only of the authors, and the Commission cannot be held responsible for any use which may be made of the information contained therein.
				The Office International de l’Eau maintains this website to enhance public access to information:
				<ul>
					<li>reported to the European Commission for the implementation of Directive 91/271/EC by the country</li>
					<li>or gathered at the national level in view of reporting between reporting periods,</li>
					<li>or gathered or available at national level for use by national authorities.</li>
				</ul>
				Our goal is to keep this information timely and accurate. If errors are brought to our attention, we will try to correct them. However, the Office International de l’Eau accepts no responsibility or liability whatsoever with regard to the information on this site. </p>
				<p>This information is: </p>
				<p>
				<ul>
					<li>of a general nature only and is not intended to address the specific circumstances of any particular individual or entity; </li>
					<li>not necessarily comprehensive, complete, accurate or up to date; </li>
					<li>sometimes linked to external sites over which Office International de l’Eau and DG Environment have no control and for which Office International de l’Eau and DG Environment assume no responsibility;</li>
					<li>not professional or legal advice (if you need specific advice, you should always consult a suitably qualified professional).</li>
				</ul>
				It is our goal to minimize disruption caused by technical errors. However some data or information on this site may have been created or structured in files or formats that are not error-free and we cannot guarantee that our service will not be interrupted or otherwise affected by such problems. Office International de l’Eau accepts no responsibility with regard to such problems incurred as a result of using this site or any linked external sites. </p>
				<p>This disclaimer is not intended to limit the liability of Office International de l’Eau in contravention of any requirements laid down in applicable national law nor to exclude its liability for matters which may not be excluded under that law. </p>
				<p><strong>Copyright notice</strong> <a href="http://creativecommons.org/licenses/by-nc/4.0/" title="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="license"><img style="border-width: 0;" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png" alt="Creative Commons License" /></a></p>
				<p><span>UWWTD-SIIF platform</span> by <a href="https://uwwtd.eu" title="uwwtd.oieau.fr" rel="cc:attributionURL">Office International de l\'Eau</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc/4.0/" rel="license">Creative Commons Attribution-NonCommercial 4.0 International License</a>.<br />Permissions beyond the scope of this license may be available at <a href="http://www.oieau.fr" title="www.oieau.fr" rel="cc:morePermissions">www.oieau.fr</a> </p>
				<p>This website is the property of UWWTD-SIIF project, a DGENV project lead by the UmweltBundesamt Austria in consortium with Office International de l’Eau - 15 rue E. Chamberland - 87065 Limoges Cedex - France </p>
				<p>Contact: <a href="mailto:contact@uwwtd.oieau.fr" title="contact@uwwtd.oieau.fr">contact@uwwtd.oieau.fr</a> – Project manager: Benoît Fribourg-blanc - Telephone: +33-(0)555 11 47 80 </p>
				<p>The general reproduction structure of texts, animated images or otherwise and any other component of the Website are the sole property of DG Environment. Any total or partial representation of this Website by any process whatsoever without the express authorization of the Natural Water Retention Measures project is forbidden and shall constitute unauthorized reproduction penalized by articles L.335-2 et seq. of the Code of intellectual property under French law. </p>
				<p>All of the rights of reproduction are reserved, including downloadable documents (logos, photos, catalogues, booklets, brochures, and any type of information whatsoever...). Downloadable documents are also protected by copyright.</p>
				<p>Similarly, databases appearing on the Website, which is protected by the provisions of the Intellectual Property Code concerning incorporation of the European directive of March 11, 1996 regarding the legal protection of databases produced by Office International de l’Eau.</p>
				<p> User or visitor of the Website are encouraged to install a hyperlink to this Website and inform Office International de l’Eau. </p>
				<p>The reuse is subject to the reuse policy of the European Commission implemented by a <a href="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2011:330:0039:0042:EN:PDF" title="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2011:330:0039:0042:EN:PDF" target="_blank">Decision of 12 December 2011</a>. </p>
				<p><strong>Personal Data Protection</strong></p>
				<p>As the user, you are informed, in accordance with French law of January 6. 1978 and its article 27 on the protection of data, files and civil liberties, that any optional data you may choose to provide when completing the forms located on the Website allowing us to respond to your request, are solely intended for the UWWTD SIIF project, which is responsible for the processing of the data, for administrative and business management purposes.</p>
				<p>You are informed that you have a right to access and rectify all personal data regarding you by writing to the Office International de l’Eau - 15 rue E. Chamberland - 87065 Limoges Cedex - France</p>
				<p> The UWWTD SIIF project is committed to European Union policy on user privacy.</p>
				<p> The policy on "protection of individuals with regard to the processing of personal data by the Community institutions" is based on Regulation (EC) N° 45/2001 of the European Parliament and of the Council of 18 December 2000.</p>
				<p> Although you can browse through most of the current website without giving any information about yourself, in some cases, personal information is required. Such information will be treated it according to the policy described in the Regulation mentioned above and the specific objective described on the website form, focussing mainly on providing interactive communication services and possibilities for a registered user to contribute to the project.</p>
				<p> The specific privacy policy statement of this website is the following:
				<ul>
					<li>We collect via the contact form your contact details and fields of expertise and/or interest to allow us involve you in the improvement of the website. The information will not be re-used for an incompatible purpose; </li>
					<li>Your information is solely disclosed to the partners of the UWWTD SIIF project and national authority of the country. We will only disclose information to third parties if that is necessary for the fulfilment of the purpose(s) identified above. We will not divulge your personal data for direct marketing purposes;</li>
					<li>By clicking on the “Send message” you give your unambiguous consent to UWWTD SIIF project to use your data for the above purpose.</li>
					<li>Your data will be kept by the UWWTD SIIF project for the duration of the project (December 2013-March 2015) and transferred to the public authority that will take over responsibility of the website.</li>
					<li>If you have queries or complaints, please contact the webmaster at <a href="mailto:contact@uwwtd.oieau.fr" title="contact@uwwtd.oieau.fr">contact@uwwtd.oieau.fr</a></li>
				</ul>
					How do we treat e-mails you send us? </p>
				<p>When using the "Contact" button, you activate a specific form that invites you to send your comments to a specific functional mailbox.</p>
				<p> When you send such a message, your personal data is collected only to the extent necessary to reply. If the management team of the mailbox is unable to answer your question, it will forward your e-mail to another expert. You will be informed, via e-mail, about which expert your question has been forwarded to.</p>
				<p> If you have any questions about the processing of your e-mail and related personal data, do not hesitate to include them in your message.</p>
				<p> <strong>Creation, development, hosting and management of the website</strong></p>
				<p> Office International de l’Eau (OIEau) for UWWTD SIIF project </p>
				<p><strong>Copyrights</strong> </p>
				<p>UWWTD-SIIF platform by Office International de l\'Eau is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License. Permissions beyond the scope of this license may be available at <a href="http://www.oieau.fr" title="www.oieau.fr" target="_blank">www.oieau.fr</a>.</p>
				<p> <strong>Contact</strong> </p>
				<p>Office International de l’Eau (OIEau) 15 rue Edouard Chamberland 87065 LIMOGES cedex</p>
				<p> <strong>Webmaster</strong></p>
				<p> b.fribourg-blanc[at]oieau.fr</p>';
			node_save($nodeFull);
		}
	}

	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 

}


/**
 * Update maps
 */    
function uwwtd_update_7142(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_maps = array(
        'agg_compliance_map.inc',
        'agglomeration.inc',
        'waste_water_treatment_network_map.inc',
        'dcp_map.inc',
        'rca_map.inc',
        'uwwtd_network_map.inc',
        'uwwtp_compliance_map.inc',
        'uwwtp_pressure_map.inc',
        'uwwtp_treatment_map.inc',
    );
    uwwtd_update_map_overlay($country_config, $country_code, $new_maps, array('-'), array('-'));
    drupal_flush_all_caches();
	
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    //==========DEBUG : permet de relancer la mise à jour si besoin.
// 	throw new DrupalUpdateException(__FUNCTION__);
} 

/**
 * Mets à jour les tool tips des champs du content type RECEIVING AREA.
 * Change le label des champs field_rca52applied, field_rca54applied et field_rca58applied.
 */
function uwwtd_update_7143(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
	
	// Définition des tool tips :
	setToolTips('field_rca52applied', 'When this Article of the urban waste water treatment directive 91/271/EC applies, Member States shall ensure that urban waste water entering collecting systems shall before discharge into this sensitive areas be subject to more stringent treatment for all discharges from agglomerations of more than 10 000 population equivalent. The starting date of application is the deadline that each agglomeration has to respect in this sensitive area.');
	setToolTips('field_rca_parameter_n', 'Nitrogen Criteria that is defined to be reduced in this sensitive area due to existing Eutrophication or potential future Eutrophication problems. This criteria is related to the annex II.a of the urban waste water treatment directive 91/271/EC');
	setToolTips('field_rcacdatedesignation', 'Official date of designation of the sensitive area.');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rca_parameter_p', 'Phosphorus Criteria that is defined to be reduced in this sensitive area due to existing Eutrophication or potential future Eutrophication problems. This criteria is related to the annex II.a of the urban waste water treatment directive 91/271/EC');
	setToolTips('field_rcacdatedesignation', 'Official date of designation of the sensitive area.');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rca_parameter_n', 'Nitrogen Criteria that is defined to be reduced in this sensitive area due to existing Eutrophication or potential future Eutrophication problems. This criteria is related to the annex II.a of the urban waste water treatment directive 91/271/EC');
	setToolTips('field_rcacdatedesignation', 'Official date of designation of the sensitive area.');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rca_parameter_other', 'When required agglomerations of more than 10 000 population equivalent that are discharging in this area have to implement a more stringent treatment adapted to the quality objectives of the directive that is related to designation criteria other');
	setToolTips('field_rcacdatedesignation', 'Official date of designation of the sensitive area.');
	setToolTips('field_rcaapstartdate', 'Date when the requirements of the sensitive area enter into force');
	setToolTips('field_rca_sensitive_area', 'Mainly when this sensitive area is a catchment that includes other sensitive areas.');
	setToolTips('field_rca_total_p_entering', 'Total Phosphorus incoming load of all treatment plants discharging in the sensitive area (in tons/year). The calculation has also to include the waste water load discharges without treatment. For the smallest treatment plants and the discharged without treatment the calculation can include estimation. ');
	setToolTips('field_rca_total_p_discharged', 'Total Phosphorus discharged load of all treatment plants discharging in the sensitive area (in tons/year). The calculation has also to include the waste water load discharged without treatment. For the smallest treatment plants and the discharges without treatment the calculation can include estimation. ');
	setToolTips('field_rca_total_n_entering', 'Total Nitrogen discharged load of all treatment plants discharging in the sensitive area (in tons/year). The calculation has also to include the waste water load discharged without treatment. For the smallest treatment plants and the discharges without treatment the calculation can include estimation. ');
	setToolTips('field_rca_total_n_discharged', 'Total Nitrogen discharged load of all treatment plants discharging in the sensitive area (in tons/year). The calculation has also to include the waste water load discharged without treatment. For the smallest treatment plants and the discharges without treatment the calculation can include estimation. ');
	setToolTips('field_rcaplants', 'Total number of urban waste water treatment plants that are discharging in the sensitive area. The calculation includes treatment plants belonging to agglomerations less than 10 000 p.e. (also 2000 p.e. and below)');
	setToolTips('field_rcaaphos', 'Phosphorus Criteria that is defined to be reduced in this sensitive area due to existing Eutrophication or potential future Eutrophication problems. This criteria is related to the annex II.a of the urban waste water treatment directive 91/271/EC');
	setToolTips('field_rcab', 'Nitrogen Criteria that is defined to be reduced in this sensitive area due to nitrogen quality of drinking water when this receiving area is intended to be used for the asbtraction of drinking water. This criteria is related to the annex II.b of the urban waste water treatment directive 91/271/EC');
	setToolTips('field_rcac', 'Other parameters related to further treatment than secondary treatment that are defined to fulfil other European directive objectives. This criteria is related to the annex II.c of the urban waste water treatment directive 91/271/EC');
	
	// Change les labels :
	setFieldLabel('field_rca52applied', 'Article 5(2) applied');
	setFieldLabel('field_rca54applied', 'Article 5(4) applied');
	setFieldLabel('field_rca58applied', 'Article 5(8) applied');
	
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}

 /**
 * Define new SoE layers
 */   
function uwwtd_update_7144(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'soe_bod.inc',
        'soe_nh3.inc',
        'soe_nitrate.inc',
        'soe_phosphorus.inc'
    );
    uwwtd_update_map_overlay($country_config, $country_code, array(), $new_overlays, array('-'));
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}   


 /**
 * Add new SoE layers in all maps
 */   
function uwwtd_update_7145(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_maps = array(
        'agg_compliance_map.inc',
        'agglomeration.inc',
        'waste_water_treatment_network_map.inc',
        'dcp_map.inc',
        'rca_map.inc',
        'uwwtd_network_map.inc',
        'uwwtp_compliance_map.inc',
        'uwwtp_pressure_map.inc',
        'uwwtp_treatment_map.inc',
    );
    uwwtd_update_map_overlay($country_config, $country_code, $new_maps, array('-'), array('-'));
    drupal_flush_all_caches();
    
    
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}   
    


 /**
 * Update SoE layers in order to exclude piechart layer in small scale
 * Add potx and l10n_client modules
 */   
function uwwtd_update_7146(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'soe_bod.inc',
        'soe_nh3.inc',
        'soe_nitrate.inc',
        'soe_phosphorus.inc'
    );
    uwwtd_update_map_overlay($country_config, $country_code, array(), $new_overlays, array('-'));
    
    
    if (false === module_enable(array('potx'))) {
        $msg = "Error, module potx can\'t be enabled, see in module page if a dependency is needed or if this module is installed";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    if (false === module_enable(array('l10n_client'))) {
        $msg = "Error, module potx can\'t be enabled, see in module page if a dependency is needed or if this module is installed";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    
    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}
    
  /**
 * Add tooltips on aggc1, aggc2 aggpercwithouttereatment
 * forece reimport of map
 */   
function uwwtd_update_7147(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  

    uwwtd_update_map_overlay($country_config, $country_code, array('waste_water_treatment_network_map.inc'), array('-'), array('-'));
    
    $list_field_to_update = array(
        'field_aggc1' => "Rate of generated load of agglomeration collected through collecting system (% of p.e.)",
        'field_aggc2' => "Rate of generated load of agglomeration addressed through IAS (% of p.e.)",
        'field_aggpercwithouttreatment' => "Rate of generated load of agglomeration not collected through collecting systems and not addressed through IAS (% of p.e.)"
    );
    $msg_error = '';
    foreach($list_field_to_update as $fieldname => $tooltip) {
        $infofield = field_info_field($fieldname);
        $infofield['custom_tooltip'] = $tooltip;
        try {
            field_update_field($infofield);
        }
        catch (Exception $e) {
            $msg = "Error update field : ".$infofield['field_name']."\n";
            $msg .= $e->getMessage() . "\n"; 
            uwwtd_install_trace($msg);
            $msg_error .= $msg . "\n";          
        } 
    }
    
    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}
    
//Re-asing field : field_zonetype to "receiving_area" bundle (before it was assigned to agglomeration)
function uwwtd_update_7148(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    // Mise à jour de la base :
    db_update('field_config_instance')
        ->fields(array('bundle' => 'receiving_area'))
        ->condition('field_name', 'field_zonetype', '=')
        ->execute();
    
    
    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}

function uwwtd_update_7149(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    // Mise à jour de la base :
    $batch = array(
        'title' => t('Installing UWWTD'),
        'operations' => array(
          array('uwwtd_install_content_type', array()),  
        ),
        'finished' => 'uwwtd_install_batch_finished',
        'init_message' => t('Start to install uwwtd...'),
        'progress_message' => t('installing...'),
        'error_message' => t('An error occured while installing.'),
        'file' => drupal_get_path('module', 'uwwtd') . '/uwwtd.install',
    );

     batch_set($batch);
    
    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 

	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}
function uwwtd_update_7150(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    
    // Mise à jour de la base :
    db_query('ALTER TABLE drupal_field_data_field_uwwhistorie ALTER COLUMN field_uwwhistorie_value TYPE character varying(2500)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwhistorie ALTER COLUMN field_uwwhistorie_value TYPE character varying(2500)');
    
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    
    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
	//throw new DrupalUpdateException(__FUNCTION__);
}

function uwwtd_update_7151(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);    
    variable_set('siif_eru_version', __FUNCTION__);
    
    setDecimalAccuracy('field_soecinvcol', 15, 2);

    db_query('ALTER TABLE drupal_field_data_field_soecinvcol ALTER COLUMN field_soecinvcol_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_soecinvcol ALTER COLUMN field_soecinvcol_value TYPE NUMERIC(15,2)');

    setDecimalAccuracy('field_soecinvtp', 15, 2);

    db_query('ALTER TABLE drupal_field_data_field_soecinvtp ALTER COLUMN field_soecinvtp_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_soecinvtp ALTER COLUMN field_soecinvtp_value TYPE NUMERIC(15,2)');

    setDecimalAccuracy('field_art17_flagginv', 15, 2);

    db_query('ALTER TABLE drupal_field_data_field_art17_flagginv ALTER COLUMN field_art17_flagginv_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_art17_flagginv ALTER COLUMN field_art17_flagginv_value TYPE NUMERIC(15,2)');

    drupal_flush_all_caches();
   
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    
	//==========DEBUG : permet de relancer la mise à jour si besoin.
//	throw new DrupalUpdateException(__FUNCTION__);
}


function uwwtd_update_7152(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);

    // Mise à jour de la variable "min_aggenerated_display" :
    variable_set('min_aggenerated_display', '1999');

    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');

    // uwwBODIncomingMeasured :
    setDecimalAccuracy('field_uwwbodincoming', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwbodincoming ALTER COLUMN field_uwwbodincoming_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwbodincoming ALTER COLUMN field_uwwbodincoming_value TYPE NUMERIC(15,2)');

    // uwwCODIncomingMeasured :
    setDecimalAccuracy('field_uwwcodincoming', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcodincoming ALTER COLUMN field_uwwcodincoming_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcodincoming ALTER COLUMN field_uwwcodincoming_value TYPE NUMERIC(15,2)');

    // uwwNIncomingMeasured :
    setDecimalAccuracy('field_uwwnincoming', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwnincoming ALTER COLUMN field_uwwnincoming_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwnincoming ALTER COLUMN field_uwwnincoming_value TYPE NUMERIC(15,2)');

    // uwwPIncomingMeasured :
    setDecimalAccuracy('field_uwwpincoming', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpincoming ALTER COLUMN field_uwwpincoming_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpincoming ALTER COLUMN field_uwwpincoming_value TYPE NUMERIC(15,2)');

    // uwwBODDischargeMeasured :
    setDecimalAccuracy('field_uwwboddischarge', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwboddischarge ALTER COLUMN field_uwwboddischarge_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwboddischarge ALTER COLUMN field_uwwboddischarge_value TYPE NUMERIC(15,2)');

    // uwwCODDischargeMeasured :
    setDecimalAccuracy('field_uwwcoddischarge', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcoddischarge ALTER COLUMN field_uwwcoddischarge_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcoddischarge ALTER COLUMN field_uwwcoddischarge_value TYPE NUMERIC(15,2)');

    // uwwNDischargeMeasured :
    setDecimalAccuracy('field_uwwndischarge', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwndischarge ALTER COLUMN field_uwwndischarge_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwndischarge ALTER COLUMN field_uwwndischarge_value TYPE NUMERIC(15,2)');

    // uwwPDischargeMeasured :
    setDecimalAccuracy('field_uwwpdischarge', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpdischarge ALTER COLUMN field_uwwpdischarge_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpdischarge ALTER COLUMN field_uwwpdischarge_value TYPE NUMERIC(15,2)');

    // uwwWasteWaterTreated :
    setDecimalAccuracy('field_uwwwastewatertreated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwwastewatertreated ALTER COLUMN field_uwwwastewatertreated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwwastewatertreated ALTER COLUMN field_uwwwastewatertreated_value TYPE NUMERIC(15,2)');

    // --

    // uwwBODDischargeCalculated :
    setDecimalAccuracy('field_uwwboddischargecalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwboddischargecalculated ALTER COLUMN field_uwwboddischargecalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwboddischargecalculated ALTER COLUMN field_uwwboddischargecalculated_value TYPE NUMERIC(15,2)');

    // uwwBODDischargeEstimated :
    setDecimalAccuracy('field_uwwboddischargeestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwboddischargeestimated ALTER COLUMN field_uwwboddischargeestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwboddischargeestimated ALTER COLUMN field_uwwboddischargeestimated_value TYPE NUMERIC(15,2)');

    // uwwBODIncomingCalculated :
    setDecimalAccuracy('field_uwwbodincomingcalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwbodincomingcalculated ALTER COLUMN field_uwwbodincomingcalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwbodincomingcalculated ALTER COLUMN field_uwwbodincomingcalculated_value TYPE NUMERIC(15,2)');

    // uwwBODIncomingEstimated :
    setDecimalAccuracy('field_uwwbodincomingestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwbodincomingestimated ALTER COLUMN field_uwwbodincomingestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwbodincomingestimated ALTER COLUMN field_uwwbodincomingestimated_value TYPE NUMERIC(15,2)');

    // uwwCODDischargeCalculated :
    setDecimalAccuracy('field_uwwcoddischargecalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcoddischargecalculated ALTER COLUMN field_uwwcoddischargecalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcoddischargecalculated ALTER COLUMN field_uwwcoddischargecalculated_value TYPE NUMERIC(15,2)');

    // uwwCODDischargeEstimated :
    setDecimalAccuracy('field_uwwcoddischargeestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcoddischargeestimated ALTER COLUMN field_uwwcoddischargeestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcoddischargeestimated ALTER COLUMN field_uwwcoddischargeestimated_value TYPE NUMERIC(15,2)');

    // uwwCODIncomingCalculated :
    setDecimalAccuracy('field_uwwcodincomingcalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcodincomingcalculated ALTER COLUMN field_uwwcodincomingcalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcodincomingcalculated ALTER COLUMN field_uwwcodincomingcalculated_value TYPE NUMERIC(15,2)');

    // uwwCODIncomingEstimated :
    setDecimalAccuracy('field_uwwcodincomingestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwcodincomingestimated ALTER COLUMN field_uwwcodincomingestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwcodincomingestimated ALTER COLUMN field_uwwcodincomingestimated_value TYPE NUMERIC(15,2)');

    // --

    // uwwNDischargeCalculated :
    setDecimalAccuracy('field_uwwndischargecalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwndischargecalculated ALTER COLUMN field_uwwndischargecalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwndischargecalculated ALTER COLUMN field_uwwndischargecalculated_value TYPE NUMERIC(15,2)');

    // uwwNDischargeEstimated :
    setDecimalAccuracy('field_uwwndischargeestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwndischargeestimated ALTER COLUMN field_uwwndischargeestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwndischargeestimated ALTER COLUMN field_uwwndischargeestimated_value TYPE NUMERIC(15,2)');

    // uwwNIncomingCalculated :
    setDecimalAccuracy('field_uwwnincomingcalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwnincomingcalculated ALTER COLUMN field_uwwnincomingcalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwnincomingcalculated ALTER COLUMN field_uwwnincomingcalculated_value TYPE NUMERIC(15,2)');

    // uwwNIncomingEstimated :
    setDecimalAccuracy('field_uwwnincomingestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwnincomingestimated ALTER COLUMN field_uwwnincomingestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwnincomingestimated ALTER COLUMN field_uwwnincomingestimated_value TYPE NUMERIC(15,2)');

    // uwwPDischargeCalculated :
    setDecimalAccuracy('field_uwwpdischargecalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpdischargecalculated ALTER COLUMN field_uwwpdischargecalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpdischargecalculated ALTER COLUMN field_uwwpdischargecalculated_value TYPE NUMERIC(15,2)');

    // uwwPDischargeEstimated :
    setDecimalAccuracy('field_uwwpdischargeestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpdischargeestimated ALTER COLUMN field_uwwpdischargeestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpdischargeestimated ALTER COLUMN field_uwwpdischargeestimated_value TYPE NUMERIC(15,2)');

    // uwwPIncomingCalculated :
    setDecimalAccuracy('field_uwwpincomingcalculated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpincomingcalculated ALTER COLUMN field_uwwpincomingcalculated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpincomingcalculated ALTER COLUMN field_uwwpincomingcalculated_value TYPE NUMERIC(15,2)');

    // uwwPIncomingEstimated :
    setDecimalAccuracy('field_uwwpincomingestimated', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_uwwpincomingestimated ALTER COLUMN field_uwwpincomingestimated_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_uwwpincomingestimated ALTER COLUMN field_uwwpincomingestimated_value TYPE NUMERIC(15,2)');

    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');

    drupal_flush_all_caches();

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
//    throw new DrupalUpdateException(__FUNCTION__);
}


function uwwtd_update_7153(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);

    setFieldLabel('field_rca58applied', 'All territory covered (5.8)');
    setFieldLabel('field_rcaanitro', 'Eutrophication - Nitrogen');
    setFieldLabel('field_rcaaphos', 'Eutrophication - Phosphorus');
    setFieldLabel('field_rcab', 'Drinking water - Nitrogen');
    setFieldLabel('field_rcac', 'Other directives');
    setFieldLabel('field_rca_parameter_n', 'Nitrogen');
    setFieldLabel('field_rca_parameter_m', 'Microbiology');
    setFieldLabel('field_rca_parameter_p', 'Phosphorus');
    setFieldLabel('field_rca_parameter_other', 'Other');
    setFieldLabel('field_rcaremarks', 'General comment');
    setFieldLabel('field_rcacodepredecessor', 'Predecessor');
    setFieldLabel('field_rcaevolutiontype', 'Evolution Type');
    setFieldLabel('rcasalsaRemark', 'Comment');
    setFieldLabel('field_rcaendlife', 'Endlife of the SA');
    setFieldLabel('field_rcabeginlife', 'Beginlife of the SA');

    drupal_flush_all_caches();

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
//    throw new DrupalUpdateException(__FUNCTION__);
}


function uwwtd_update_7154(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);

    // Ajout de 25 (Oui 25) nouveaux champs au contenu Agglomeration pour l'export vers le site Europe
    addFieldToContentType('field_region_nuts1', 'text', 'Region (NUTS1)', 'agglomeration');
    addFieldToContentType('field_region_nuts2', 'text', 'Region (NUTS2)', 'agglomeration');
    addFieldToContentType('field_region_nuts3', 'text', 'Region (NUTS3)', 'agglomeration');
    addFieldToContentType('field_agg_connected_load_pe', 'number_integer', 'Connected load', 'agglomeration');
    addFieldToContentType('field_agg_ias_load_pe', 'number_integer', 'Load treated through IAS', 'agglomeration');
    addFieldToContentType('field_agg_discharge_pe', 'number_integer', 'Load discharged without treatment', 'agglomeration');
    addFieldToContentType('field_agg_art3_comp_register', 'text', 'Connection compliance (Art 3) official', 'agglomeration');
    addFieldToContentType('field_agg_art4_comp_register', 'text', '2nd treatment compliance (Art 4) official', 'agglomeration');
    addFieldToContentType('field_agg_art5_comp_register', 'text', '3rd treatment compliance (Art 5) official', 'agglomeration');
    addFieldToContentType('field_agg_art6_comp_register', 'text', 'Less sensitive area compliance (Art 6) official', 'agglomeration');
    addFieldToContentType('field_agg_comp_register', 'text', 'Global compliance official', 'agglomeration');
    addFieldToContentType('field_agg_equip_s', 'number_integer', 'Installation in place for secondary treatment', 'agglomeration');
    addFieldToContentType('field_agg_perf_s', 'number_integer', 'Monitoring results ok for secondary treatment', 'agglomeration');
    addFieldToContentType('field_agg_equip_met_ms', 'number_integer', 'Installation in place for more stringent treatment', 'agglomeration');
    addFieldToContentType('field_agg_perf_met_ms', 'number_integer', 'Monitoring results ok for more stringent treatment', 'agglomeration');
    addFieldToContentType('field_agg_equip_ms', 'number_integer', 'More stringent in place', 'agglomeration');
    addFieldToContentType('field_agg_perf_ms', 'number_integer', 'More stringent monitoring ok', 'agglomeration');
    addFieldToContentType('field_agg_bc_notreatment', 'number_decimal', 'Big city - Best treatment : No treatment', 'agglomeration');
    addFieldToContentType('field_agg_bc_primary', 'number_decimal', 'Big city - Best treatment : Primary', 'agglomeration');
    addFieldToContentType('field_agg_bc_secondary', 'number_decimal', 'Big city - Best treatment : Secondary', 'agglomeration');
    addFieldToContentType('field_agg_bc_morestringet_np', 'number_decimal', 'Big city - Best treatment : More stringent NP', 'agglomeration');
    addFieldToContentType('field_agg_bc_morestringet_other', 'number_decimal', 'Big city - Best treatment : More stringent other', 'agglomeration');
    addFieldToContentType('field_agg_typeof_sa', 'text', 'Type of sensitive area', 'agglomeration');
    addFieldToContentType('field_agg_art_applied_sa', 'text', 'Article applied for SA', 'agglomeration');
    addFieldToContentType('field_agg_rbd_code', 'text', 'RBD Code', 'agglomeration');

    setDecimalAccuracy('field_agglatitude', 20, 8);
    setDecimalAccuracy('field_agglongitude', 20, 8);
    setDecimalAccuracy('field_uwwlatitude', 20, 8);
    setDecimalAccuracy('field_uwwlongitude', 20, 8);
    setDecimalAccuracy('field_dcplatitude', 20, 8);
    setDecimalAccuracy('field_dcplongitude', 20, 8);

    drupal_flush_all_caches();

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}

//nd@oieau.fr Update for maps && footer content
function uwwtd_update_7155(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
    drupal_flush_all_caches();
    
    //Remove old module --> fix error message for drupal > 7.50
    $modules = array(
        'openlayers_geosearch',
        'datatables',
        'uwwtd_edtiorial_menu',
        'view_settings__agglo_conformity',
        'view_settings__uwwtp_treatment',
        'uwwtd_content_types',
        'article_17_content_type',
        'types_de_contenu',
        'view_settings__agglomeration',
        'statistics_uwwtd',
        'uwwtd_bulk_data_deletion_view',
        'view_settings__uwwtp_map',
        'foobartable'
      );
      db_delete('system')
        ->condition('name', $modules, 'IN')
        ->condition('type', 'module')
        ->execute();
    
    //Update maps
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code); 
    
    
    /**
     * Mets à jour le texte du footer.
     */
	$pathbock = drupal_get_path('module', 'uwwtd') . '/script/block/footer7117.inc';
    uwwtd_install_trace($pathbock);
    //update block
    _block_rehash('uwwtd'); //theme name here
    
    //find the bid of the footer block
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Footer content', '=');
	$result = $query->execute();
    $bidfooter = -1;
	foreach($result as $row){
        $bidfooter = $row->bid;
        break;
	}
    
    if ($bidfooter == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for footer block');
    }        
    uwwtd_install_trace('find bid footer in block_custom table : ' . $bidfooter);
    //Change block settings old view
      db_update('block_custom')
      ->fields(array(
          'body' => file_get_contents($pathbock),
      ))
      ->condition('bid', $bidfooter)
      ->execute();
      
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}
   
//nd@oieau.fr Update for maps
function uwwtd_update_7156(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
    
    
    //Update maps
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code); 
    
    
    /**
     * Mets à jour le texte du footer.
     */
	$pathbock = drupal_get_path('module', 'uwwtd') . '/script/block/footer7117.inc';
    uwwtd_install_trace($pathbock);
    //update block
    _block_rehash('uwwtd'); //theme name here
    
    //find the bid of the footer block
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Footer content', '=');
	$result = $query->execute();
    $bidfooter = -1;
	foreach($result as $row){
        $bidfooter = $row->bid;
        break;
	}
    
    if ($bidfooter == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for footer block');
    }        
    uwwtd_install_trace('find bid footer in block_custom table : ' . $bidfooter);
    //Change block settings old view
      db_update('block_custom')
      ->fields(array(
          'body' => file_get_contents($pathbock),
      ))
      ->condition('bid', $bidfooter)
      ->execute();
    
    
      
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}   


//nd@oieau.fr Update page
function uwwtd_update_7157(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    if ($country_code == '-1') {
        throw new DrupalUpdateException('Can\'t detect country code.');    
    } 
    
    variable_set('site_name', 'European Commission urban waste water website: '.$country_list[$country_code]['CountryName']);
    
    /**
     * Mets à jour le texte du footer.
     */
	$pathbock = drupal_get_path('module', 'uwwtd') . '/script/block/footer7117.inc';
    uwwtd_install_trace($pathbock);
    //update block
    _block_rehash('uwwtd'); //theme name here
    
    //find the bid of the footer block
	$query = db_select('block_custom', 'bc');
    $query->fields('bc', array('bid'));             
    $query->condition('bc.info', 'Footer content', '=');
	$result = $query->execute();
    $bidfooter = -1;
	foreach($result as $row){
        $bidfooter = $row->bid;
        break;
	}
    
    if ($bidfooter == -1) {
        throw new DrupalUpdateException('Error, can\'t find bid id for footer block');
    }        
    uwwtd_install_trace('find bid footer in block_custom table : ' . $bidfooter);
    //Change block settings old view
      db_update('block_custom')
      ->fields(array(
          'body' => file_get_contents($pathbock),
      ))
      ->condition('bid', $bidfooter)
      ->execute();
    
    
    //Useful links page 
    $countries = array(
        'Austria',
        'Belgium',
        'Bulgaria',
        'Cyprus',
        'Czech Republic',
        'Germany',
        'Denmark',
        'Estonia',
        'Spain',
        'Finland',
        'France',
        'Greece',
        'Croatia',
        'Hungary',
        'Ireland',
        'Italia',
        'Lithuania',
        'Luxembourg',
        'Latvia',
        'Malta',
        'Netherlands',
        'Poland',
        'Portugal',
        'Romania',
        'Sweden',
        'Slovenia',
        'Slovakia',
        'United Kingdom'
    );
    $cstr = '' ;
    foreach($countries as $c){
       $cstr.= '<li>'.$c.': <a href="https://uwwtd.eu/'.str_replace(' ', '-', $c).'/" target="_blank">https://uwwtd.eu/'.str_replace(' ', '-', $c).'/</a></li>'; 
    }
    $query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'Useful links', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = '<h2>European Commission - Directorate General Environment</h2>
            <ul>
                <li>DGENV website : <a href="http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/index_en.html</a></li>
                <li>Implementation reports <a href="http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm" target="_blank">http://ec.europa.eu/environment/water/water-urbanwaste/implementation/implementationreports_en.htm</a></li>
                <li><a href="https://uwwtd.eu/docs/III.2_Evaluation_information_Q2013_rev1_20141031.pdf">Evaluation of reporting information 2014</a></li>
                <li><a href="https://uwwtd.eu/docs/Point_5_legal_compliance_assessment_methodology_document.pdf">Legal compliance assessment 2014</a></li>
            </ul>
            <h2>European Environment Agency</h2>
            <h3><strong>Reporting Obligation Database (ROD):</strong></h3>
            <ul><li>UWWT Directive fiche <a href="http://rod.eionet.europa.eu/instruments/543" target="_blank">http://rod.eionet.europa.eu/instruments/543</a></li><li>National Implementation Programme for UWWT Directive - Article 17&nbsp; <a href="http://rod.eionet.europa.eu/obligations/524" target="_blank">http://rod.eionet.europa.eu/obligations/524</a></li><li>UWWT Directive - Article 16 - Situation report&nbsp;&nbsp; <a href="http://rod.eionet.europa.eu/obligations/387" target="_blank">http://rod.eionet.europa.eu/obligations/387</a></li><li>UWWT Directive - Article 15 - implementation&nbsp; <a href="http://rod.eionet.europa.eu/obligations/613" target="_blank">http://rod.eionet.europa.eu/obligations/613</a></li></ul>
            <h3><strong>Access to data and visualisation</strong></h3>
            <ul><li>European Waterbase UWWTD <a href="http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive" target="_blank">http://www.eea.europa.eu/data-and-maps/data/waterbase-uwwtd-urban-waste-water-treatment-directive</a></li><li>UWWTD EU data viewer <a href="http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps" target="_blank">http://www.eea.europa.eu/data-and-maps/uwwtd/interactive-maps/urban-waste-water-treatment-maps</a></li></ul>
            
            <h2>European funds and loans</h2>
            <ul><li>DG Regio :&nbsp; <a href="http://ec.europa.eu/regional_policy/" target="_blank">http:://ec.europa.eu/regional_policy/</a></li><li>Funding LIFE projects : <a href="http://ec.europa.eu/environment/life/funding/life.htm" target="_blank">http://ec.europa.eu/environment/life/funding/life.htm</a></li><li>Water life project : <a href="http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75" target="_blank">http://ec.europa.eu/environment/life/project/Projects/index.cfm?fuseaction=home.getProjects&amp;themeID=75</a></li><li>European Investment Bank : <a href="http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en" target="_blank">http://www.eib.org/projects/sectors/water-and-waste-water-management/index.htm?lang=en</a></li></ul><p>&nbsp;</p>
            <h2>SIIF European and national platform</h2>
            <ul>
                <li>Generic open-source platform: <a href="https://uwwtd.eu/" target="_blank">https://uwwtd.eu/</a></li>
                '.$cstr.'
            </ul>
            <p style="padding-left: 30px;">&nbsp;</p>
            
            <h2>Other national data viewers</h2>
                <ul>
                    <li>French urban waste water website: <a href="http://assainissement.developpement-durable.gouv.fr/" target="_blank">http://assainissement.developpement-durable.gouv.fr/</a></li>
                    <li>Greek urban waste water website: <a href="http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx">http://astikalimata.ypeka.gr/Services/Pages/Browse.aspx</a></li>
                    <li type="_moz">Luxembourg water geoportail: <a href="http://eau.geoportail.lu/">http://eau.geoportail.lu/</a></li>
                </ul><p style="padding-left: 30px;">&nbsp;</p>
        <h2>Good practices</h2>
        <ul><li>Natural Water Retention Measures: <a href="http://nwrm.eu/" target="_blank">http://nwrm.eu/</a></li></ul>
        <h2>Documents</h2>
        <ul>
            <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-algorithms-v24.pdf" target="_blank">Compliance rules schema</a></li>
            <li><a href="https://uwwtd.eu/docs/Website_functionnalities_Version_1.pdf" target="_blank">Website functionnalities</a></li>
            <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-Administration-guide-vf.pdf" target="_blank">Website administration-guide</a></li>
            <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-installation-guide-vf.pdf" target="_blank">Website installation guide on unix system</a></li>
            <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-installation-guide-Windows-vf.pdf" target="_blank">Website installation guide on windows system</a></li>
        </ul>
        ';
        node_save($node);
        break;
	}
    

    //SIIF for developers page
    $query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'page', '=');
    $query->condition('n.title', 'SIIF for developers', '=');
    $query->condition('n.language', 'und', '=');
	$result = $query->execute();
	foreach($result as $row){
		$node = node_load($row->nid);
        $node->body['und'][0]['value'] = '
            <div>
                <h2>GIT Space</h2>
                <ul>
                    <li><a href="https://github.com/OIEau/uwwtd" target="_blank" title="https://github.com/OIEau/uwwtd">The development platform with the toolbox and its documentation</a></li>
                    <li><a href="https://github.com/OIEau/uwwtd/issues" target="_blank" title="https://github.com/OIEau/uwwtd/issues">The bug tracker section</a></li>
                </ul>
                <h2>Documents</h2>
                <ul>
                    <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-algorithms-v24.pdf" target="_blank">Compliance rules schema</a></li>
                    <li><a href="https://uwwtd.eu/docs/Website_functionnalities_Version_1.pdf" target="_blank">Website functionnalities</a></li>
                    <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-Administration-guide-vf.pdf" target="_blank">Website administration-guide</a></li>
                    <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-installation-guide-vf.pdf" target="_blank">Website installation guide on unix system</a></li>
                    <li><a href="https://uwwtd.eu/docs/UWWTD-SIIF-Toolbox-2015-installation-guide-Windows-vf.pdf" target="_blank">Website installation guide on windows system</a></li>
                    <li><a href="https://uwwtd.eu/docs/QAQCStandaloneModule-UWWTD-SIIF_version1.pdf" target="_blank">Standalone QA/QC module - Installation guide and user manual</a></li>
                    <li><a href="https://uwwtd.eu/docs/semiology-UWWTD-SIIF_version1.pdf" target="_blank">Semiology document on UWWTD-SIIF platform</a></li>
                </ul>
            </div>
        
        ';
        node_save($node);
        break;
	}

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}   
   
//nd@oieau.fr Update page
function uwwtd_update_7158(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'natura2000.inc'
    );
    uwwtd_update_map_overlay($country_config, $country_code, array(), $new_overlays, array('-'));
    
    

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}   
//nd@oieau.fr Update page
function uwwtd_update_7159(&$context = null) {
    uwwtd_install_trace(__FUNCTION__);
    variable_set('siif_eru_version', __FUNCTION__);
    
    //force update for maps
    //Add new layers
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');  
    $new_overlays = array(
        'natura2000.inc'
    );
    uwwtd_update_map_overlay($country_config, $country_code, array(), $new_overlays, array('-'));
    
    

    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }

    //==========DEBUG : permet de relancer la mise à jour si besoin.
    //throw new DrupalUpdateException(__FUNCTION__);
}   
   
function uwwtd_update_7160(&$context = null){
    //Change type definition for field_soeceufunds
    setDecimalAccuracy('field_soeceufunds', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_soeceufunds ALTER COLUMN field_soeceufunds_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_soeceufunds ALTER COLUMN field_soeceufunds_value TYPE NUMERIC(15,2)');

    //field_soecinvias
    setDecimalAccuracy('field_soecinvias', 15, 2);
    db_query('ALTER TABLE drupal_field_data_field_soecinvias ALTER COLUMN field_soecinvias_value TYPE NUMERIC(15,2)');
    db_query('ALTER TABLE drupal_field_revision_field_soecinvias ALTER COLUMN field_soecinvias_value TYPE NUMERIC(15,2)');

    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    
    //Change base layer from google map to OSM
    //Update natura 2000 layer 
    //Update OIEau layers
    //$maps = array('waste_water_treatment_network_map.inc');
    //,  array('waste_water_treatment_network_map.inc'), array('-'), array('-')
    uwwtd_update_map_overlay($country_config, $country_code);   
    
    
    
    
    
    /*
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    }
    */
    //==========DEBUG : permet de relancer la mise à jour si besoin.
//     throw new DrupalUpdateException(__FUNCTION__);
    
}

/**
 * Correction of HTML entites in node title 
 *         &#039;  &amp;  &gt;   &lt;  &quot; 
 */
function uwwtd_update_7161(&$context = null){

    $path = drupal_get_path('module', 'uwwtd') . '/script/html_entities_correction/html_entities_correction.inc.php';
    include($path);

    foreach ($request as $query) {
//        dsm($query);
       uwwtd_install_trace($query);
       $result = db_query($query);
    }


    //==========DEBUG : permet de relancer la mise à jour si besoin.
//     throw new DrupalUpdateException(__FUNCTION__);    
}

/**
 * Import of the bigcityid of the country for 10th report 2016 
 */
function uwwtd_update_7162(&$context = null){
    uwwtd_install_trace(__FUNCTION__);
    //file from http://dd.eionet.europa.eu/dataelements/94129    > export > csv
    $path = drupal_get_path('module', 'uwwtd') . '/script/uwwtd_update_7162/bigCityID.csv';

    $r = fopen($path, 'r');

    fgetcsv($r);
    fgetcsv($r);

    global $conf;    
    uwwtd_install_trace($conf['siif_eru_country_code']);

//     throw new DrupalUpdateException(__FUNCTION__);    

    // "Code","Label","Definition"
    // "AT006","AT","GRAZ"
    $i = 0;
    while ($row = fgetcsv($r)) {
       if ($row[1] == strtoupper($conf['siif_eru_country_code'])) {
         uwwtd_install_create_big_city($row, 2016);
         $i++;
       }
    }
    uwwtd_install_trace('write ' . $i . ' big_city');
    fclose($r);

    //==========DEBUG : permet de relancer la mise à jour si besoin.
//     throw new DrupalUpdateException(__FUNCTION__);    
}


/**
 * Create the link between agglo and big city if exists
 */
function uwwtd_update_7163(&$context){
    uwwtd_install_trace(__FUNCTION__);
    include_once(drupal_get_path('module', 'uwwtd') . '/inc/data_center.inc');
                       
    uwwtd_link_bc_agglo_batch_process('', 2016, array('notempty' => true), strtotime('now'), $context);
    $context['#finished'] = $context['finished'];
//     uwwtd_install_trace(var_export($context, true));     
//     if ($context['finished'] == 1) {
//       //==========DEBUG : permet de relancer la mise à jour si besoin.
//       throw new DrupalUpdateException(__FUNCTION__);
//     }    
//     throw new DrupalUpdateException(__FUNCTION__);
}

function uwwtd_update_7164(&$context){
    uwwtd_install_trace(__FUNCTION__);
    //disable deprecated modules :
    $dis = array(
        'Multilingual forum' => 'i18n_forum',
        'Charts and Graphs: Flot' => 'charts_graphs_flot',
        'Flot' => 'flot',
        'Charts and Graphs' => 'charts_graphs',
        'Comment' => 'comment',   
        'Search' => 'search',
        'Shortcut' => 'shortcut'
    );
    if (false === module_disable($dis)) {
        $msg = "Error, the module ".implode(',', $dis)." can't be disabled.";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    //Enable new modules (search) :

    $en= array(
        'Search API' => 'search_api',
        'Database search' => 'search_api_db',
        'Facet API' => 'facetapi',
        'Search facets' => 'search_api_facetapi',
        'Search views' => 'search_api_views',
        'Search API autocomplete' => 'search_api_autocomplete',
        'Current Search Blocks'=>'current_search',
        'UWWTD Search'=>'uwwtd_search'
    );
    if (false === module_enable($en)) {
        $msg = "Error, the module ".implode(',', $en)." can't be enabled.";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }

    db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'navigation')
        ->condition('module', 'system')           
        ->execute();    
    db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'login')
        ->condition('module', 'user')           
        ->execute();  
       

 //search block : current search, search form, 
    db_update('block')
        ->fields(array(
          'region' => 'content',
          'title'=>'',
          'weight' => -25,
          'status' => 1,
          'visibility' => 1,
          'custom'=>0,
          'pages' => "search/*\nsearch",
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', '-exp-search-page')
        ->condition('module', 'views')           
        ->execute();  
     
    db_update('block')
        ->fields(array(
          'region' => 'sidebar_first',
          'title'=>'',
          'status' => 1,
          'weight' => -20,
          'visibility' => 1,
          'custom'=>0,
          'pages' => "search/*\nsearch",
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'standard')
        ->condition('module', 'current_search')           
        ->execute();      
   //facets
    db_update('block')
        ->fields(array(
          'region' => 'sidebar_first',
          'title'=>'',
          'status' => 1,
          'visibility' => 1,
          'pages' => "search/*\nsearch",
        ))
        ->condition('theme', 'uwwtd')
        ->condition('module', 'facetapi')           
        ->execute();   
    //Load change in content type definition (field labels and label of allowed value)
    
    //throw new DrupalUpdateException(__FUNCTION__);
}


function uwwtd_update_7165(&$context){
    uwwtd_install_trace(__FUNCTION__);
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7165.json');   
    variable_set('siif_eru_version', __FUNCTION__);
    
//throw new DrupalUpdateException(__FUNCTION__);
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
}


/**
 * Update cardinality for 4 field from 1 to FIELD_CARDINALITY_UNLIMITED 
 *         field_rcacodepredecessor
 *         field_rcasalsaremark
 *         field_rca_sensitive_area
 *         field_rcarelatedsaremark
 */
function uwwtd_update_7166(&$context) {
  uwwtd_install_trace(__FUNCTION__);
  $list = array(
    'field_rcacodepredecessor',  
    'field_rcasalsaremark',      
    'field_rca_sensitive_area',  
    'field_rcarelatedsaremark'  
  );
  
  $msg_error = '';

  field_cache_clear();

  foreach ($list as $fieldname) {
    $field = array (
      'field_name' => $fieldname,
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
    );
    
    try {
        field_update_field($field);
    } catch (Exception $e) {
        $msg = "Error update field : ".$field['field_name']."\n";
        $msg .= $e->getMessage() . "\n"; 
        uwwtd_install_trace($msg);
        $msg_error .= $msg . "\n";             
    }
  }

    if ('' !== $msg_error) {
        throw new DrupalUpdateException($msg_error);
    }

    variable_set('siif_eru_version', __FUNCTION__);

//     throw new DrupalUpdateException($msg_error);
}

/**
 *Create dcp_reuse_map
 */
function uwwtd_update_7167(&$context) {
  uwwtd_install_trace(__FUNCTION__);

    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    include($path);
    $country_code = variable_get('siif_eru_country_code', '-1');
    uwwtd_update_map_overlay($country_config, $country_code, array('dcp_reuse_map.inc'), array('-'), array('-'));
  

    variable_set('siif_eru_version', __FUNCTION__);

//     throw new DrupalUpdateException($msg_error);
}

/**
 *Flush error list linked to inactive entity and create page with summury stats on errors
  */
function uwwtd_update_7168(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    //Flush error list linked to inactive entity
    db_query("
    DELETE FROM {uwwtd_import_errors} e 
    USING {node} n, {field_data_field_status} s 
    WHERE e.entity_id = n.nid 
        AND n.nid = s.entity_id
        AND (s.field_status_value = '0' OR s.field_status_value = '2')
    ");
    
    $menu= array(
            'link_path' => 'data/error-list-stats',
            'link_title' => 'Errors summary statistics',
            'description' => '' ,
            'menu_name' => 'menu-editorial-menu',
            'weight' => 1,
            //'expanded' => true,
            'mlid' => 0, 
            'plid' => 0,
            'customized' => 1,
        );
    $mlid = menu_link_save($menu);
    menu_cache_clear_all();
}

/**
 * INstall module  empty_fields   field_formatter_settings
 * INstall new map for agglo uwwtp eanbd dcp
 */
function uwwtd_update_7169(&$context) {
  //enable module  empty_fields field_formatter_settings
  $list_module_to_enable = array(
    'empty_fields',
    'field_formatter_settings',
  );
  if (false === module_enable($list_module_to_enable)) {
      $msg = "Error, the module ".implode(',', $list_module_to_disable)." can't be enabled.";
      uwwtd_install_trace($msg);
      throw new DrupalUpdateException($msg);    
  }


  //install new map for node agglo / uwwtp / dcp , needed in uwwtd_update_7169
  $path = drupal_get_path('module', 'uwwtd') . '/script/uwwtd_update_7169/uwwtd_geofield_formatter_map.inc';
  include($path);
  if (isset($openlayers_maps)) {
      $row = array();
      $row['name'] = $openlayers_maps->name;
      $row['title'] = $openlayers_maps->title;
      $row['description'] = $openlayers_maps->description;
      $row['data'] = $openlayers_maps->data;
      $msgresult = 'ok';
      try {
          uwwtd_insert_openlayers('openlayers_maps', $row);
      } catch (Exception $e) {
          $msgresult = 'error';
          $msgexception .= 'Error : can\'t create openlayers map ' . $path . '('.$msgresult.')'."\n";
          throw new DrupalUpdateException($msgexception);
      }
                  
     uwwtd_install_trace('map ' . $path . ' result : ' . $msgresult); 
     unset($openlayers_maps);                              
  }

  variable_set('siif_eru_version', __FUNCTION__);

//   throw new DrupalUpdateException($msg_error);
}

/**
 * install new virtual field an dconfig on content type display view
 */
function uwwtd_update_7170(&$context) {
  uwwtd_install_trace(__FUNCTION__);
  $msg_error = '';


  //TODO vidé tout le cache pour activer les fields virtuels
   drupal_flush_all_caches();

  /////////////////////////////////////////////
  //install/config field
//   field_cache_clear();

  $bundle_list = array(
    'agglomeration',
    'uwwtp',
    'discharge_point',
  );

  foreach($bundle_list as $bundle) {
  
    //update virtual field config
    $path = drupal_get_path('module', 'uwwtd') . '/script/uwwtd_update_7170/'.$bundle.'_list_virtual.inc';
    include_once($path);
    $current_virtual = field_bundle_settings('node', $bundle);
  
    //we change only what we want in $current_virtual wit info in $virtual from config file
    if (!isset($current_virtual['extra_fields']['display']['virtual_field_map'])) {
        $msg = "Error, the extra field virtual_field_map not exists, please empty drupal cache";
        uwwtd_install_trace($msg);
//         throw new DrupalUpdateException($msg);   
    }
  
    foreach ($virtual['extra_fields']['display'] as $fieldname => $config_virtual) {
      if (!isset($current_virtual['extra_fields']['display'][$fieldname])) {
          $msg = "Error, the extra field " . $fieldname . " not exists, please empty drupal cache";
          uwwtd_install_trace($msg);
//           throw new DrupalUpdateException($msg);   
      }
  
      $current_virtual['extra_fields']['display'][$fieldname] = $virtual['extra_fields']['display'][$fieldname];
    }
  
    //we save the modification on virtual field
    $virtual = field_bundle_settings('node', $bundle, $current_virtual);
         
    //update field instance weight and new data for empty field module
    $exist_fields = field_info_instances('node', $bundle);
    $path = drupal_get_path('module', 'uwwtd') . '/script/uwwtd_update_7170/'.$bundle.'_list_field.inc';
    include_once($path);
    foreach ($fields_instance as $field_name => $config_instance) {
      uwwtd_install_trace('update field ' . $field_name . ' instance');
        try {
            //Si le champ n'existe pas on le créer sinon on fait un update
            if(isset($exist_fields[$field_name])){
                field_update_instance($config_instance); 
            }
            else{
                if(substr($field_name,0,9) == 'field_dtt'){
                    $field = array(
                        'field_name' => $field_name, 
                        'type' => 'number_integer', 
                    );
                    field_create_field($field);
                    field_create_instance($config_instance);
                } 
            }
            
        } catch (Exception $e) {
            $msg = "Error update field : ".$field_name."\n";
            $msg .= $e->getMessage() . "\n"; 
            uwwtd_install_trace($msg);
            $msg_error .= $msg . "\n";             
        }
    }
  }
  if ('' !== $msg_error) {
      throw new DrupalUpdateException($msg_error);
  }

  variable_set('siif_eru_version', __FUNCTION__);

//   throw new DrupalUpdateException($msg_error);
}
/**
*Create field group
*/
function uwwtd_update_7171(&$context){
  uwwtd_install_trace(__FUNCTION__);
  $msg_error = '';


  ctools_include("export");
  ctools_export_load_object_reset('field_group');

  /////////////////////////////////////////////
  //install/config field
//   field_cache_clear();

  $bundle_list = array(
    'agglomeration',
    'uwwtp',
    'discharge_point',
  );

  foreach($bundle_list as $bundle) {    
    //update group
    $path = drupal_get_path('module', 'uwwtd') . '/script/uwwtd_update_7170/'.$bundle.'_list_group.inc';
    include_once($path);
    foreach ($groups as $mode => $mode_groups) {
        foreach ($mode_groups as $group_name => $config_group) {
            field_group_group_export_delete($config_group);
        }
        foreach ($mode_groups as $group_name => $config_group) {
          uwwtd_install_trace('update group ' . $group_name);
      
            try {
                      $config_group->export_type = false;
                      $result  = field_group_group_save($config_group);  
                    ctools_export_crud_enable('field_group', $config_group->identifier);                                   
                   uwwtd_install_trace(var_export($result, true));
            } catch (Exception $e) {
                  $msg = "Error create/update group : ".$group_name."\n";
                  $msg .= $e->getMessage() . "\n"; 
                  uwwtd_install_trace($msg);
                  $msg_error .= $msg . "\n";             
              }
        }
    }
  }
  if ('' !== $msg_error) {
      throw new DrupalUpdateException($msg_error);
  }

  variable_set('siif_eru_version', __FUNCTION__);    
}

/**
* Regenerate UWWTD_Agglomeration SQL view in order to add DTT new field in sync system 
*/

function uwwtd_update_7172(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    /*
    include_once(drupal_get_path('module', 'uwwtd') . '/inc/register.inc');
    $years = uwwtd_get_all_year();
    //uwwtd_retreive_agg_dtt(2016, $context);
    foreach($years as $year){
        uwwtd_retreive_agg_dtt($year, $context);
    }*/
    
    
    uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    variable_set('siif_eru_version', __FUNCTION__);
} 


function uwwtd_update_7173(&$context) {
    uwwtd_install_trace(__FUNCTION__);
/*
    include(drupal_get_path('module', 'uwwtd') . '/script/content_type/bundle.config.inc');
    if (! field_info_field($list_field['field_aucpercc2t']) ) {
        field_create_field($list_field['field_aucpercc2t']);
    }
    $instance = array(
        'field_name' => 'field_aucpercc2t',
        'entity_type' => 'node',
        'bundle' => 'agglo_uww',
        'label' => $list_field['field_aucpercc2t']['custom_tooltip'],
      );
    $instance_exist = field_info_instance('node', 'field_aucpercc2t', 'agglo_uww');
    if (! $instance_exist ) {
        $result = field_create_instance($instance);
    }
    */
    variable_set('siif_eru_version', __FUNCTION__);
} 
function uwwtd_update_7174(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    
    include(drupal_get_path('module', 'uwwtd') . '/script/content_type/bundle.config.inc');
    if(isset($list_field['field_aggart523compliance'])){        
        if (! field_info_field('field_aggart523compliance' ) ){
            dsm($list_field['field_aggart523compliance']);
            field_create_field($list_field['field_aggart523compliance']);
        }
        $instance = array(
            'field_name' => 'field_aggart523compliance',
            'entity_type' => 'node',
            'bundle' => 'agglomeration',
            'label' => $list_field['field_aggart523compliance']['custom_tooltip'],
          );
        $instance_exist = field_info_instance('node', 'field_aggart523compliance', 'agglomeration');
        if (! $instance_exist ) {
            $result = field_create_instance($instance);
        }
    }
    variable_set('siif_eru_version', __FUNCTION__);
} 

function uwwtd_update_7175(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    
        //Change type for some fields in ART 17
    $fields = [
        'field_art17_flaggeufund'=>'article_17_agglomeration',
        'field_art17_flaggotherfund'=>'article_17_agglomeration',
        'field_art17_flaggloan'=>'article_17_agglomeration',
        'field_art17_flatpinv'=>'article_17_uwwtp',
        'field_art17_flatpeufund'=>'article_17_uwwtp',
        'field_art17_flatpotherfund'=>'article_17_uwwtp',
        'field_art17_flatploan'=>'article_17_uwwtp'
    ];
    foreach($fields as $field=>$type){
         $instance_info = field_info_instance('node', $field, $type);
         if ($instance_info) {
            $instance_info['display']['default']['type'] = 'number_decimal';
            $instance_info['display']['default']['settings'] = [
                'thousand_separator'=>',',
                'decimal_separator'=>'.',
                'scale'=>2,
                'precision'=>15,
                'prefix_suffix'=>true,
                'empty_fields_handler'=>'',
                'empty_fields_emptyfieldtext_empty_text'=>''
            ];
            field_update_instance($instance_info);
            db_update('field_config') 
                ->fields(array('type' => 'number_decimal'))
                ->condition('field_name', $field, '=')
                ->execute();
            db_query('ALTER TABLE drupal_field_data_'.$field.' ALTER COLUMN '.$field.'_value TYPE NUMERIC(15,2)');
            db_query('ALTER TABLE drupal_field_revision_'.$field.' ALTER COLUMN '.$field.'_value TYPE NUMERIC(15,2)');
        } 
        
    }
    drupal_flush_all_caches();
    variable_set('siif_eru_version', __FUNCTION__);
} 

function uwwtd_update_7176(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    
    uwwtd_create_or_replace_view('UWWTD_UWWTPs_Agglo');
    db_query('
        DROP TABLE IF EXISTS wfs."UWWTD_UWWTPs_Agglo";
        CREATE TABLE wfs."UWWTD_UWWTPs_Agglo"
            AS SELECT * from public."UWWTD_UWWTPs_Agglo";
    ');
    variable_set('siif_eru_version', __FUNCTION__);
} 

function uwwtd_update_7177(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    
    $fields = [
        'field_mslwwreuseexplain'=>'ms_level',
    ];
    foreach($fields as $field=>$type){
         $instance_info = field_info_instance('node', $field, $type);
         if ($instance_info) {
             
            $instance_info['widget']['settings']['size'] = 2000; 
            field_update_instance($instance_info);
            db_query('ALTER TABLE drupal_field_data_'.$field.' ALTER COLUMN '.$field.'_value TYPE character varying(2000)');
            db_query('ALTER TABLE drupal_field_revision_'.$field.' ALTER COLUMN '.$field.'_value TYPE character varying(2000)');
            
              // Update field config with new max length
          $result = db_query("SELECT data FROM {field_config} WHERE field_name = '".$field."'");
          $config = $result->fetchField();
          $config_array = unserialize($config);
          $config_array['settings']['max_length'] = 2000;
          $config = serialize($config_array);
          db_update('field_config')
            ->fields(array('data' => $config))
            ->condition('field_name', $field)
            ->execute();
            
        } 
        
    }
    drupal_flush_all_caches();
    variable_set('siif_eru_version', __FUNCTION__);
} 

function uwwtd_update_7178(&$context = null) {
	uwwtd_install_trace(__FUNCTION__);
    //Config eu_cookie_compliance module
  $popup_settings = eu_cookie_compliance_get_settings();
  $popup_settings['popup_link'] = 'content/disclaimer';
  $popup_settings['popup_link_new_window'] =1;
  $popup_settings['consent_storage_method'] = 'basic';
  variable_set('eu_cookie_compliance', $popup_settings);
  user_role_grant_permissions(1, array( 'display EU Cookie Compliance popup')); //anonymous user
  user_role_revoke_permissions(2, array( 'display EU Cookie Compliance popup')); // authenticated user 
  user_role_revoke_permissions(3, array( 'display EU Cookie Compliance popup')); //administrator
  user_role_revoke_permissions(4, array( 'display EU Cookie Compliance popup')); //editor
  
  

	// Récupération du node de la page Disclaimer :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', 'page', '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', 'Disclaimer', '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['nid'])) {
		// Mise à jour du body :
		$nodeFull = node_load($node['nid']);
		if (!empty($nodeFull->body[LANGUAGE_NONE][0]['value'])) {
			$nodeFull->body[LANGUAGE_NONE][0]['value'] = '
				<p><strong>The information on this site is subject to a disclaimer, a copyright notice and rules related to personal data protection.</strong></p>
				<p><h3 id="Disclaimer">Disclaimer</h3></p>
				<p>This website is launched in the framework of Specific contracts n°07.0307/2012/638595/D2 and n°07.0201/2014/SFRA/698614/ENV.C.2 implementing Framework Service Contract n°ENV.D.2/FRA/2012/0013 for the European Commission, however it reflects the views only of the authors, and the Commission cannot be held responsible for any use which may be made of the information contained therein.
				The Office International de l’Eau maintains this website to enhance public access to information:
				<ul>
					<li>reported to the European Commission for the implementation of Directive 91/271/EC by the country</li>
					<li>or gathered at the national level in view of reporting between reporting periods,</li>
					<li>or gathered or available at national level for use by national authorities.</li>
				</ul>
				Our goal is to keep this information timely and accurate. If errors are brought to our attention, we will try to correct them. However, the Office International de l’Eau accepts no responsibility or liability whatsoever with regard to the information on this site. </p>
				<p>This information is: </p>
				<p>
				<ul>
					<li>of a general nature only and is not intended to address the specific circumstances of any particular individual or entity; </li>
					<li>not necessarily comprehensive, complete, accurate or up to date; </li>
					<li>sometimes linked to external sites over which Office International de l’Eau and DG Environment have no control and for which Office International de l’Eau and DG Environment assume no responsibility;</li>
					<li>not professional or legal advice (if you need specific advice, you should always consult a suitably qualified professional).</li>
				</ul>
				It is our goal to minimize disruption caused by technical errors. However some data or information on this site may have been created or structured in files or formats that are not error-free and we cannot guarantee that our service will not be interrupted or otherwise affected by such problems. Office International de l’Eau accepts no responsibility with regard to such problems incurred as a result of using this site or any linked external sites. </p>
				<p>This disclaimer is not intended to limit the liability of Office International de l’Eau in contravention of any requirements laid down in applicable national law nor to exclude its liability for matters which may not be excluded under that law. </p>
				<p><strong>Copyright notice</strong> <a href="http://creativecommons.org/licenses/by-nc/4.0/" title="http://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="license"><img style="border-width: 0;" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png" alt="Creative Commons License" /></a></p>
				<p><span>UWWTD-SIIF platform</span> by <a href="https://uwwtd.eu" title="uwwtd.oieau.fr" rel="cc:attributionURL">Office International de l\'Eau</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc/4.0/" rel="license">Creative Commons Attribution-NonCommercial 4.0 International License</a>.<br />Permissions beyond the scope of this license may be available at <a href="http://www.oieau.fr" title="www.oieau.fr" rel="cc:morePermissions">www.oieau.fr</a> </p>
				<p>This website is the property of UWWTD-SIIF project, a DGENV project lead by the UmweltBundesamt Austria in consortium with Office International de l’Eau - 15 rue E. Chamberland - 87065 Limoges Cedex - France </p>
				<p>Contact: <a href="mailto:contact@uwwtd.oieau.fr" title="contact@uwwtd.oieau.fr">contact@uwwtd.oieau.fr</a> – Project manager: Benoît Fribourg-blanc - Telephone: +33-(0)555 11 47 80 </p>
				<p>The general reproduction structure of texts, animated images or otherwise and any other component of the Website are the sole property of DG Environment. Any total or partial representation of this Website by any process whatsoever without the express authorization of the Natural Water Retention Measures project is forbidden and shall constitute unauthorized reproduction penalized by articles L.335-2 et seq. of the Code of intellectual property under French law. </p>
				<p>All of the rights of reproduction are reserved, including downloadable documents (logos, photos, catalogues, booklets, brochures, and any type of information whatsoever...). Downloadable documents are also protected by copyright.</p>
				<p>Similarly, databases appearing on the Website, which is protected by the provisions of the Intellectual Property Code concerning incorporation of the European directive of March 11, 1996 regarding the legal protection of databases produced by Office International de l’Eau.</p>
				<p> User or visitor of the Website are encouraged to install a hyperlink to this Website and inform Office International de l’Eau. </p>
				<p>The reuse is subject to the reuse policy of the European Commission implemented by a <a href="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2011:330:0039:0042:EN:PDF" title="http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=OJ:L:2011:330:0039:0042:EN:PDF" target="_blank">Decision of 12 December 2011</a>. </p>
				<p><h3 id="GDPR">Personal Data Protection</h3></p>
				<p>As the user, you are informed, in accordance with French law of January 6. 1978 and its article 27 on the protection of data, files and civil liberties, that any optional data you may choose to provide when completing the forms located on the Website allowing us to respond to your request, are solely intended for the UWWTD SIIF project, which is responsible for the processing of the data, for administrative and business management purposes.</p>
				<p>You are informed that you have a right to access and rectify all personal data regarding you by writing to the Office International de l’Eau - 15 rue E. Chamberland - 87065 Limoges Cedex - France</p>
				<p> The UWWTD SIIF project is committed to European Union policy on user privacy.</p>
				<p> The policy on "protection of individuals with regard to the processing of personal data by the Community institutions" is based on Regulation (EC) N° 45/2001 of the European Parliament and of the Council of 18 December 2000.</p>
				<p> Although you can browse through most of the current website without giving any information about yourself, in some cases, personal information is required. Such information will be treated it according to the policy described in the Regulation mentioned above and the specific objective described on the website form, focussing mainly on providing interactive communication services and possibilities for a registered user to contribute to the project.</p>
				<p> The specific privacy policy statement of this website is the following:
				<ul>
					<li>We collect via the contact form your contact details and fields of expertise and/or interest to allow us involve you in the improvement of the website. The information will not be re-used for an incompatible purpose; </li>
					<li>Your information is solely disclosed to the partners of the UWWTD SIIF project and national authority of the country. We will only disclose information to third parties if that is necessary for the fulfilment of the purpose(s) identified above. We will not divulge your personal data for direct marketing purposes;</li>
					<li>By clicking on the “Send message” you give your unambiguous consent to UWWTD SIIF project to use your data for the above purpose.</li>
					<li>Your data will be kept by the UWWTD SIIF project for the duration of the project (December 2013-March 2015) and transferred to the public authority that will take over responsibility of the website.</li>
					<li>If you have queries or complaints, please contact the webmaster at <a href="mailto:contact@uwwtd.oieau.fr" title="contact@uwwtd.oieau.fr">contact@uwwtd.oieau.fr</a></li>
				</ul>
					How do we treat e-mails you send us? </p>
				<p>When using the "Contact" button, you activate a specific form that invites you to send your comments to a specific functional mailbox.</p>
				<p> When you send such a message, your personal data is collected only to the extent necessary to reply. If the management team of the mailbox is unable to answer your question, it will forward your e-mail to another expert. You will be informed, via e-mail, about which expert your question has been forwarded to.</p>
				<p> If you have any questions about the processing of your e-mail and related personal data, do not hesitate to include them in your message.</p>
				<p> <h3 id="Creation">Creation, development, hosting and management of the website</h3></p>
				<p> Office International de l’Eau (OIEau) for UWWTD SIIF project </p>
				<p><h3 id="Copyrights">Copyrights</h3> </p>
				<p>UWWTD-SIIF platform by Office International de l\'Eau is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License. Permissions beyond the scope of this license may be available at <a href="http://www.oieau.fr" title="www.oieau.fr" target="_blank">www.oieau.fr</a>.</p>
				<p> <h3 id="Contact">Contact</h3> </p>
				<p>Office International de l’Eau (OIEau) 15 rue Edouard Chamberland 87065 LIMOGES cedex</p>
				<p> <h3 id="Webmaster">Webmaster</h3></p>
				<p> b.fribourg-blanc[at]oieau.fr</p>';
			node_save($nodeFull);
		}
	}

	if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 

}

function uwwtd_update_7179(&$context = null) {
    //enable new module
    //Security 
    //,'Login security'=>'login_security']
    module_enable(['Password policy'=>'password_policy']);
    
    //Password policy 
    $password_policy = new stdClass();
    $password_policy->disabled = FALSE; /* Edit this to true to make a default password_policy disabled initially */
    $password_policy->api_version = 1;
    $password_policy->name = 'beautifull_password';
    $password_policy->config = 'a:14:{s:10:"alpha_case";a:1:{s:10:"alpha_case";i:1;}s:11:"alpha_count";a:1:{s:11:"alpha_count";s:1:"8";}s:9:"blacklist";a:2:{s:9:"blacklist";s:0:"";s:26:"blacklist_match_substrings";i:0;}s:10:"char_count";a:1:{s:10:"char_count";s:0:"";}s:11:"consecutive";a:1:{s:22:"consecutive_char_count";s:1:"3";}s:5:"delay";a:2:{s:5:"delay";s:0:"";s:9:"threshold";s:1:"1";}s:15:"drupal_strength";a:1:{s:15:"drupal_strength";s:2:"50";}s:9:"int_count";a:1:{s:9:"int_count";s:0:"";}s:14:"past_passwords";a:1:{s:14:"past_passwords";s:0:"";}s:13:"special_count";a:2:{s:13:"special_count";s:0:"";s:19:"special_count_chars";s:32:"`~!@#$%^&*()_+=-|}{"?:><,./;\'\\[]";}s:8:"username";a:1:{s:8:"username";i:1;}s:7:"authmap";a:1:{s:11:"authmodules";a:0:{}}s:4:"role";a:1:{s:5:"roles";a:4:{i:1;i:0;i:2;i:0;i:3;i:0;i:4;i:0;}}s:6:"expire";a:6:{s:14:"expire_enabled";i:0;s:12:"expire_limit";s:8:"6 months";s:22:"expire_warning_message";s:48:"Your password has expired. Please change it now.";s:25:"expire_warning_email_sent";s:8:"-14 days";s:28:"expire_warning_email_message";s:0:"";s:28:"expire_warning_email_subject";s:94:"[user:name], your password on [site:name] shall expire in [password_expiration_date:interval] ";}}';
    ctools_include('export');
    ctools_export_crud_save('password_policy', $password_policy);
    
//install new main menu
    $menu = array(
        'menu_name' => 'main-menu', // Drupal menu machine name
        'title' => 'Main menu', // Drupal menu display name
        'description' => 'The <em>Main</em> menu is used on many sites to show the major sections of the site, often in a top navigation bar.', // Optional menu description
    );
    menu_delete(array('menu_name' => $menu['menu_name']));    
    menu_save($menu);        
    uwwtd_install_menu($menu, 'main-menu7179.json');  
    
    if (isset($context)) {
        $context['message'] = __FUNCTION__;
        $context['finished'] = 1;
    } 
    //throw new DrupalUpdateException(__FUNCTION__);
}


function uwwtd_update_7180(&$context) {
    uwwtd_install_trace(__FUNCTION__);
        uwwtd_delete_view('UWWTD_Agglomeration');
    uwwtd_delete_view('UWWTD_Compliance_Agglo');
    uwwtd_delete_view('UWWTD_Compliance_UWWTP');
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    
    uwwtd_create_or_replace_view('UWWTD_Agglomeration');
    uwwtd_create_or_replace_view('UWWTD_Compliance_Agglo');
    uwwtd_create_or_replace_view('UWWTD_Compliance_UWWTP');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');

    variable_set('siif_eru_version', __FUNCTION__);
} 
function uwwtd_update_7181(&$context) {
    uwwtd_install_trace(__FUNCTION__);
    uwwtd_delete_view('UWWTD_UrbanWasteWaterTreatmentPlant');
    uwwtd_create_or_replace_view('UWWTD_UrbanWasteWaterTreatmentPlant');

    variable_set('siif_eru_version', __FUNCTION__);
} 

/**
 * Create a big city or update it
 * @param  array $row  Code/ country code / Label
 *       
 */
function uwwtd_install_create_big_city($row, $year) {
    //Code copy from data_center.inc :: uwwtd_import_bigcity_batch_process()
    // Variables  //text
    global $language;
    $siteId = $year.'_big_'.uwwtd_check_text($row[0]);
   
    // Check if id exists
    $exists = uwwtd_check_exist($siteId);
    uwwtd_install_trace('big_city ' . $siteId . ' exists ? "' . $exists . '".');
    // If the element exists
    if(!$exists){
        $node = new stdClass();
        $node->type = 'big_city';
        $node->uid = 1;
        $node->translate = 0;
        $node->tnid = 0;
        $node->sticky = 0;
        $node->promote = 0;
        $node->comment = 0;
        $node->language = $language->language;
//         $_SESSION['newBc']++;
        node_save($node);
        
        if (empty($node->nid)) {
            uwwtd_install_trace('big_city ' . $siteId . ' node_save() error');
        } else {
            uwwtd_install_trace('big_city ' . $siteId . ' nid : ' . $node->nid);
        }                
    }
    else{
        // load the node
        $node = node_load($exists);
        $node->type = 'big_city';
//         $_SESSION['upBc']++;
        
        if (empty($node->nid)) {
            uwwtd_install_trace('big_city ' . $siteId . ' node_save() error');
        } else {
            uwwtd_install_trace('big_city ' . $siteId . ' nid : ' . $node->nid);
        }                 
    }
    // site mapping
    $node->field_siteid['und'][0]['value'] = $siteId;
    $node->field_valid['und'][0]['value'] = 0;
    $node->field_anneedata['und'][0]['value'] = $year;
//     $node->field_sourcefile = array(
//         'und' => array(
//             0 => array(
//                 'fid' => trim($newFile->fid),
//                 'filename' => trim($newFile->filename .".xml"),
//                 'uri' => trim($newFile->uri),
//                 'status' => 1,
//                 'display' => 1
//             )
//         )
//     );
//     unset($node->field_bcaggliste['und']);

    // data mapping
//     $node->field_repcode['und'][0]['value'] = $repCode;

    //text
    $node->field_inspireidlocalid['und'][0]['value'] = $row[0];

    //text
    $node->title = uwwtd_check_text($row[2]);

    //text
    $node->field_bigcountrycode['und'][0]['value'] = $row[1];

    // save node
    node_save($node);
    
    if (empty($node->nid)) {
        uwwtd_install_trace('big_city ' . $siteId . ' node_save() error2');
    } 
}

   
/**
 * Redéfinit la précision et le scale du champs donné.
 */
function setDecimalAccuracy($fieldName, $accuracy, $scale) {
	// Récupération du paramétrage du champs :
	$query = db_select('field_config', 'c');
	$query->fields('c');
	$query->condition('c.field_name', $fieldName, '=');
	$node = $query->execute()->fetchAssoc();
	if (!empty($node['data'])) {
		// Décodage :
		$settings = unserialize($node['data']);
		
		// Modification de la précision :
		if (!empty($settings['settings']['precision'])) {
			$settings['settings']['precision'] = $accuracy;
		}
		
		// Modification du scale :
		if (!empty($settings['settings']['scale'])) {
			$settings['settings']['scale'] = $scale;
		}
		
		// Encodage :
		$settings = serialize($settings);		
		
		// Mise à jour de la base :
		db_update('field_config') 
			->fields(array('data' => $settings))
			->condition('field_name', $fieldName, '=')
			->execute();
	}
}

/**
 * Définit le tool tips (pour l'affichage d'une info bulle) du champs donné.
 */
function setToolTips($fieldName, $toolTipsText) {
	// Récupération du paramétrage du champs :
	$query = db_select('field_config', 'c');
	$query->fields('c');
	$query->condition('c.field_name', $fieldName, '=');
	$fieldConfig = $query->execute()->fetchAssoc();
	if (!empty($fieldConfig['data'])) {
		// Décodage :
		$settings = unserialize($fieldConfig['data']);

		// Modification du tooltips :
		if (array_key_exists('custom_tooltip', $settings)) {
			$settings['custom_tooltip'] = $toolTipsText;
		}
		
		// Encodage :
		$settings = serialize($settings);

		// Mise à jour de la base :
		db_update('field_config')
		->fields(array('data' => $settings))
		->condition('field_name', $fieldName, '=')
		->execute();
	}
}

/**
 * Redéfinit le label du champs donné.
 */
function setFieldLabel($fieldName, $label) {
	// Récupération du paramétrage du champs :
	$query = db_select('field_config_instance', 'c');
	$query->fields('c');
	$query->condition('c.field_name', $fieldName, '=');
	$fieldConfig = $query->execute()->fetchAssoc();
	if (!empty($fieldConfig['data'])) {
		// Décodage :
		$settings = unserialize($fieldConfig['data']);

		// Modification du tooltips :
		if (array_key_exists('label', $settings)) {
			$settings['label'] = $label;
		}

		// Encodage :
		$settings = serialize($settings);

		// Mise à jour de la base :
		db_update('field_config_instance')
		->fields(array('data' => $settings))
		->condition('field_name', $fieldName, '=')
		->execute();
	}
}

/**
 * Crée un nouveau node avec le type, titre et path donné, s'il n'existe pas déjà.
 */
function addNodeIfDoesntExist($nodeType, $nodeTitle, $nodePath, $body) {
	// Test si le node n'existe pas déjà :
	$query = db_select('node', 'n');
	$query->fields('n');
	$query->condition('n.type', $nodeType, '=');
	$query->condition('n.status', 1, '=');
	$query->condition('n.title', $nodeTitle, '=');
	$nodeFound = $query->execute()->fetchAssoc();
	if (empty($nodeFound)) {
		// Création du node :
		$node = new stdClass();
		$node->type = $nodeType;
		$node->title = $nodeTitle;
		$node->language = LANGUAGE_NONE;
		$node->path = array('alias' => $nodePath);
		$path = array('source' => 'node/'. $node->nid, 'alias' => $nodePath);
		path_save($path);
		node_object_prepare($node);
		$node->uid = 1;
		
		// Création de son contenu :
		$node->body[LANGUAGE_NONE][0]['value'] = $body;
		$node->body[LANGUAGE_NONE][0]['summary'] = '';
		$node->body[LANGUAGE_NONE][0]['format'] = 'full_html';
	
		// Enregistrement du node :
		$node = node_submit($node);
		node_save($node);
		
		return node_load($node->nid);
	} else {
		return node_load($nodeFound['nid']);
	}
}

/**
 * Mets à jour le main avec le node donné.
 */
function updateMainMenuWith($title, $nid) {
	if (!empty($title) && !empty($nid)) {
		// Cherche si le main-menu contient déjà ce node :
		$found = false;
		$links = menu_load_links('main-menu');
		foreach ($links as $link) {
			if (!empty($link['link_path']) && $link['link_path'] === 'node/'. $nid) {
				$found = true;
				break;
			}
		}
		
		// S'il ne le contient pas déjà :
		if (!$found) {
			$item = array(
				'link_title' => $title,
				'router_path' => 'node/'. $nid,
				'link_path' => 'node/'. $nid,
				'menu_name' => 'main-menu');
		
			// Ajout au menu :
			menu_link_save($item);
		}
		
		// Récupération du menu link ID (mlid) du node Resources :
		$mlidResources = '';
		$result = db_select('menu_links', 'm')
			->fields('m', array('mlid'))
			->condition('m.link_title', 'Ressources', '=')
			->execute()
			->fetchAssoc();
		if (!empty($result['mlid'])) {
			$mlidResources = $result['mlid'];
			
			// Mise à "Show as Expanded" :
			db_update('menu_links')
				->fields(array('expanded' => 1,))
				->condition('mlid', $mlidResources, '=')
				->execute();   
		}
		
		// Récupèration du mlid du node donné :
		$mlid = db_select('menu_links', 'm')
			->fields('m', array('mlid'))
			->condition('m.link_path', 'node/'. $nid)
			->execute()
			->fetchField();

		// Redéfinit le parent link ID (plid) du node donné :
		if ($mlid) {
			$item = menu_link_load($mlid);
			$item['customized'] = 1;
			$item['plid'] = $mlidResources;
			menu_link_save($item);
		}
	}
}

/**
 * Ajout le champs donné au content type donné.
 */
function addFieldToContentType($fieldName, $fieldType, $fieldLabel, $contentType) {
	// Si le champs n'existe pas encore et que le content type existe :
	$contentTypeInfos = node_type_load($contentType);
	if (!empty($contentTypeInfos) && !field_info_field($fieldName)) {
		// Création du champs :
		$field = array(
			'field_name' => $fieldName,
			'type' => $fieldType,
		);
		field_create_field($field);
			
		// Ajout du champs au type de contenu :
		if ($fieldType === 'date') {
			$instance = array(
				'field_name' => $fieldName,
				'entity_type' => 'node',
				'bundle' => $contentType,
				'label' => $fieldLabel,
				'widget' => array('type'=> 'text_textfield')
			);
		} else {
			$instance = array(
				'field_name' => $fieldName,
				'entity_type' => 'node',
				'bundle' => $contentType,
				'label' => $fieldLabel,
			);
		}
		field_create_instance($instance);
		watchdog('uwwtd', t('!fieldName was added successfully.', array('!fieldName' => $fieldName)));
	} else {
		watchdog('uwwtd', t('!fieldName already exists.', array('!fieldName' => $fieldName)));
	}
}


/***************************************************************************/
// Function utils
/***************************************************************************/
function uwwtd_install_trace($message) 
{                   
    if($file = drupal_realpath('public://data_errors/install_trace.log')){
        $r = fopen($file, 'a');
        fputs($r, date("[Y-m-d H:i:s] ") . $message . "\n");
        fclose($r);
    }
}

/**
 * create a view of name  $sViewName with the select statement in a file if the same name {$sViewName}.sql
 * in module/script/{$sViewName}.sql  
 */ 
function uwwtd_create_or_replace_view($sViewName)
{
    uwwtd_install_trace(__FUNCTION__ . ':' . $sViewName);
    $path = drupal_get_path('module', 'uwwtd') . '/script/view/' . $sViewName . '.sql';
    $select = file_get_contents($path);
    db_query('CREATE OR REPLACE VIEW "' . $sViewName .  '" AS ' . $select);
}

/**
 * create a view of name  $sViewName with the select statement in a file if the same name {$sViewName}.sql
 * in module/script/{$sViewName}.sql  
 */ 
function uwwtd_delete_view($sViewName)
{
    uwwtd_install_trace(__FUNCTION__ . ':' . $sViewName);
    db_query('DROP VIEW IF EXISTS "' . $sViewName .  '"');
}

/**
 * create schema wfs
 */ 
function uwwtd_create_schema_wfs() 
{
    uwwtd_install_trace(__FUNCTION__);
    db_query('CREATE SCHEMA IF NOT EXISTS "wfs"');    
} 

/**
 * create schema wfs
 */ 
function uwwtd_update_node_title_size() 
{
    uwwtd_install_trace(__FUNCTION__);
    //udpate node.title and node_revision.title from 255 to 1000 (for ro et pl long name)
    db_query('ALTER TABLE drupal_node ALTER COLUMN title TYPE varchar(1000)');
    db_query('ALTER TABLE drupal_node_revision ALTER COLUMN title TYPE varchar(1000)');
}

function uwwtd_delete_node_type_error()
{
    uwwtd_install_trace(__FUNCTION__);
	$ids = array();
	$query = db_select('node', 'n');
    $query->fields('n', array('nid'));
    $query->condition('n.type', 'uwwtd_error', '=');
	$errors = $query->execute();
	foreach($errors as $error){
		$ids[] = array('nid'=>$error->nid);
	}
    foreach($ids as $nid) {
        node_delete($nid);
    }
    unset($errors, $ids);        
}

function uwwtd_insert_openlayers($table, $row)
{
    uwwtd_install_trace(__FUNCTION__);
    if (db_select($table)
                  ->fields($table, array('name'))
                  ->condition('name', $row['name'])
                  ->execute()
                  ->fetchCol()) {
          $resultupdate = db_update($table)
          ->fields(array(
            'name' => $row['name'],
            'title' =>  $row['title'],
            'description' => $row['description'],
            'data' => serialize($row['data'])
          ))
          ->condition('name', $row['name'], '=')       
          ->execute();                    
    } else {
          db_insert($table)
          ->fields(array(
            'name' => $row['name'],
            'title' =>  $row['title'],
            'description' => $row['description'],
            'data' => serialize($row['data'])
          ))
          ->execute();    
    }
}

function uwwtd_update_map_overlay($country_config, $country_code, $map = array(), $overlay = array(), $style = array())
{
    uwwtd_install_trace(__FUNCTION__);
    $list_map = array(
        'waste_water_treatment_network_map.inc',
        'agg_compliance_map.inc',
        'agglomeration.inc',
        'uwwtp_compliance_map.inc',
        'uwwtp_treatment_map.inc',
        'uwwtp_pressure_map.inc',
        'dcp_map.inc',
        'dcp_reuse_map.inc',
        'rca_map.inc',
        
    );
    $list_overlay = array(
        //Drupal vector layers
        'agglomerations.inc',
        'uwwtp.inc',
        'dcp.inc',
        'rca.inc',
        'compliance_map.inc',
        'agglomeration_treatment.inc',
        'uwwtp_compliance_map.inc',
        'uwwtp_treatment.inc',
        'uwwtp_bod_pressure_.inc',
        'uwwtp_cod_pressure_.inc',
        'uwwtp_n_pressure_.inc',
        'uwwtp_p_pressure_.inc',
        
        //WMS Layers
        'oieau_nuts_0.inc',
        'oieau_nuts_1.inc',
        'oieau_nuts_2.inc',
        'oieau_nuts_3.inc',
        
        'oieau_rbd.inc',
        'oieau_rbdsu.inc',
        
        'oieau_eprtr_ntot.inc',
        'oieau_eprtr_ptot.inc',
        'oieau_eprtr_toc.inc',
        
        'bathing_water.inc',
        'oieau_nuts.inc',
        'oieau_rbd_rbdsu.inc',
        'natura2000.inc',
        'clc_2012.inc',
        
        'soe_monitoring_stations.inc',  //deprecated
        'soe_nitrates_2011.inc',        //deprecated
        'soe_phosphate_2011.inc',       //deprecated
        
        'soe_bod.inc',
        'soe_nh3.inc',
        'soe_nitrate.inc',
        'soe_phosphorus.inc',
    ); 
    $list_style = array(
        'agglomerations_style.inc',
        'carr_bleu.inc',
        'triangle_violet.inc',
        'discharge_points_style.inc',
        'waste_water_treatment_plant_style.inc'
    );        
    $path = drupal_get_path('module', 'uwwtd') . '/script/openlayers/';
    $pathtomap     = $path . 'map/'; 
    $pathtooverlay = $path . 'overlay/';
    $pathtostyle = $path . 'style/';
    $msgexception = ''; 
    foreach($list_overlay as $filename) {
        if (false === empty($overlay) && false === in_array($filename, $overlay)) {
            continue;
        }
        include($pathtooverlay . $filename);
        if (isset($openlayers_layers)) {
            $row = array();
            $row['name'] = $openlayers_layers->name;
            $row['title'] = $openlayers_layers->title;
            $row['description'] = date('Y/m/d H:i:s') . "\n" . $openlayers_layers->description;
            $row['data'] = $openlayers_layers->data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_layers', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers layer ' . $filename . '('.$msgresult.')'."\n";
            }
            uwwtd_install_trace('layer ' . $filename . ' result : ' . $msgresult);            
        } else {
            uwwtd_install_trace('Error, $openlayers_layers not found');          
        }
    }  
    
    foreach($list_map as $filename) {
        if (false === empty($map) && false === in_array($filename, $map)) {
            continue;
        }    
        include($pathtomap . $filename);
        if (isset($openlayers_maps)) {
//             uwwtd_install_trace(var_export($openlayers_maps , true));
            $row = array();
            $row['name'] = $openlayers_maps->name;
            $row['title'] = $openlayers_maps->title;            
            $row['description'] = date('Y/m/d H:i:s') . "\n" . $openlayers_maps->description;
            $openlayers_maps->data['center'] = $country_config[$country_code]['openlayers_maps']['center'];
            $openlayers_maps->data['behaviors']['openlayers_behavior_gazetteer'] = $country_config[$country_code]['openlayers_maps']['behaviors']['openlayers_behavior_gazetteer'];
            $row['data'] = $openlayers_maps->data;
//             uwwtd_install_trace(var_export($openlayers_maps , true));
//             uwwtd_install_trace(var_export($country_config[$country_code]['openlayers_maps']['center'] , true));
//             uwwtd_install_trace(var_export($country_config[$country_code]['openlayers_maps']['behaviors']['openlayers_behavior_gazetteer'] , true));
                 
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_maps', $row);
                
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers map ' . $filename . '('.$msgresult.')'."\n";
            }
//             throw new DrupalUpdateException('test7108'); 
            uwwtd_install_trace('map ' . $filename . ' result : ' . $msgresult);                                
        }  else {
            uwwtd_install_trace('Error, $openlayers_maps not found');          
        }
    }
    
    foreach($list_style as $filename) {
        if (false === empty($style) && false === in_array($filename, $style)) {
            continue;
        }     
        include($pathtostyle . $filename);
        if (isset($openlayers_styles)) {
            $row = array();
            $row['name'] = $openlayers_styles->name;
            $row['title'] = $openlayers_styles->title;
            $row['description'] = date('Y/m/d H:i:s') . "\n" . $openlayers_styles->description;
            $row['data'] = $openlayers_styles->data;
            $msgresult = 'ok';
            try {
                uwwtd_insert_openlayers('openlayers_styles', $row);
            } catch (Exception $e) {
                $msgresult = 'error';
                $msgexception .= 'Error : can\'t create openlayers style ' . $filename . '('.$msgresult.')'."\n";
            }
                    
            uwwtd_install_trace('style ' . $filename . ' result : ' . $msgresult);                             
        }  else {
            uwwtd_install_trace('Error, $openlayers_styles not found');          
        }
    }    
    if ($msgexception != '') {
        throw new DrupalUpdateException($msgexception);
    } 
}

function uwwtd_install_menu($menu, $filename) 
{
    uwwtd_install_trace(__FUNCTION__);
    $path = DRUPAL_ROOT . '/' . drupal_get_path('module', 'uwwtd') . '/script/menu/'.$filename;
    uwwtd_install_trace($path);
    $options = array(
        'create_content'  => FALSE,
        'link_to_content' => TRUE,
        'remove_menu_items' => FALSE
    ); 

    drupal_load('module', 'menu_import');                                                   
    menu_import_string(file_get_contents($path), $menu['menu_name'], $options);
    
    $message = '';    
    if (!empty($result['errors'])) {
        $message .= 'Import menu ' . $menu['menu_name'] . ' failed: ';
        foreach ($result['errors'] as $error) {
            $message .= ($message == '' ? '' : ',' ) . $error;
        }
    } 
    
    uwwtd_install_trace($message);
    
    $warning = '';
    if (!empty($result['warnings'])) {
        $warning .= 'Import menu ' . $menu['menu_name'] . ' warning : ';
        foreach ($result['warnings'] as $error) {
            $warning .= ($warning == '' ? '' : ',' ) . $error;
        }
    } 
    
    uwwtd_install_trace($warning);       
    
    if ($message != '') {
        throw new DrupalUpdateException($message);
    }
}

/**
 *
 */ 
function uwwtd_install_content_type(&$context)
{   
    uwwtd_install_trace(__FUNCTION__);
    
    include(drupal_get_path('module', 'uwwtd') . '/script/content_type/bundle.config.inc');
    
    if (!isset($context['sandbox']['progress'])) {
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['max'] = count($list_contenttype) + count($list_field) + count($list_contenttype);
        $context['sandbox']['node_type_save'] = array();
        $context['sandbox']['field_create_field'] = array();
        $context['sandbox']['field_create_instance'] = array();
    }
    //use drush command 
    
//     uwwtd_install_trace(var_export($list_field, true));
//     uwwtd_install_trace(var_export($list_contenttype, true));
    $t = get_t();
    //create bundle
    $node_type_save_done = false;
    if (count($context['sandbox']['node_type_save']) < count($list_contenttype)) {
        $j = 0;
        foreach ($list_contenttype as $content_type_name => $contenttypeinfo) {
            if (isset($context['sandbox']['node_type_save'][$content_type_name])) {
                continue;    
            }
            $context['sandbox']['node_type_save'][$content_type_name] = 1;
            $j++;
            $context['sandbox']['progress']++;
            if (node_type_load($content_type_name)) {
                continue;
            }
            uwwtd_install_trace('create bundle ' . $content_type_name);        
            $contenttypeinfo['node_type_load'] = (object)$contenttypeinfo['node_type_load'];
            
            $status = node_type_save($contenttypeinfo['node_type_load']);
            // Replacement rule for the messages.
            $t_args = array('%name' => $contenttypeinfo['node_type_load']->name);
            if ($status == SAVED_UPDATED) { // update case
                drupal_set_message($t('The content type %name has been updated.', $t_args));
            } elseif ($status == SAVED_NEW) { // create case
                drupal_set_message($t('The content type %name has been added.', $t_args));
                watchdog('node', 'Added content type %name.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types')); 
            }
            if ($j >= 10) {
                break;
            }            
        }
    } else {
        $node_type_save_done = true;
    }
    
    //create field
    
   
    
    
    $field_create_field_done = false;
    if ($node_type_save_done) {
        if (count($context['sandbox']['field_create_field']) < count($list_field)) {
            $j = 0;
            foreach ($list_field as $fieldname => $infofield) {
                if (isset($context['sandbox']['field_create_field'][$fieldname])) {
                    continue;    
                }
                $context['sandbox']['field_create_field'][$fieldname] = 1;    
                $j++;
                $context['sandbox']['progress']++;
                
                //don't create old error link
                if ($infofield['field_name'] == 'field_uwwtd_error_link') {
                    continue;
                }
                
                if (! field_info_field($infofield['field_name']) ) {
                    uwwtd_install_trace('create field ' . $infofield['field_name']);
                    $result = field_create_field($infofield);
                    $t_args = array('%name' => $fieldname);
                    watchdog('node', 'Added field %name.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types'));
                    
                    if ($infofield['field_name'] == 'field_position_geo') {
                        //insert the_geom field
                        db_query('alter table drupal_field_data_field_position_geo add column the_geom geometry');                        
                        
                        uwwtd_install_trace('create trigger for field ' . $infofield['field_name']);
                        //create trigger
                        db_query('CREATE TRIGGER insert_geom_geo BEFORE INSERT ON drupal_field_data_field_position_geo FOR EACH ROW EXECUTE PROCEDURE insert_geom_to_geo()');
                        
                        //update_geom_geo
                        db_query('CREATE TRIGGER update_geom_geo BEFORE UPDATE ON drupal_field_data_field_position_geo FOR EACH ROW EXECUTE PROCEDURE update_geom_to_geo()');
                    }                    
                }
                if ($j >= 10) {
                    break;
                }         
            }
        } else {
            $field_create_field_done = true;
        }
    } 
    
    //attach field to bundle
    $field_create_instance_done = false;
    if ($field_create_field_done) {
        if (count($context['sandbox']['field_create_instance']) < count($list_contenttype)) {
            $j = 0;
            foreach ($list_contenttype as $content_type_name => $contenttypeinfo) {
                if (isset($context['sandbox']['field_create_instance'][$content_type_name])) {
                    continue;    
                }
                $context['sandbox']['field_create_instance'][$content_type_name] = 1;                
                //create bundle
                $j++;
                $context['sandbox']['progress']++;
                foreach ($contenttypeinfo['field_info_instance'] as $fieldinstance) {
                
                    //don't create old error link
                    if ($fieldinstance['field_name'] == 'field_uwwtd_error_link') {
                        continue;
                    }
                                    
                    $instance_exist = field_info_instance('node', $fieldinstance['field_name'], $content_type_name);
                    if (! $instance_exist ) {
                        uwwtd_install_trace('create bundle field ' . $fieldinstance['field_name']);
                        $result = field_create_instance($fieldinstance);
                        $t_args = array('%name' => $fieldname, '%bundle' => $content_type_name);
                        watchdog('node', 'Added field %name to bundle %bundle.', $t_args, WATCHDOG_NOTICE, l($t('view'), 'admin/structure/types'));                
                    }       
                } 
                if ($j >= 1) {
                    break;
                }                
            }
        } else {
            $field_create_instance_done = true;
        }
    }
    

    
//     $context['message'] = __FUNCTION__;
//     $context['finished'] = 1;   
    
    $context['message'] = __FUNCTION__ .' ' . count($list_contenttype) .' + '. count($list_field) .' + '. count($list_contenttype) . ' ('. $context['sandbox']['progress'] .'/'. $context['sandbox']['max'] .')';   
    
    if ($context['sandbox']['progress'] < $context['sandbox']['max']) {
        $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
    }               
}

function uwwtd_install_configure(&$context)
{
    uwwtd_install_trace(__FUNCTION__);
    global $conf;    
    if (!isset($conf['siif_eru_country_code'])) {
        throw new DrupalUpdateException('Please, configure the siif_eru_country_code parameter in settings.php file.');    
    }
    
     
//     variable_set('rptFormRA', '3');   
    //////////////////////////////////////////////////        
    //enable and set default theme UWWTD
    theme_enable(array('uwwtd'));
    variable_set('theme_default', 'uwwtd');
    
    $theme_config =     array (
          'toggle_logo' => 1,
          'toggle_name' => 1,
          'toggle_slogan' => 1,
          'toggle_node_user_picture' => 1,
          'toggle_comment_user_picture' => 1,
          'toggle_comment_user_verification' => 1,
          'toggle_favicon' => 1,
          'toggle_main_menu' => 1,
          'toggle_secondary_menu' => 1,
          'default_logo' => 0,
          'logo_path' => 'public://logo_0.png',
          'default_favicon' => 1,
          'favicon_path' => '',
          'favicon_upload' => '',
          'global__active_tab' => 'edit-logo',
          'bootstrap__active_tab' => 'edit-general',
          'bootstrap_grid_columns' => '12',
          'bootstrap_grid_class_prefix' => 'col-sm',
          'bootstrap_region_grid-navigation' => '',
          'bootstrap_region_grid-header' => '',
          'bootstrap_region_grid-highlighted' => '',
          'bootstrap_region_grid-help' => '',
          'bootstrap_region_grid-content' => '',
          'bootstrap_region_grid-sidebar_first' => '3',
          'bootstrap_region_grid-sidebar_second' => '3',
          'bootstrap_region_grid-footer' => '',
          'bootstrap_region_grid-page_top' => '',
          'bootstrap_region_grid-page_bottom' => '',
          'bootstrap_region_grid-dashboard_main' => '',
          'bootstrap_region_grid-dashboard_sidebar' => '',
          'bootstrap_region_grid-dashboard_inactive' => '',
          'bootstrap_region_grid-olblockpanel' => '',
          'bootstrap_region_grid-olmaptext_1' => '',
          'bootstrap_region_grid_dynamic-navigation' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-header' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-highlighted' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-help' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-content' => 
          array (
            'sidebar_first' => 'sidebar_first',
            'sidebar_second' => 'sidebar_second',
          ),
          'bootstrap_region_grid_dynamic-sidebar_first' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-sidebar_second' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-footer' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-page_top' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-page_bottom' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-dashboard_main' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-dashboard_sidebar' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-dashboard_inactive' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-olblockpanel' => 
          array (
          ),
          'bootstrap_region_grid_dynamic-olmaptext_1' => 
          array (
          ),
          'bootstrap_button_size' => '',
          'bootstrap_button_colorize' => 1,
          'bootstrap_button_iconize' => 1,
          'bootstrap_image_shape' => '',
          'bootstrap_image_responsive' => 1,
          'bootstrap_table_bordered' => 0,
          'bootstrap_table_condensed' => 0,
          'bootstrap_table_hover' => 1,
          'bootstrap_table_striped' => 1,
          'bootstrap_table_responsive' => 1,
          'bootstrap_breadcrumb' => '1',
          'bootstrap_breadcrumb_home' => 0,
          'bootstrap_breadcrumb_title' => 1,
          'bootstrap_navbar_position' => '',
          'bootstrap_navbar_inverse' => 0,
          'bootstrap_region_well-navigation' => '',
          'bootstrap_region_well-header' => 'well',
          'bootstrap_region_well-highlighted' => '',
          'bootstrap_region_well-help' => '',
          'bootstrap_region_well-content' => '',
          'bootstrap_region_well-sidebar_first' => 'well',
          'bootstrap_region_well-sidebar_second' => '',
          'bootstrap_region_well-footer' => '',
          'bootstrap_region_well-page_top' => '',
          'bootstrap_region_well-page_bottom' => '',
          'bootstrap_region_well-dashboard_main' => '',
          'bootstrap_region_well-dashboard_sidebar' => '',
          'bootstrap_region_well-dashboard_inactive' => '',
          'bootstrap_region_well-olblockpanel' => '',
          'bootstrap_region_well-olmaptext_1' => '',
          'bootstrap_anchors_fix' => 1,
          'bootstrap_anchors_smooth_scrolling' => 1,
          'bootstrap_popover_enabled' => 1,
          'bootstrap_popover_animation' => 1,
          'bootstrap_popover_html' => 0,
          'bootstrap_popover_placement' => 'right',
          'bootstrap_popover_selector' => '',
          'bootstrap_popover_trigger' => 
          array (
            'click' => 'click',
            'hover' => 0,
            'focus' => 0,
            'manual' => 0,
          ),
          'bootstrap_popover_trigger_autoclose' => 1,
          'bootstrap_popover_title' => '',
          'bootstrap_popover_content' => '',
          'bootstrap_popover_delay' => '0',
          'bootstrap_popover_container' => 'body',
          'bootstrap_tooltip_enabled' => 1,
          'bootstrap_tooltip_descriptions' => 1,
          'bootstrap_tooltip_descriptions_length' => '200',
          'bootstrap_tooltip_animation' => 1,
          'bootstrap_tooltip_html' => 0,
          'bootstrap_tooltip_placement' => 'auto left',
          'bootstrap_tooltip_selector' => '',
          'bootstrap_tooltip_trigger' => 
          array (
            'hover' => 'hover',
            'focus' => 'focus',
            'click' => 0,
            'manual' => 0,
          ),
          'bootstrap_tooltip_delay' => '0',
          'bootstrap_tooltip_container' => 'body',
          'bootstrap_cdn' => '',
          'bootstrap_bootswatch' => '',
          'bootstrap_toggle_jquery_error' => 0,
        );
        
    variable_set('theme_uwwtd_settings', $theme_config);
    $path = drupal_get_path('module', 'uwwtd') . '/script/img/logo_0.png';
    copy($path, 'public://logo_0.png');
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/img/carre.png';
    copy($path, 'public://pictures/carre.png');
    $path = drupal_get_path('module', 'uwwtd') . '/script/img/triangle.png'; 
    copy($path, 'public://pictures/triangle.png');     
    
    //////////////////////////////////////////////////
    //add role editor
    $role = new stdClass();
    $role->name = 'editor';
    // $role->weight = 10;
    user_role_save($role);
    
    $country_code_to_save = strtolower($conf['siif_eru_country_code']);
    variable_set('siif_eru_country_code', $country_code_to_save);
    $country_code = variable_get('siif_eru_country_code', '-1');
    
    if ($country_code != $country_code_to_save) {
        throw new DrupalUpdateException('An error occured when saving the country code from settings.php');    
    }
    
    $path = drupal_get_path('module', 'uwwtd') . '/script/country/country.inc';
    
    
    

    variable_set('site_name', 'UWWTD SIIF '.$country_config[$country_code]['name'].' National Node');
    
//     variable_set('rptFormRA', $country_config[$country_code]['rptFormRA']);

//     variable_set('site_mail', $country_config[$country_code]['website_mail']);
//     db_insert('contact')
//     ->fields(array(
//         'category' => 'Website feedback',
//         'recipients' => variable_get('site_mail'),
//         'reply' => '',
//         'weight' => 0,
//         'selected' => 1,
//     ))
//     ->execute();
//     $user = user_load_by_name('admin');
//     $user->mail = variable_get('site_mail');
//     user_save($user);
    
//     variable_set('site_mail', $country_config[$country_code]['website_mail']);
    
    
//     variable_set('site_name', 'UWWTD SIIF '.$country_config[$country_code]['name'].' National Node');
    variable_set('cron_safe_threshold', 0);



    foreach (array('anonymous user', 'authenticated user', 'administrator', 'editor') as $rolename) {
        $role = user_role_load_by_name($rolename);
        if (!$role) {
            continue;
        }
        
        user_role_grant_permissions($role->rid, array('access site-wide contact form'));
    }
    
    uwwtd_install_configure_wkhtmltopdf();

    //configure uwwtd display
    variable_set('display_only_active', '1');
    variable_set('min_aggenerated_display', '1999');
    variable_set('openlayers_gazetteer_geonames_username', 'uwwtd');
    
    //////////////////////////////////////////////////    
    //set the admin menu to folow the scrol vertical
    //admin/config/administration/admin_menu
    variable_set('admin_menu_position_fixed', 0);
    

    
    //configure drupal
    //////////////////////////////////////////////////
//     /admin/config/content/wysiwyg 
//     Full HTML = TinyMCE 3.5.10         
    db_merge('wysiwyg')
      ->key(array('format' => 'full_html'))
      ->fields(array(
        'editor' => 'tinymce',
        'settings' => serialize(array (
                                  'default' => 1,
                                  'user_choose' => 0,
                                  'show_toggle' => 0,
                                  'theme' => 'advanced',
                                  'language' => 'en',
                                  'buttons' => 
                                  array (
                                    'default' => 
                                    array (
                                      'bold' => 1,
                                      'italic' => 1,
                                      'justifyleft' => 1,
                                      'justifycenter' => 1,
                                      'justifyright' => 1,
                                      'justifyfull' => 1,
                                      'bullist' => 1,
                                      'numlist' => 1,
                                      'outdent' => 1,
                                      'indent' => 1,
                                      'link' => 1,
                                      'unlink' => 1,
                                      'formatselect' => 1,
                                      'code' => 1,
                                      'cut' => 1,
                                      'copy' => 1,
                                    ),
                                    'paste' => 
                                    array (
                                      'pastetext' => 1,
                                    ),
                                  ),
                                  'toolbar_loc' => 'top',
                                  'toolbar_align' => 'left',
                                  'path_loc' => 'bottom',
                                  'resizing' => 1,
                                  'verify_html' => 1,
                                  'preformatted' => 0,
                                  'convert_fonts_to_spans' => 1,
                                  'remove_linebreaks' => 1,
                                  'apply_source_formatting' => 0,
                                  'paste_auto_cleanup_on_paste' => 0,
                                  'block_formats' => 'p,address,pre,h2,h3,h4,h5,h6,div',
                                  'css_setting' => 'theme',
                                  'css_path' => '',
                                  'css_classes' => '',
                                )),
      ))
      ->execute();
    wysiwyg_profile_cache_clear();
      
      
    //set role to format
    $radmin = user_role_load_by_name('administrator');
    $reditor = user_role_load_by_name('editor');
    $ranonymous = user_role_load_by_name('anonymous user');
    $rauthenticat = user_role_load_by_name('authenticated user');

    //anonymous filtered html  AND access content   
    user_role_grant_permissions($ranonymous->rid, array('use text format filtered_html', 'access content'));
    
    user_role_grant_permissions($rauthenticat->rid, array('use text format filtered_html'));

    //admin   php code,full , fitler
    user_role_grant_permissions($radmin->rid, array('use text format php_code', 'use text format full_html', 'use text format filtered_html'));

    //editor Full HTML , fitler
    user_role_grant_permissions($reditor->rid, array('use text format full_html', 'use text format filtered_html'));
    
    ///////////////////////////////////////////////
    ///admin/config/development/performance
    //Cache pages for anonymous users             
    variable_set('cache', 1);
    //Cache blocks
    variable_set('block_cache', 1);
    //Minimum cache lifetime  12 hour
    variable_set('cache_lifetime', 43200);
    //Compress cached pages.
    variable_set('page_compression', 1);
    //Aggregate and compress CSS files.
    variable_set('preprocess_css', 1);
    //Aggregate JavaScript files.
    variable_set('preprocess_js', 1);
    
    //////////////////////////////////////////////////
    //     /admin/config/development/logging
    //     Error messages to display 
    //     None
    variable_set('error_level', '0');
         
    //////////////////////////////////////////////////         
    ///admin/config/development/maintenance
    //UWWTD SIIF Slovenia National Node is currently under maintenance. We should be back shortly. Thank you for your patience.        
    variable_set('maintenance_mode_message', "UWWTD SIIF ".$country_config[$country_code]['name']." National Node is currently under maintenance. We should be back shortly. Thank you for your patience.");
    
    //////////////////////////////////////////////////    
    ///admin/config/development/jquery_update
    //Default jQuery Version  1.8        
    variable_set('jquery_update_jquery_version', '1.8');
    
    //////////////////////////////////////////////////
    ///admin/config/people/accounts
//     Who can register accounts?  Administrators only
    variable_set('user_register', 0);
    
    //////////////////////////////////////////////////
    ///admin/config/regional/date-time/formats
//     add format   "H:i:s"
//     date_formats
    system_date_format_save(array('type' => 'custom', 'format' => 'H:i:s', 'locked' => '0', 'is_new'=> true));
    //add type "Time" => "H:i:s"
//     date_format_type  
    system_date_format_type_save(array('type' => 'time', 'title' => 'Time', 'locked' => '0', 'is_new'=> true));
    
    variable_set('date_format_time', 'H:i:s');
    
 
    
    
    //////////////////////////////////////////////////    
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;                                                                  
}

function uwwtd_install_create_page(&$context) 
{
    uwwtd_install_trace(__FUNCTION__);    
    //add block and page
//     Useful links 
    //create a page for new download menu
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Useful links";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/useful-links'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = 'summary';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field
    
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid
        
//     Ressources 
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Ressources";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/ressources'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field
    
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid    
    
//     Home page
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Home page";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/home-page'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid
    $nidhomepage = $node->nid;             
   
//     Credits
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Credits";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/credits'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field     
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid       
        
//     Regulations
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Regulations";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/regulations'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field     
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid    
       
       
//     UWWTPs
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "UWWTPs";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/uwwtps'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field     
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid       
       
           
//     Agglomerations
    $node = new stdClass(); // We create a new node object
    $node->type = "page"; // Or any other content type you want
    $node->title = "Agglomerations";
    $node->language = 'und'; // Or any language code if Locale module is enabled. More on this below *
    $node->path = array('alias' => 'content/agglomerations'); // Setting a node path
    node_object_prepare($node); // Set some default values.
    $node->uid = 1; // Or any id you wish
                               
    $node->body['und'][0]['value'] = '';
    $node->body['und'][0]['summary'] = '';
    $node->body['und'][0]['format'] = 'full_html'; // If field has a format, you need to define it. Here we define a default filtered_html format for a body field     
    $node = node_submit($node); // Prepare node for a submit
    node_save($node); // After this call we'll get a nid
    
    //////////////////////////////////////////////////
//     site names
//     /admin/config/system/site-information
//     content/home-page   
    
    //variable_set('site_frontpage', 'node');
    variable_set('site_frontpage', 'node/'.$nidhomepage);    
    
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;              
} 

function uwwtd_install_disable_module(&$context) 
{
    uwwtd_install_trace(__FUNCTION__);    
    //enabled module
    $list_module_to_disable = array(
        'Overlay' => 'overlay',
        'Toolbar' => 'toolbar',
        'Update manager' => 'update',   
        'Comment' => 'comment',   
        'Search' => 'Search'
        );
        
    if (false === module_disable($list_module_to_disable)) {
        $msg = "Error, the module ".implode(',', $list_module_to_disable)." can't be disabled.";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;       
}

function  uwwtd_install_enable_module(&$context)
{
    uwwtd_install_trace(__FUNCTION__);     
    $list_module_to_enable = array(    
        'Contact' => 'contact',
        'Content translation' => 'translation',
        'Forum' => 'forum',
        'Locale' => 'locale',
        'PHP filter' => 'php',
        'Administration menu' => 'admin_menu',
        'Chaos tools' => 'ctools',
        'Date' => 'date',
        'Date API' => 'date_api',
        'Date Views' => 'date_views',
        'Coder' => 'coder',
        'Coder Review' => 'coder_review',
        'Devel' => 'devel',
        'Menu import' => 'menu_import',
        'Features' => 'features',
        'Field Group' => 'field_group',
        'Geofield' => 'geofield',
        'Node Reference' => 'node_reference',
        'References' => 'references',
        'Behavior weights' => 'behavior_weights',
        'Language Switcher Dropdown' => 'lang_dropdown',
        'Localization update' => 'l10n_update',
        'Block languages' => 'i18n_block',
        'Contact translation' => 'i18n_contact',
        'Field translation' => 'i18n_field',
        'Internationalization' => 'i18n',
        'Menu translation' => 'i18n_menu',
        'Multilingual content' => 'i18n_node',                                
        'Multilingual select' => 'i18n_select',
        'String translation' => 'i18n_string',
        'Synchronize translations' => 'i18n_sync',
        'Taxonomy translation' => 'i18n_taxonomy',
        'Translation redirect' => 'i18n_redirect',
        'Translation sets' => 'i18n_translation',
        'User mail translation' => 'i18n_user',
        'Variable translation' => 'i18n_variable', 
        'OpenLayers' => 'openlayers',
        'OpenLayers Gazetteer' => 'openlayers_gazetteer',
        'OpenLayers Plus' => 'openlayers_plus',
        'OpenLayers UI' => 'openlayers_ui',
        'OpenLayers Views' => 'openlayers_views', 
        'Entity API' => 'entity',
        'Field custom tooltips' => 'custom_tooltips',
        'Geocoder' => 'geocoder',
        'Geofield Map' => 'geofield_map',
        'geoPHP' => 'geophp',
        'Libraries' => 'libraries',
        'Pathauto' => 'pathauto',
        'Proj4JS' => 'proj4js',
        'Token' => 'token', 
        'WKHTMLTOPDF' => 'wkhtmltopdf',
        //'Google Analytics' => 'googleanalytics',                  
        'BeautyTips API' => 'beautytips',
        'BeautyTips Manager' => 'beautytips_manager',
        'BeautyTips UI' => 'beautytips_ui',
        'jQuery Update' => 'jquery_update',
        'Wysiwyg' => 'wysiwyg',
        'Variable' => 'variable',
        'Variable realm' => 'variable_realm',
        'Variable store' => 'variable_store',
        'Variable views' => 'variable_views',
        //'DataTables' => 'datatables',
        'Views' => 'views',                
        'Views Aggregator Plus' => 'views_aggregator',
        'Views Bulk Operations' => 'views_bulk_operations',
        'Views Charts' => 'views_charts',
        'Views Data Export' => 'views_data_export',
        'Views PHP' => 'views_php',
        'Views UI' => 'views_ui',
        'D3' => 'd3',
        'D3 Views' => 'd3_views',
        'Translation template extractor'=>'potx',
        'Localization client'=>'l10n_client',
        'XML sitemap'=>'xmlsitemap',
        'XML sitemap node'=>'xmlsitemap_node',
        'XML sitemap menu'=>'xmlsitemap_menu',
        'XML sitemap engines'=>'xmlsitemap_engines',
        
        //GDPR 
        'EU Cookie Compliance'=>'eu_cookie_compliance',
        
        //Security 
        'Password policy'=>'password_policy',
        'Login security'=>'login_security',
        //search
        
        // 'UWWTD' => 'uwwtd',
        'Statistics for UWWTD' => 'uwwtd_statistics',
        'Views for UWWTD' => 'uwwtd_views',
        'UWWTD Article 17' => 'uwwtd_art17',         
    );
    
    if (false === module_enable($list_module_to_enable)) {
        $msg = "Error, the module ".implode(',', $list_module_to_disable)." can't be enabled.";
        uwwtd_install_trace($msg);
        throw new DrupalUpdateException($msg);    
    }
    
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;       
}    

function uwwtd_install_create_dir() 
{   
    //create dir
	$dir = 'public://data_errors';
	file_prepare_directory($dir, FILE_CREATE_DIRECTORY);     

    uwwtd_install_trace(__FUNCTION__);
    
	$dir = 'public://data_shapes';
	file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
    
	$dir = 'public://data_sources';
	file_prepare_directory($dir, FILE_CREATE_DIRECTORY);    
    
	$dir = 'public://pictures';
	file_prepare_directory($dir, FILE_CREATE_DIRECTORY);             
}

function uwwtd_install_batch_finished($success, $results, $operations)
{
    uwwtd_install_trace(__FUNCTION__);     
    if ($success) {
		drupal_set_message('success');
        drupal_set_message('install sql script region_nuts and river_basin, and legacy.sql');
	}
	else {
		drupal_set_message(
			t('An error occurred ')
		);  
	}
}

function uwwtd_install_create_block(&$context) 
{
    uwwtd_install_trace(__FUNCTION__);
  
    ////////////////////////////////////////////////
    //install menu editorial
    $menu = array(
        'menu_name' => 'menu-editorial-menu', // Drupal menu machine name
        'title' => 'Editorial menu', // Drupal menu display name
        'description' => '', // Optional menu description
    );
    menu_save($menu); 
    uwwtd_install_menu($menu, 'menu-editorial-menu.json');
    
//     _block_rehash('uwwtd'); //theme name here   
 
    
    ////////////////////////////////////////////////
    //create Home page - introduction block and put it in Content region
     $bidhome = db_insert('block_custom')
        ->fields(array(
          'body' => '',
          'info' => 'Home page - introduction',
          'format' => 'full_html',
        ))
        ->execute();    
    
      db_insert('block')
        ->fields(array(
          'module' => 'block',
          'delta' => $bidhome,
          'theme' => 'uwwtd',
          'status' => 1,
          'weight' => 1,
          'region' => 'content',
          'visibility' => 1,
          'pages' => '<front>',
          'title' => '<none>',
          'cache' =>  -1,
        ))
        ->execute(); 
            
    ////////////////////////////////////////////////     
    //create Footer content block and put it in Footer region
     $bidfooter = db_insert('block_custom')
        ->fields(array(
          'body' => '',
          'info' => 'Footer content',
          'format' => 'php_code',
        ))
        ->execute();  
     
      db_insert('block')
        ->fields(array(
          'module' => 'block',
          'delta' => $bidfooter,
          'theme' => 'uwwtd',
          'status' => 1,
          'weight' => 0,
          'region' => 'footer',
          'visibility' => 0,
          'pages' => '',
          'title' => '',
          'cache' =>  -1,
        ))
        ->execute(); 
             
    _block_rehash('uwwtd'); //theme name here
    
//      db_update('block')
//         ->fields(array(
//           'region' => 'content',
//         ))
//         ->condition('theme', 'uwwtd')
//         ->condition('delta', $bidhome)
//         ->condition('module', 'block')           
//         ->execute();  
//                     
//      db_update('block')
//         ->fields(array(
//           'region' => 'footer',
//         ))
//         ->condition('theme', 'uwwtd')
//         ->condition('delta', $bidfooter)
//         ->condition('module', 'block')           
//         ->execute();                  
    
    
    //////////////////////////////////////////////
    //enabled block Language switcher dropdown (User interface text) and 
    //move it in navigation region     lang_dropdown/language
     db_update('block')
        ->fields(array(
          'region' => 'navigation',
          'status' => 1,
          'weight' => -14,
          'pages' => '',
          'title' => '<none>',
          'visibility' => 0,
        ))
          ->condition('theme', 'uwwtd')
          ->condition('delta', 'language')
          ->condition('module', 'lang_dropdown')        
        ->execute();  
           
           

    //////////////////////////////////////////////
    //move block menu editorial in Top Bar region
     db_update('block')
        ->fields(array(
          'region' => 'header',
          'status' => 1,
          'weight' => -15,
          'pages' => '',
          'title' => '',
          'visibility' => 0,
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'menu-editorial-menu')
        ->condition('module', 'menu')            
        ->execute();    
    
    ////////////////////////////////////////////////
    //disable System help block
     db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'help')
        ->condition('module', 'system')           
        ->execute(); 
        
    ////////////////////////////////////////////////
    //disable Footer drupal block
     db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'powered-by')
        ->condition('module', 'system')           
        ->execute();                        
    ////////////////////////////////////////////////
    //create Map home block and put it in Content region
    //=> done later in hook update 6
    
    
    db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'navigation')
        ->condition('module', 'system')           
        ->execute();    
    db_update('block')
        ->fields(array(
          'region' => '-1',
        ))
        ->condition('theme', 'uwwtd')
        ->condition('delta', 'login')
        ->condition('module', 'user')           
        ->execute();    
        
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;  
}


function uwwtd_install_execute_sql(&$context) 
{
    uwwtd_install_trace(__FUNCTION__);
    
    //create extension postgis
    db_query('create extension IF NOT EXISTS postgis');    
    //create function for trigger on position_geo table
    db_query(' 
        create or replace function insert_geom_to_geo() returns trigger as $$
            BEGIN
                IF NEW.field_position_geo_geom IS NOT NULL THEN
                    NEW.the_geom=st_transform(st_setsrid(st_geomfromwkb(NEW.field_position_geo_geom), 4326), 4258);
                END IF;
                RETURN NEW;
            END;   
        $$ language plpgsql    
    '); 
    
    db_query(' 
        create or replace function update_geom_to_geo() returns trigger as $$
            BEGIN
            	IF (NEW.field_position_geo_geom != OLD.field_position_geo_geom) THEN
            		NEW.the_geom=st_transform(st_setsrid(st_geomfromwkb(NEW.field_position_geo_geom), 4326), 4258);
            	END IF;
            	RETURN NEW;
            END;
        $$ language plpgsql    
    ');
    
    $context['message'] = __FUNCTION__;
    $context['finished'] = 1;      
}

function uwwtd_install_configure_wkhtmltopdf() {

    uwwtd_install_trace(__FUNCTION__);
      
    $config_wkhtml = array (
  'bin_path' => '/usr/local/bin/wkhtmltopdf',
  'footer_display' => 1,
  'header_display' => 1,
  'cover_display' => 1,
  'toc_display' => 0,
  'toc_depth' => '3',
  'disablePdfCompression' => 1,
  'margins' => 
  array (
    'top' => '10',
    'bottom' => '15',
    'right' => '10',
    'left' => '10',
  ),
  'default_metadata' => 'creator|Creator|Ministry of XX (host)
subject|Subject|UWWTD SIIF national platform of [#COUNTRY#]
description|Summary|Present pages are part of a project aiming at implementing UWWTD SIIF platform in [#COUNTRY#]. The Structured Implementation and Information Framework (SIIF) concept is a ongoing Euro-pean Commission (Environment Directorate General) pilot project essentially focused on the organisation and management of data in order to enhance the generation of information for policy makers, interested parties and the public at all levels on how legislation is practically implemented. The concept developed is in line with the provisions of the Public Access to Environmental Information and INSPIRE Directives.
editor|Editor|[#COUNTRY#]
contributor|Contributors|Office International de l\'Eau, DG Environment
type|Type|Text
format|Format|PDF
language|Language|Eng
rights|Copyright|http://creativecommons.org/licenses/by-nc-sa/2.0/fr',
);
    variable_set('wkhtmltopdf_configurations', $config_wkhtml);            
}