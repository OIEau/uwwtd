<?php
// Fonction pour definir le lien de menu
function uwwtd_art17_menu(){
	$items = array();
	$items['data/article17'] = array(
		'title' => t('Data management article 17'),
		'description' => t('Page to manage the article 17'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('uwwtd_art17_form'),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd')
	);
	$items['data/article17/import'] = array(
		'title' => t('Article 17 import'),
		'description' => t('Form to upload article 17 relative data'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('uwwtd_art17_inport_form'),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd')
	);
	$items['data/article17/agglomeration/%'] = array(
		'title' => t('Article 17 Agglomeration example'),
		'description' => t('Generate a csv file for article 17 with all agglomeration(s)'),
		'page callback' => 'uwwtd_art17_example_agglomeration',
        'page arguments' => array(3),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd')
	); 
	$items['data/article17/uwwtp/%'] = array(
		'title' => t('Article 17 UWWTP example'),
		'description' => t('Generate a csv file for article 17 with all uwwtp(s)'),
		'page callback' => 'uwwtd_art17_example_uwwtp',
        'page arguments' => array(3),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd')
	);       
	
	return $items;
}

################################ ART 17 PAGE ################################
function uwwtd_art17_form($form, &$form_state){

	if(isset($_SESSION['uwwtd_annee']))unset($_SESSION['uwwtd_annee']);

	$uwwtd_year = date("Y");
	$uwwtd_years = array(
		'2000' => '2000', 
		'2001' => '2001', 
		'2002' => '2002', 
		'2003' => '2003', 
		'2004' => '2004', 
		'2005' => '2005', 
		'2006' => '2006', 
		'2007' => '2007', 
		'2008' => '2008', 
		'2009' => '2009', 
		'2010' => '2010', 
		'2011' => '2011', 
		'2012' => '2012', 
		'2013' => '2013', 
		'2014' => '2014', 
		'2015' => '2015', 
		'2016' => '2016', 
		'2017' => '2017', 
		'2018' => '2018', 
		'2019' => '2019', 
		'2020' => '2020'
	);
	
	// definition du champ input de type select pour l'annee
	$form['uwwtd_year'] = array(     
		'#type' => 'select',
		'#title' => t('Year'),
		'#default_value' => $uwwtd_year,        
		'#options' => $uwwtd_years,
		'#weight' => 0,
		'#required' => TRUE,
	);
	
	// Bouton envoyer
	$form['submit_button'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);

	return $form;
}

function uwwtd_art17_form_submit($form, &$form_state){
	
	$annee = $form['uwwtd_year']['#value'];
	$_SESSION['uwwtd_annee'] = $annee;
	
	$form_state['redirect'] = 'data/article17/import';	
}

################################ EXAMPLE FILE ################################
function uwwtd_art17_example_agglomeration($annee) {
	//Get all the agglomerations
	$query = db_select('node', 'n');
	$query->join('field_data_field_siteid', 'r', 'r.entity_id = n.nid');
	$aggs = $query
		->fields('n', array('nid', 'title'))
		->condition('n.type', 'agglomeration', '=')
		->condition('r.field_siteid_value', db_like($annee).'%', 'LIKE')
		->execute();
    $filename = tempnam('/tmp', 'agg'); 
    $rFile = fopen($filename, 'wb');
    fputcsv($rFile, array(    
            'ID of the agglomeration',      //aggCode       field_inspireidlocalid
            'Name of the agglomeration',    //aggName    -> title
            'Status of the agglomeration',  
            'Identified reason(s) for non compliance',
            'Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)',
            'Date or expected date for completion of preparatory measures for the  collecting system or IAS (planning, design, procurement, consents as required at MS level, etc)',
            'Start date or expected start date for works on the collecting systems or IAS',
            'Expected date of completion of the collecting system or IAS works',
            'Forecast investment cost for the collecting system or IAS (as in the national plan)',
            'Name of EU fund planned to be used to complete the collecting system or IAS  (if any)',
            'Amount of (planned)  EU funds likely to be requested to complete the collecting system or IAS  (if any)',
            'Any relevant comment on  collecting system or IAS',                                                       
            ), ';');
 
	foreach($aggs as $agg){
        $node = node_load($agg->nid);

        $aggData = array(
            $node->field_inspireidlocalid['und'][0]['value'],
            $node->title,
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',    
        );
        fputcsv($rFile, $aggData, ';');

        unset($node);
	}
    fclose($rFile);
    
    ini_set("auto_detect_line_endings", false); //for Mac user    
    $aHeaders = array(
          'Content-Type'        => 'application/octet-stream',   
          'Content-Disposition' => 'attachment; filename="agglomeration_art17_example_'.$annee.'.csv' . '"',
          'Expires'             => '0',
          'Cache-Control'       => 'must-revalidate',
          'Pragma'              =>'public',
          'Content-Length'      => filesize($filename),
      );            
    foreach ($aHeaders as $sName => $sValue) {
        drupal_add_http_header($sName, $sValue);
    }
    readfile($filename); 
    unlink($filename);
    exit();  
}

function uwwtd_art17_example_uwwtp($annee) {
	//Get all the agglomerations
//     echo '<pre>';var_export($annee);echo '</pre>';
	$query = db_select('node', 'n');
	$query->join('field_data_field_siteid', 'r', 'r.entity_id = n.nid');
	$aggs = $query
		->fields('n', array('nid', 'title'))
		->condition('n.type', 'uwwtp', '=')
		->condition('r.field_siteid_value', db_like($annee).'%', 'LIKE')
		->execute();
    $filename = tempnam('/tmp', 'uwwtp'); 
    $rFile = fopen($filename, 'wb');
    
    fputcsv($rFile, array(    
                'ID of the UWWTP',
                'Name of the UWWTP',	
                'ID(s) of the agglomeration(s) served',
                'Name(s) of the agglomeration(s) served',	
                'Status of the UWWTP',	
                'Identified reason(s) for non compliance',	
                'Measure(s) to reach compliance needed for UWWTP', 	
                'Load entering the UWWTP at the expected date of compliance (as planned)',	
                'Organic design capacity UWWTP (as planned)',	
                'Type of treatment UWWTP (as planned)',	
                'Date or expected date of completion of preparatory measures (planning, design, etc)',	
                'Date or expected start date for works',	
                'Date or expected date of completion of works',	
                'Expected date of compliance (12 months of samples)', 	
                'Forecast cost investment needed for the UWWTP (as in the national plan)',	
                'Name of EU fund planned to be used  (if any)',	
                'Amount of (planned) EU funding needed',	
                'Any relevant comment on UWWTP',                                                     
            ), ';');
 
	foreach($aggs as $agg){
        $node = node_load($agg->nid);
        $listAgglo = array();
//         dsm($node->field_inspireidlocalid['und'][0]['value']);
//         dsm($node);

        foreach($node->field_linked_agglomerations['und'] as $nidagg) {
//             dsm($nidagg);
            $agg = node_load($nidagg['nid']);
            $listAgglo['id'][] = $agg->field_inspireidlocalid['und'][0]['value'];
            $listAgglo['name'][] = $agg->title;            
        }
        
//         $listAggloTmp = array();
//         foreach($node->field_uwwaggliste['und'] as $nidagg) {
// //             dsm($nidagg);
//             $agg = node_load($nidagg['nid']);
//             $listAggloTmp['id'][] = $agg->field_inspireidlocalid['und'][0]['value'];
//             $listAggloTmp['name'][] = $agg->title;            
//         }        
//         return 'p';
//         break;        
 
        $aggData = array(
            $node->field_inspireidlocalid['und'][0]['value'],
            $node->title,
            implode(', ', $listAgglo['id']),
            implode(', ', $listAgglo['name']),
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',    
        );
        fputcsv($rFile, $aggData, ';');
        
//         $aggData = array(
//             $node->field_inspireidlocalid['und'][0]['value'],
//             $node->title,
//             implode(', ', $listAggloTmp['id']),
//             implode(', ', $listAggloTmp['name']),
//             '',
//             '',
//             '',
//             '',
//             '',
//             '',
//             '',
//             '',    
//         );
//         fputcsv($rFile, $aggData, ';');        

        unset($node);
	}
    fclose($rFile);
    
    ini_set("auto_detect_line_endings", false); //for Mac user    
    $aHeaders = array(
          'Content-Type'        => 'application/octet-stream', 
          'Content-Disposition' => 'attachment; filename="uwwtp_art17_example_'.$annee.'.csv' . '"',
          'Expires'             => '0',
          'Cache-Control'       => 'must-revalidate',
          'Pragma'              =>'public',
          'Content-Length'      => filesize($filename),
      );            
    foreach ($aHeaders as $sName => $sValue) {
        drupal_add_http_header($sName, $sValue);
    }
    readfile($filename); 
    unlink($filename);
    exit();  
}
################################ DATA INPUT ################################
function uwwtd_art17_inport_form($form, &$form_state){

	if(!isset($_SESSION['uwwtd_annee'])){
		drupal_goto('data/article17');
	}
	else{
		
		global $base_url;
		$site_url = $base_url.'/';

		// Definition des variables pour le formulaire
		$annee = $_SESSION['uwwtd_annee'];
		
		$form['uwwtd_text'] = array(
			'#markup' => '<h4>'.t('Article 17 import for the year').' : '.$annee.'</h4><br><p>'.t('Your CSV file must be correctly formatted using \' ; \' as the cell separator and \' " \' as the text separator. The file must be encoded in UTF-8 to ensure character readability.').'</p>'
			.'<p>'.t('To help help you having to make your own files we have created for you a file for both the agglomerations and the treatment plants:')
			.'</p><ul><li><a target="_blank" href="'.$site_url.drupal_get_path('module', 'uwwtd_art17').'/examples/uwwtp_art17_example.csv">'.t('Treatment plants article 17 example csv').'</a></li>
			<li><a target="_blank" href="'.$site_url.drupal_get_path('module', 'uwwtd_art17').'/examples/agglo_art17_example.csv">'.t('Agglomerations article 17 example csv').'</a></li>
            
            <li><a  href="'.base_path().'data/article17/agglomeration/'.$_SESSION['uwwtd_annee'].'">'.t('Agglomerations article 17 pre-generate csv').'</a></li>
            <li><a  href="'.base_path().'data/article17/uwwtp/'.$_SESSION['uwwtd_annee'].'">'.t('Uwwtps article 17 pre-generate csv').'</a></li>
            
            </ul><br>'
		);
		
		// definition du champ input de type file
		$form['uwwtd_file'] = array(
			'#type' => 'managed_file',
			'#title' => t('Data file'),
			'#upload_validators' => array('file_validate_extensions' => array('csv')),
			'#required' => TRUE,
		);
		
		// Bouton envoyer
		$form['submit_button'] = array(
			'#type' => 'submit',
			'#value' => t('Submit'),
		);
		
		// Fonction a appeller quand on clique sur envoyer
		$form['#submit'][] = 'uwwtd_art17_import_submit_handler';
		return $form;
	}
}

function uwwtd_art17_import_submit_handler($form, &$form_state) {
	
	// Definition et recup des variables
	if(isset($_SESSION['uwwtd_errors'])) unset($_SESSION['uwwtd_errors']);
	if(isset($_SESSION['uwwtd_warnings'])) unset($_SESSION['uwwtd_warnings']);
	$annee = $_SESSION['uwwtd_annee'];
	$file = file_load($form_state['values']['uwwtd_file']);
	$uri = $file->uri;
	
	// On upload le file et la fonction renvoie le nouveau nom du fichier
	$newFile = uwwtd_file_upload($file, '.csv'); 
	
	$datas = uwwtd_csv_to_array($uri, ';');
	//$datas = uwwtd_xml_to_array($uri);
	
	uwwtd_art17_setup_batch($newFile, $annee, $datas);	
}

function uwwtd_art17_setup_batch($newFile, $annee, $datas){
	$batch = array(
		'title' => t('Data import'),
		'operations' => array(
			array('uwwtd_art17_import_article17_process', array($newFile, $annee, $datas))
		),
		'error_message' => t('Error!'),
		'finished' => 'uwwtd_art17_finished',
		'file' => drupal_get_path('module','uwwtd').'/data_center.inc'
	);

	batch_set($batch);
	batch_process('data/article17/import');
}

function uwwtd_art17_import_article17_process($newFile, $annee, $datas, &$context){
	if (!isset($context['sandbox']['progress'])) {

		$context['sandbox']['max'] = count($datas);
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['ids'] = $datas;
	}
	$i = $context['sandbox']['progress'];
	$data = $context['sandbox']['ids'][$i];

	// Check basic elements exist
	// errors
	$e = 0;
	if(($data['ID of the agglomeration'] == '' || !isset($data['ID of the agglomeration'])) && ($data['ID of the UWWTP'] == '' || !isset($data['ID of the UWWTP']))){
		$e = 1;
		$emes = t('The data you are trying to add for article 17 doesn\'t contain an identifier');
		uwwtd_set_error($i, $emes);
	}

	// Check if no errors were found
	if($e == 0){

		// Variables
		$uri = $newFile->uri;
		$filename = $newFile->filename;
		$filename .= ".csv";
		$fid = $newFile->fid;
		if(isset($data['ID of the agglomeration'])) {
			$siteId = $annee.'_'.uwwtd_check_text($data['ID of the agglomeration']);
		}
		else{
			$siteId = $annee.'_'.uwwtd_check_text($data['ID of the UWWTP']);
		}

		// Check if id exists
		$exists = uwwtd_check_exist($siteId);

		// If the element exists
		if($exists != false){

			// load the exisiting element
			$element = node_load($exists);
			$art17_title = $element->field_siteid['und'][0]['value'] .' - Article 17 data '.$annee;

			// Create new article 17 node
			$art = new StdClass();
			$art->type = 'article_17';
			$art->title = $art17_title;

			// Article 17 mapping for UWWTP
			if(isset($data['Identified reason(s) for non compliance']) && !empty($data['Identified reason(s) for non compliance'])) $art->field_art_17_reason['und'][0]['value'] = $data['Identified reason(s) for non compliance'];
			if(isset($data['Measure(s) to reach compliance needed for UWWTP']) && !empty($data['Measure(s) to reach compliance needed for UWWTP'])) $art->field_art_17_reason_uwwtp['und'][0]['value'] = $data['Measure(s) to reach compliance needed for UWWTP'];
			if(isset($data['Load entering the UWWTP at the expected date of compliance (as planned)']) && !empty($data['Load entering the UWWTP at the expected date of compliance (as planned)'])) $art->field_art_17_load_expected['und'][0]['value'] = $data['Load entering the UWWTP at the expected date of compliance (as planned)'];
			if(isset($data['Organic design capacity UWWTP (as planned)']) && !empty($data['Organic design capacity UWWTP (as planned)'])) $art->field_art_17_capacity_planned['und'][0]['value'] = $data['Organic design capacity UWWTP (as planned)'];
			if(isset($data['Type of treatment UWWTP (as planned)']) && !empty($data['Type of treatment UWWTP (as planned)'])) $art->field_art_17_treatment_planned['und'][0]['value'] = $data['Type of treatment UWWTP (as planned)'];
			if(isset($data['Date or expected date of completion of preparatory measures (planning, design, etc)']) && !empty($data['Date or expected date of completion of preparatory measures (planning, design, etc)'])) $art->field_art_17_expected_comp_uwwtp['und'][0]['value'] = uwwtd_art17_date($data['Date or expected date of completion of preparatory measures (planning, design, etc)']);
			if(isset($data['Date or expected start date for works']) && !empty($data['Date or expected start date for works'])) $art->field_art_17_expected_start['und'][0]['value'] = uwwtd_art17_date($data['Date or expected start date for works']);
			if(isset($data['Date or expected date of completion of works']) && !empty($data['Date or expected date of completion of works'])) $art->field_art_17_expected_system['und'][0]['value'] = uwwtd_art17_date($data['Date or expected date of completion of works']);
			if(isset($data['Expected date of compliance (12 months of samples)']) && !empty($data['Expected date of compliance (12 months of samples)'])) $art->field_art_17_expected_date_comp['und'][0]['value'] = uwwtd_art17_date($data['Expected date of compliance (12 months of samples)']);
			if(isset($data['Forecast cost investment needed for the UWWTP (as in the national plan)']) && !empty($data['Forecast cost investment needed for the UWWTP (as in the national plan)'])) $art->field_art_17_forcast_investment['und'][0]['value'] = $data['Forecast cost investment needed for the UWWTP (as in the national plan)'];
			if(isset($data['Name of EU fund planned to be used (if any)']) && !empty($data['Name of EU fund planned to be used (if any)'])) $art->field_art_17_eu_fund['und'][0]['value'] = $data['Name of EU fund planned to be used (if any)'];
			if(isset($data['Amount of (planned) EU funding needed']) && !empty($data['Amount of (planned) EU funding needed'])) $art->field_art_17_eu_fund_amount['und'][0]['value'] = $data['Amount of (planned) EU funding needed'];
			if(isset($data['Any relevant comment on UWWTP']) && !empty($data['Any relevant comment on UWWTP'])) $art->field_art_17_relative_comments['und'][0]['value'] = $data['Any relevant comment on UWWTP'];

			// Article 17 mapping for Agglomerations
			if(isset($data['Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)']) && !empty($data['Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)'])) $art->field_art_17_mesures_forseen['und'][0]['value'] = $data['Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)'];
			if(isset($data['Date or expected date for completion of preparatory measures for the collecting system or IAS (planning, design, procurement, consents as required at MS level, etc)']) && !empty($data['Date or expected date for completion of preparatory measures for the collecting system or IAS (planning, design, procurement, consents as required at MS level, etc)'])) $art->field_art_17_expected_completion['und'][0]['value'] = uwwtd_art17_date($data['Date or expected date for completion of preparatory measures for the collecting system or IAS (planning, design, procurement, consents as required at MS level, etc)']);
			if(isset($data['Start date or expected start date for works on the collecting systems or IAS']) && !empty($data['Start date or expected start date for works on the collecting systems or IAS'])) $art->field_art_17_expected_start['und'][0]['value'] = uwwtd_art17_date($data['Start date or expected start date for works on the collecting systems or IAS']);
			if(isset($data['Expected date of completion of the collecting system or IAS works']) && !empty($data['Expected date of completion of the collecting system or IAS works'])) $art->field_art_17_expected_system['und'][0]['value'] = uwwtd_art17_date($data['Expected date of completion of the collecting system or IAS works']);
			if(isset($data['Forecast investment cost for the collecting system or IAS (as in the national plan)']) && !empty($data['Forecast investment cost for the collecting system or IAS (as in the national plan)'])) $art->field_art_17_forcast_investment['und'][0]['value'] = $data['Forecast investment cost for the collecting system or IAS (as in the national plan)'];
			if(isset($data['Name of EU fund planned to be used to complete the collecting system or IAS (if any)']) && !empty($data['Name of EU fund planned to be used to complete the collecting system or IAS (if any)'])) $art->field_art_17_eu_fund['und'][0]['value'] = $data['Name of EU fund planned to be used to complete the collecting system or IAS (if any)'];
			if(isset($data['Amount of (planned) EU funds likely to be requested to complete the collecting system or IAS (if any)']) && !empty($data['Amount of (planned) EU funds likely to be requested to complete the collecting system or IAS (if any)'])) $art->field_art_17_eu_fund_amount['und'][0]['value'] = $data['Amount of (planned) EU funds likely to be requested to complete the collecting system or IAS (if any)'];
			if(isset($data['Any relevant comment on collecting system or IAS']) && !empty($data['Any relevant comment on collecting system or IAS'])) $art->field_art_17_relative_comments['und'][0]['value'] = $data['Any relevant comment on collecting system or IAS'];

			// Article 17 link to element
			if($element->type == 'agglomeration'){
				$art->field_art_17_agglo['und'][0]['nid'] = $element->nid;
			}
			else{
				$art->field_art_17_uwwtp['und'][0]['nid'] = $element->nid;
			}

			// Save the article 17 element
			node_save($art);

			// Link element tot Article 17
			$element->field_article17['und'][0]['nid'] = $art->nid;

			// Save the element
			node_save($element);

		}
		else{

			$emes = t('WARNING : the element at index').': '.$i.' '.t('does not correspond to any identifier in the database.');
			uwwtd_set_warning($i, $emes);

		}
	
	}

	$context['sandbox']['progress']++;
	$context['message'] = t('Processing Article 17...');
	
	if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
		$context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
	}
}

function uwwtd_art17_date($string){
	$exploded = explode('/', $string);
	if(count($exploded) > 1){
		$date = $exploded[1].'-'.$exploded[0].'-01 00:00:00';
		//dsm($date);
		return $date;
	}
}

function uwwtd_art17_finished($success, $results, $operations){
	if ($success) {
		drupal_set_message(t('All the Article 17 data has been added to the site.'));
		if(isset($_SESSION['uwwtd_errors'])){
			uwwtd_add_errors($_SESSION['uwwtd_errors']);
			foreach($_SESSION['uwwtd_errors'] as $error){
				drupal_set_message(t('Error occured on row index : ').$error[0].' (" '.$error[1].' ") '.t(' of your file. This element was not added, please check your input file.'), 'error');
			}
		}
		if(isset($_SESSION['uwwtd_warnings'])){
			uwwtd_add_errors($_SESSION['uwwtd_warnings']);
			foreach($_SESSION['uwwtd_warnings'] as $warning){
				drupal_set_message(t('Warning occured on row index : ').$warning[0].' (" '.$warning[1].' ") '.t(' of your file. This element was not added, please check your input file.'), 'warning');
			}
		}
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		drupal_set_message(
			t('An error occurred while processing @operation with arguments : @args',
				array(
					'@operation' => $error_operation[0],
					'@args' => print_r($error_operation[0], TRUE),
				)
			)
		);
	}
}