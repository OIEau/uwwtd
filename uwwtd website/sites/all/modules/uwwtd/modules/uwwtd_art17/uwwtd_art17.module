<?php

require_once(drupal_get_path('module', 'uwwtd') . '/inc/uwwtd.config.inc');
require_once(drupal_get_path('module', 'uwwtd') . '/inc/utils.inc');
require_once(drupal_get_path('module', 'uwwtd_art17') . '/inc/article17.config.inc');
require_once(drupal_get_path('module', 'uwwtd') . '/lib/PHPExcel-1.8.1/Classes/PHPExcel/IOFactory.php');

// Fonction pour definir le lien de menu
function uwwtd_art17_menu(){
	$items = array();
	$items['data/article17'] = array(
		'title' => t('Data management article 17'),
		'description' => t('Page to manage the article 17'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('uwwtd_art17_form'),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd').'/inc/'
	);
	$items['data/article17/import'] = array(
		'title' => t('Article 17 import'),
		'description' => t('Form to upload article 17 relative data'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('uwwtd_art17_import_form'),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd').'/inc/'
	);
	$items['data/article17/agglomeration/%'] = array(
		'title' => t('Article 17 Agglomeration example'),
		'description' => t('Generate a csv file for article 17 with all agglomeration(s)'),
		'page callback' => 'uwwtd_art17_example_agglomeration',
        'page arguments' => array(3),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd').'/inc/'
	); 
	$items['data/article17/uwwtp/%'] = array(
		'title' => t('Article 17 UWWTP example'),
		'description' => t('Generate a csv file for article 17 with all uwwtp(s)'),
		'page callback' => 'uwwtd_art17_example_uwwtp',
        'page arguments' => array(3),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd').'/inc/'
	); 
	$items['data/article17/export/%'] = array(
		'title' => t('Article 17 prefilled'),
		'description' => t('Generate a xls file for article 17 with all agglomeration(s) and uwwtp(s)'),
		'page callback' => 'uwwtd_art17_export',
        'page arguments' => array(3),
		//'access callback' => TRUE,
		'access arguments' => array('Data-management access'),
		'file' => 'data_center.inc',
		'file path' => drupal_get_path('module', 'uwwtd').'/inc/'
	);          
	
	return $items;
}

function uwwtd_art17_node_delete($node) {
	if($node->type=="article_17_uwwtp"){
		if($uwwtp = node_load($node->field_art17uwwtp_link_uwwtp['und'][0]['nid'])){
			//modification de mon champ 
			$uwwtp->field_article17_uwwtp['und'][0]['nid'] = null;
			node_save($uwwtp);
		}
	}elseif($node->type=="article_17_agglomeration"){
		if($aggl = node_load($node->field_art17agg_link_agglo['und'][0]['nid'])){
			//modification de mon champ 
			$aggl->field_article17_agglo['und'][0]['nid'] = null;
			node_save($aggl);
		}

	}
}
################################ ART 17 PAGE ################################
function uwwtd_art17_form($form, &$form_state){

	if(isset($_SESSION['uwwtd_annee']))unset($_SESSION['uwwtd_annee']);

	$uwwtd_year = uwwtd_get_max_annee();//date("Y");
	$uwwtd_years = uwwtd_get_all_year();
//     array(
// 		'2000' => '2000', 
// 		'2001' => '2001', 
// 		'2002' => '2002', 
// 		'2003' => '2003', 
// 		'2004' => '2004', 
// 		'2005' => '2005', 
// 		'2006' => '2006', 
// 		'2007' => '2007', 
// 		'2008' => '2008', 
// 		'2009' => '2009', 
// 		'2010' => '2010', 
// 		'2011' => '2011', 
// 		'2012' => '2012', 
// 		'2013' => '2013', 
// 		'2014' => '2014', 
// 		'2015' => '2015', 
// 		'2016' => '2016', 
// 		'2017' => '2017', 
// 		'2018' => '2018', 
// 		'2019' => '2019', 
// 		'2020' => '2020'
// 	);
	
	// definition du champ input de type select pour l'annee
	$form['uwwtd_year'] = array(     
		'#type' => 'select',
		'#title' => t('Year'),
		'#default_value' => $uwwtd_year,        
		'#options' => $uwwtd_years,
		'#weight' => 0,
		'#required' => TRUE,
	);
	
	// Bouton envoyer
	$form['submit_button'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);

	return $form;
}

function uwwtd_art17_form_submit($form, &$form_state){
	
	$annee = $form['uwwtd_year']['#value'];
	$_SESSION['uwwtd_annee'] = $annee;
	
	$form_state['redirect'] = 'data/article17/import';	
}

################################ EXAMPLE FILE ################################
function uwwtd_art17_example_agglomeration($annee) {
	//Get all the agglomerations
	$query = db_select('node', 'n');
	$query->join('field_data_field_siteid', 'r', 'r.entity_id = n.nid');
	$aggs = $query
		->fields('n', array('nid', 'title'))
		->condition('n.type', 'agglomeration', '=')
		->condition('r.field_siteid_value', db_like($annee).'%', 'LIKE')
		->execute();
    $filename = tempnam('/tmp', 'agg'); 
    $rFile = fopen($filename, 'wb');
	
    fputcsv($rFile, array(    
            'aggCode: ID of the agglomeration',      //aggCode       field_inspireidlocalid
            'aggName: Name of the agglomeration related to this UWWTP',    //aggName    -> title
            'flaggStatus: Status of the agglomeration at the reference reporting year (Not compliant/Pending deadlines)',  
            'flaggreasons: Identified reason(s) for non compliance',
            'flaggMeasures: Measure(s) foreseen to reach compliance with Article 3 (collecting systems and IAS)',
            'flaggExpecDateStart: Date or expected date for completion of preparatory measures for the  collecting system or IAS (planning, design, procurement, consents as required at MS level, etc)',
            'flaggExpecDateStartWork: Start date or expected start date for works on the collecting systems or IAS',
            'flaggExpecDateCompletion: Expected date of completion of the collecting system or IAS works',
            'flaggInv: Forecast investment cost for the collecting system or IAS (as in the national plan)',
            'flaggEUfundname: Name of EU fund planned to be used to complete the collecting system or IAS  (if any)',
            'FlaggEUfund: Amount of (planned)  EU funds likely to be requested to complete the collecting system or IAS  (if any)',
            'FlaggComments: Any relevant comment on  collecting system or IAS',                                                       
            'flaggExpload: Expected generated load of the agglomeration at the exepected date of compliance',                                                       
            'flaggExploadcoll: Expected rate of the generated load of agglomeration  collected through collecting systems at the expected date of compliance',                                                       
            'flaggExploadIAS: Expected rate of the generated load of the agglomeration addressed throug IAS at the expected date of compliance',                                                       
            'Flaggotherfund: Amount of funds likely to be given  to complete the collecting system or IAS (if any)',                                                       
            'flaggotherfundname: Name of the entity planned to give fund to complete the collecting system or IAS (if any)',                                                       
            'Flaggloan: Amount of loan likely to be granted to complete the collecting system or IAS (if any)',                                                       
            'Flaggloanname: Name of the entity planned to give loan to complete the collecting system or IAS (if any)',                                                       
            // 'Compliance',                                                       
            // 'Generated load (p.e.)',                                                       
            ), ';');
 
	foreach($aggs as $agg){
        $node = node_load($agg->nid);
        $aggData[] = array(
            $node->field_inspireidlocalid['und'][0]['value'],
            $node->title,
            $node->field_aggcompliance[LANGUAGE_NONE][0]['value'], 
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',
            '',  
            '',
			'',  
            '',
            '',
            $node->field_agggenerated[LANGUAGE_NONE][0]['value'],   
        );
        // fputcsv($rFile, $aggData, ';');

        unset($node);
	}
	
	function trieAgg($aggData, $b){
		$aggKey = array('NC'=> 0, 'PD'=>1, 'NR'=>2, 'NI'=>3, 'C'=>4,  );

		if($aggData[2] == $b[2]){
			if($aggData[20] == $b[20]){
				return 0;
			}elseif($aggData[20] > $b[20]){
				return -1;
			}else{
				return 1;
			}
		}elseif($aggKey[$aggData[2]] > $aggKey[$b[2]]){
			return 1;
		}else{
			return -1;
		}
	}
	usort($aggData, "trieAgg");
	foreach($aggData as $key => $val){
		unset($val[19]);
		unset($val[20]);
		if($val[2] == "NR"){
			$val[2] = "Not Relevant";
		}elseif($val[2] == "NC"){
			$val[2] = "Not Compliant";
		}elseif($val[2] == "C"){
			$val[2] = "Compliant";
		}elseif($val[2] == "NI"){
			$val[2] = "No Information";
		}elseif($val[2] == "PD"){
			$val[2] = "Pending deadlines";
		}
		fputcsv($rFile, $val, ';');
	}
	
	
    fclose($rFile);
    
    ini_set("auto_detect_line_endings", false); //for Mac user    
    $aHeaders = array(
          'Content-Type'        => 'application/octet-stream',   
          'Content-Disposition' => 'attachment; filename="agglomeration_art17_example_'.$annee.'.csv' . '"',
          'Expires'             => '0',
          'Cache-Control'       => 'must-revalidate',
          'Pragma'              =>'public',
          'Content-Length'      => filesize($filename),
      );            
    foreach ($aHeaders as $sName => $sValue) {
        drupal_add_http_header($sName, $sValue);
    }
    readfile($filename); 
    unlink($filename);
    exit();  
}

function uwwtd_art17_get_export_path($annee)
{
    return $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['final_art17'];    
}
/**
 *
 */ 
function uwwtd_art17_export($annee)
{
     $filepath = uwwtd_art17_get_export_path($annee);
    //if registre already calculated and no new conformity or new import_data processed since, we send the file
//     dsm($filepath);
//     dsm(file_create_url($filepath));                                                             
    if (file_exists($filepath) 
        && variable_get('art17_'.$annee, -2) > variable_get('conformity_'.$annee, -1)
        && variable_get('art17_'.$annee, -2) > variable_get('import_data_'.$annee, -1)) {
//         drupal_set_message('<a href="'.file_create_url($filepath).'">get the article 17 prefilled for year '.$annee.'</a>');
        uwwtd_sendfile($filepath); 
//         uwwtd_art17_setup_export_art17_batch($annee);       
    } else {
        uwwtd_art17_setup_export_art17_batch($annee);
    }    
}

function uwwtd_art17_set_export_operation(&$batch, $annee)
{
    $batch['operations'][] = array('uwwtd_art17_create_art17_2015_basic_information', array($annee));
    $batch['operations'][] = array('uwwtd_art17_create_art17_2015_uwwtp', array($annee));
    $batch['operations'][] = array('uwwtd_art17_create_art17_2015_agglo', array($annee));
    $batch['operations'][] = array('uwwtd_art17_create_art17_2015_investmentsjobs', array($annee));
    $batch['operations'][] = array('uwwtd_art17_create_art17_2015_final_file', array($annee));
}

function uwwtd_art17_setup_export_art17_batch($annee)
{
	$batch = array(
		'title' => t('Article17 creation for ' . $annee),
		'operations' => array(),
		'error_message' => t('Error!'),
		'finished' => 'uwwtd_art17_export_finished',
// 		'file' => drupal_get_path('module','uwwtd').'/inc/register.inc'
	);   
    
    uwwtd_art17_set_export_operation($batch, $annee);
    
  	batch_set($batch);
	batch_process('data/article17');
}

function uwwtd_art17_export_finished($success, $results, $operations)
{
    if ($success) {
		drupal_set_message('success');
	}
	else {
		drupal_set_message(
			t('An error occurred ')
		);  
	}
}

function uwwtd_art17_create_art17_2015_agglo($annee, &$context)
{
    //load all agglo
	if (!isset($context['sandbox']['progress'])) {
    
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['id'] = array();
            
        $query = 'select n.nid
        from {node} n    
            left join
                {field_data_field_anneedata} f_annee
                    ON n.nid = f_annee.entity_id    
            left join
                {field_data_field_aggcompliance} f_comp
                    ON n.nid = f_comp.entity_id
            left join
                {field_data_field_agggenerated} f_agggenerated
                    ON n.nid = f_agggenerated.entity_id                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
        where n.type = :typenode
            and f_annee.field_anneedata_value = :annee
        order by 
                CASE        
                    WHEN f_comp.field_aggcompliance_value = \'NC\' THEN  1
                    WHEN f_comp.field_aggcompliance_value = \'PD\'  THEN 2
                    WHEN f_comp.field_aggcompliance_value = \'NR\' THEN  3
                    WHEN f_comp.field_aggcompliance_value = \'NI\' THEN  4
                    WHEN f_comp.field_aggcompliance_value = \'C\' THEN   5
                    ELSE 99
                END     
                asc,
                f_agggenerated.field_agggenerated_value desc 
        ';
        
//         dsm($query);
        $param = array(
            ':typenode' => 'agglomeration',
            ':annee' => $annee,
            );
//         dsm($param);
        $listagg = array();    
        try {
            $result = db_query($query, $param);
            while($row = $result->fetchAssoc()) {
                $context['sandbox']['id'][] = $row['nid'];
            }
        }catch(Exception $e) {
            dsm($e->getMessage());
        }
        
//         dsm($listagg);
        $context['sandbox']['line'] = 3;    	
		$context['sandbox']['max'] = count($context['sandbox']['id']);
    }
    
    if ($context['sandbox']['progress'] == 0) {
        $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_model_file'] . $GLOBALS['uwwtd']['sheet_art17']['model'];
        $target_path = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['agglo']['xlsx_name'];    
    } else {
        $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['agglo']['xlsx_name'];
        $target_path = $path_xlsx;        
    }
    
//     $start_line = $context['sandbox']['line'];

    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
 
    $objReader->setLoadSheetsOnly( array(
                                         $GLOBALS['uwwtd']['sheet_art17']['agglo']['xlsx_model_sheet_name'],
                                        ) );
                                        
    $objPHPExcel = $objReader->load(drupal_realpath($path_xlsx));
    $sheet = $objPHPExcel->getSheetByName($GLOBALS['uwwtd']['sheet_art17']['agglo']['xlsx_model_sheet_name']);

    $j = 0;
    while ($j < 10 && $context['sandbox']['progress'] < $context['sandbox']['max'])
    {      
        $node = node_load($context['sandbox']['id'][$context['sandbox']['progress']]);
        $sheet->setCellValueByColumnAndRow(1, $context['sandbox']['line'], $node->field_inspireidlocalid['und'][0]['value']);
        $sheet->setCellValueByColumnAndRow(2, $context['sandbox']['line'], $node->title);
        $sheet->setCellValueByColumnAndRow(3, $context['sandbox']['line'], $GLOBALS['uwwtd']['all_compliance'][$node->field_aggcompliance[LANGUAGE_NONE][0]['value']]); 
   
        $context['sandbox']['progress']++;
        $context['sandbox']['line']++;
        $j++;
        unset($node);
    } 

    //write
    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $GLOBALS['uwwtd']['sheet_art17']['target_type']);
    $objWriter->setPreCalculateFormulas(false);
    //$objWriter->setOffice2003Compatibility(true);
    $objWriter->save(drupal_realpath($target_path));
    unset($objWriter);
    unset($objReader);
 
    $context['message'] = '(' .$annee . ') ' . t('article 17 file agglo ' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);    
    
    if ($context['sandbox']['progress'] < $context['sandbox']['max']) {
        $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
    }               
}


function uwwtd_art17_create_art17_2015_basic_information($annee, &$context)
{
	if (!isset($context['sandbox']['progress'])) {
    
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['max'] = 1;
//         $context['sandbox']['id'] = array();
    }      
    
//     if ($context['sandbox']['progress'] == 0) {
    $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_model_file'] . $GLOBALS['uwwtd']['sheet_art17']['model'];
    $target_path = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['basic_information']['xlsx_name'];    
//     } else {
//         $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['basic_information']['xlsx_name'];
//         $target_path = $path_xlsx;        
//     }
//     dsm($path_xlsx);
//     dsm($target_path);
//     $start_line = $context['sandbox']['line'];

    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
//     dsm($objReader);
    $objReader->setLoadSheetsOnly( array(
                                         $GLOBALS['uwwtd']['sheet_art17']['basic_information']['xlsx_model_sheet_name'],
                                        ) );
    
//     dsm(drupal_realpath($path_xlsx));                                    
    $objPHPExcel = $objReader->load(drupal_realpath($path_xlsx));
        
    
    //write
    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $GLOBALS['uwwtd']['sheet_art17']['target_type']);
    $objWriter->setPreCalculateFormulas(false);
    //$objWriter->setOffice2003Compatibility(true);
    $objWriter->save(drupal_realpath($target_path));
    unset($objWriter);
    unset($objReader);
 
    $context['sandbox']['progress']++;
    $context['message'] = '(' .$annee . ') ' . t('article 17 file basic information ' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);    
    
    $context['finished'] = 1;     
}

function uwwtd_art17_create_art17_2015_uwwtp($annee, &$context)
{
    //load all agglo
//     dsm($annee);
	if (!isset($context['sandbox']['progress'])) {
    
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['id'] = array();
            
        $query = 'select n.nid
        from {node} n    
            left join
                {field_data_field_anneedata} f_annee
                    ON n.nid = f_annee.entity_id    
            left join
                {field_data_field_uwwcompliance} f_comp
                    ON n.nid = f_comp.entity_id
            left join
                {field_data_field_uwwloadenteringuwwtp} f_uwwloadenteringuwwtp
                    ON n.nid = f_uwwloadenteringuwwtp.entity_id                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
        where n.type = :typenode
            and f_annee.field_anneedata_value = :annee
        order by 
                CASE        
                    WHEN f_comp.field_uwwcompliance_value = \'NC\' THEN  1
                    WHEN f_comp.field_uwwcompliance_value = \'PD\'  THEN 2
                    WHEN f_comp.field_uwwcompliance_value = \'NR\' THEN  3
                    WHEN f_comp.field_uwwcompliance_value = \'NI\' THEN  4
                    WHEN f_comp.field_uwwcompliance_value = \'C\' THEN   5
                    ELSE 99
                END     
                asc,
                f_uwwloadenteringuwwtp.field_uwwloadenteringuwwtp_value desc 
        ';
        
//         dsm($query);
        $param = array(
            ':typenode' => 'uwwtp',
            ':annee' => $annee,
            );
//         dsm($param);
        $listagg = array();    
        try {
            $result = db_query($query, $param);
            while($row = $result->fetchAssoc()) {
                $context['sandbox']['id'][] = $row['nid'];
            }
        }catch(Exception $e) {
            dsm($e->getMessage());
        }
        
//         dsm($listagg);
        $context['sandbox']['line'] = 3;    	
		$context['sandbox']['max'] = count($context['sandbox']['id']);
    }
//     dsm($context);
    if ($context['sandbox']['progress'] == 0) {
        $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_model_file'] . $GLOBALS['uwwtd']['sheet_art17']['model'];
        $target_path = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['uwwtp']['xlsx_name'];    
    } else {
        $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['uwwtp']['xlsx_name'];
        $target_path = $path_xlsx;        
    }
//     dsm($path_xlsx);
//     dsm($target_path);
//     $start_line = $context['sandbox']['line'];

    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
//     dsm($objReader);
    $objReader->setLoadSheetsOnly( array(
                                         $GLOBALS['uwwtd']['sheet_art17']['uwwtp']['xlsx_model_sheet_name'],
                                        ) );
    
//     dsm(drupal_realpath($path_xlsx));                                    
    $objPHPExcel = $objReader->load(drupal_realpath($path_xlsx));
    
    $sheet = $objPHPExcel->getSheetByName($GLOBALS['uwwtd']['sheet_art17']['uwwtp']['xlsx_model_sheet_name']);

    $j = 0;
    while ($j < 10 && $context['sandbox']['progress'] < $context['sandbox']['max']) {
        $node = node_load($context['sandbox']['id'][$context['sandbox']['progress']]);
        $reason = '';
        
        if(isset($node->field_uwwbadperfdesign[LANGUAGE_NONE]) && $node->field_uwwbadperfdesign[LANGUAGE_NONE][0]['value'] == 1){
			$reason .= ($reason == '' ? '' : ' ') . "of bad performance";
		}

        if(isset($node->field_uwwaccidents[LANGUAGE_NONE]) && $node->field_uwwaccidents[LANGUAGE_NONE][0]['value'] == 1){
            $reason .= ($reason == '' ? '' : ' ') . "of major accident(s)";
		}

        if(isset($node->field_uwwbaddesign[LANGUAGE_NONE]) && $node->field_uwwbaddesign[LANGUAGE_NONE][0]['value'] == 1){
            $reason .= ($reason == '' ? '' : ' ') . "of bad design.";
		}

        if(isset($node->field_uwwinformation[LANGUAGE_NONE]) && $node->field_uwwinformation[LANGUAGE_NONE][0]['value'] != ""){
            $reason .= ($reason == '' ? '' : ' ') . "Further information on cause of failure: ".$node->field_uwwinformation[LANGUAGE_NONE][0]['value'];
		}

		if($reason != ''){
			$reason = 'Because' . $reason;
		}
		
        $listAgglo = array();
        $listAgglo['id'] = array();
        $listAgglo['name'] = array();
        foreach($node->field_linked_agglomerations['und'] as $nidagg) {
            $agg = node_load($nidagg['nid']);
            $listAgglo['id'][] = $agg->field_inspireidlocalid['und'][0]['value'];
            $listAgglo['name'][] = $agg->title;
            unset($agg);            
        }
           
        $sheet->setCellValueByColumnAndRow(1, $context['sandbox']['line'], $node->field_inspireidlocalid['und'][0]['value']);
        $sheet->setCellValueByColumnAndRow(2, $context['sandbox']['line'], $node->title);
        $sheet->setCellValueByColumnAndRow(3, $context['sandbox']['line'], implode(', ', $listAgglo['id']));
        $sheet->setCellValueByColumnAndRow(4, $context['sandbox']['line'], implode(', ', $listAgglo['name']));
        $sheet->setCellValueByColumnAndRow(5, $context['sandbox']['line'], $GLOBALS['uwwtd']['all_compliance'][$node->field_uwwcompliance[LANGUAGE_NONE][0]['value']]);
        $sheet->setCellValueByColumnAndRow(6, $context['sandbox']['line'], $reason);
   
        $context['sandbox']['progress']++;
        $context['sandbox']['line']++;
        $j++;
        unset($node);
    } 

    //write
    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $GLOBALS['uwwtd']['sheet_art17']['target_type']);
    $objWriter->setPreCalculateFormulas(false);
    //$objWriter->setOffice2003Compatibility(true);
    $objWriter->save(drupal_realpath($target_path));
    unset($objWriter);
    unset($objReader);
 
    $context['message'] = '(' .$annee . ') ' . t('article 17 file uwwtp ' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);    
    
    if ($context['sandbox']['progress'] < $context['sandbox']['max']) {
        $context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
    }  
}

function uwwtd_art17_create_art17_2015_investmentsjobs($annee, &$context)
{
	if (!isset($context['sandbox']['progress'])) {
    
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['max'] = 1;
    }      
    
//     if ($context['sandbox']['progress'] == 0) {
        $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_model_file'] . $GLOBALS['uwwtd']['sheet_art17']['model'];
        $target_path = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['investmentsjobs']['xlsx_name'];    
//     } else {
//         $path_xlsx = $GLOBALS['uwwtd']['sheet_art17']['path_created_file'] . $GLOBALS['uwwtd']['sheet_art17']['investmentsjobs']['xlsx_name'];
//         $target_path = $path_xlsx;        
//     }
//     dsm($path_xlsx);
//     dsm($target_path);
//     $start_line = $context['sandbox']['line'];

    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
//     dsm($objReader);
    $objReader->setLoadSheetsOnly( array(
                                         $GLOBALS['uwwtd']['sheet_art17']['investmentsjobs']['xlsx_model_sheet_name'],
                                        ) );
    
//     dsm(drupal_realpath($path_xlsx));                                    
    $objPHPExcel = $objReader->load(drupal_realpath($path_xlsx));
        
    
    //write
    $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, $GLOBALS['uwwtd']['sheet_art17']['target_type']);
    $objWriter->setPreCalculateFormulas(false);
    //$objWriter->setOffice2003Compatibility(true);
    $objWriter->save(drupal_realpath($target_path));
    unset($objWriter);
    unset($objReader);
 
    $context['sandbox']['progress']++; 
    $context['message'] = '(' .$annee . ') ' . t('article 17 file basic information ' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);    
    
    $context['finished'] = 1;     
}

function uwwtd_art17_create_art17_2015_final_file($annee, &$context)
{
 	if (!isset($context['sandbox']['progress'])) {    
        $context['sandbox']['progress'] = 0;
        $context['sandbox']['max'] = 1;
    }
    
    $configsheet = $GLOBALS['uwwtd']['sheet_art17'];
    $listesheet = array(
                        'basic_information',
                        'uwwtp',  
                        'agglo',
                        'investmentsjobs',
                        );
    
    $finalPHPExcel = new PHPExcel();
    $sheetIndex = $finalPHPExcel->getIndex($finalPHPExcel->getSheetByName('Worksheet')); //default worksheet
    $finalPHPExcel->removeSheetByIndex($sheetIndex);    
    
    foreach($listesheet as $sheet) {
//         dsm($sheet);
        //load sheet         
        $sheet_path = $configsheet['path_created_file'] . $configsheet[$sheet]['xlsx_name'];
        if (!file_exists($sheet_path)) {
            continue;
        }
//         dsm($sheet_path);
    //     PHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_phpTemp);
//         PHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_sqlite);
        $objReader = PHPExcel_IOFactory::createReader($configsheet['model_type']);
        $objReader->setLoadSheetsOnly(array($configsheet[$sheet]['xlsx_model_sheet_name']));                                        
        $objPHPExcel = $objReader->load(drupal_realpath($sheet_path));     
//         $sheet = $objPHPExcel->getSheetByName($GLOBALS['uwwtd']['sheet'][$sheet]['xlsx_model_sheet_name']);
//         dsm(1);
        $finalPHPExcel->addExternalSheet(clone $objPHPExcel->getSheetByName($configsheet[$sheet]['xlsx_model_sheet_name']));
//         dsm(2);
        unset($objPHPExcel, $objReader);
    } 
    
    //write
    $objWriter = PHPExcel_IOFactory::createWriter($finalPHPExcel, $configsheet['target_type']);
    $objWriter->setPreCalculateFormulas(false);
    //$objWriter->setOffice2003Compatibility(true);
    $target_path = uwwtd_art17_get_export_path($annee);//$configsheet['path_created_file'] . $configsheet['final_art17'];
//     dsm($target_path);    
    $objWriter->save(drupal_realpath($target_path));
    unset($finalPHPExcel);
    unset($objWriter);  
    $context['sandbox']['progress']++;
 
    $context['message'] = '(' .$annee . ') ' . t('article17 finish');    
    
    $context['finished'] = 1;

    variable_set('art17_'.$annee, time());
    drupal_set_message('<a href="'.file_create_url($target_path).'">get the article17 prefilled file for year '.$annee.'</a>');
}

// function uwwtd_art17_sendfile($path)
// {
//     $basename = basename($path);
//     ini_set("auto_detect_line_endings", false); //for Mac user    
//     $aHeaders = array(
//           'Content-Type'        => 'application/octet-stream',   
//           'Content-Disposition' => 'attachment; filename="' . $basename . '"',
//           'Expires'             => '0',
//           'Cache-Control'       => 'must-revalidate',
//           'Pragma'              =>'public',
//           'Content-Length'      => filesize($path),
//       );            
//     foreach ($aHeaders as $sName => $sValue) {
//         drupal_add_http_header($sName, $sValue);
//     }
//     readfile($path); 
//     exit();     
// }

function uwwtd_art17_example_uwwtp($annee) {
	//Get all the treatment plan
	$query = db_select('node', 'n');
	$query->join('field_data_field_siteid', 'r', 'r.entity_id = n.nid');
	$uwwtps = $query
		->fields('n', array('nid', 'title'))
		->condition('n.type', 'uwwtp', '=')
		->condition('r.field_siteid_value', db_like($annee).'%', 'LIKE')
		->execute();
    $filename = tempnam('/tmp', 'uwwtp'); 
    $rFile = fopen($filename, 'wb');
    
    fputcsv($rFile, array(    
                'uwwCode: ID of UWWTP/ collecting system without treatment',
                'uwwName: Name of UWWTP/ collecting system without treatment',	
                'aggCode: ID of the agglomeration related to this UWWTP',
                'aggName: Name of the agglomeration related to this UWWTP',	
                'flatpStatus: Status of the UWWTP at the reference reporting year (Not compliant/Pending deadlines)',	
                'flatpreasons: Identified reason(s) for non compliance',	
                'flatpMeasures: Measure(s) to reach the compliance needed for UWWTP', 	
                'flatpExpload: Load entering the UWWTP at the expected date of compliance (as planned)',	
                'flatpExpCapacity: Organic design capacity UWWTP (as planned)',	
                'flatpExpecTreatment: Type of treatment UWWTP (as planned)',	
                'flatpExpecDateStart: Date or expected date of completion of preparatory measures (planning, design, etc)',	
                'flatpExpecDateStartWork: Date or expected start date for works',	
                'flatpExpecDateCompletion: Date or expected date of completion of works',	
                'flatpExpecDateperformance: Expected date of compliance (12 months of compliant samples)', 	
                'flatpInv: Forecast cost investment needed for the UWWTP (as in the national plan)',	
                'flatpEUfundname: Name of EU fund planned to be used  UWWTP (if any)',	
                'flatpEUfund: Amount of (planned) EU funding needed',	
                'flatpComments: Any relevant comment on UWWTP', 
				'flatpExploadtruck: Expected rate of entering load transported to this UWWTP by truck at the expected date of compliance', 				
				'Flatpotherfund: Amount of funds likely to be given  to complete the UWWTP (if any)', 
				'flatpotherfundname: Name of the entity planned to give fund to complete UWWTP (if any)', 
				'Flatploan: Amount of loan likely to be granted to complete the UWWTP (if any)', 
				'Flatploanname: Name of the entity planned to give loan to complete the UWWTP (if any)', 
				// 'Compliance', 
				// 'Load entering UWWTP (p.e.)', 
            ), ';');
 
	foreach($uwwtps as $uwwtp){
        $node = node_load($uwwtp->nid);
        $listAgglo = array();
		// dsm($node);
		if(isset($node->field_uwwbadperfdesign[LANGUAGE_NONE]) && $node->field_uwwbadperfdesign[LANGUAGE_NONE][0]['value'] == 0){
			$uwwBadPerformance = "";
		}else if(isset($node->field_uwwbadperfdesign[LANGUAGE_NONE]) && $node->field_uwwbadperfdesign[LANGUAGE_NONE][0]['value'] == 1){
			$uwwBadPerformance = "of bad performance";
		}
		if(isset($node->field_uwwaccidents[LANGUAGE_NONE]) && $node->field_uwwaccidents[LANGUAGE_NONE][0]['value'] == 0){
			$uwwAccidents = "";
		}else if(isset($node->field_uwwaccidents[LANGUAGE_NONE]) && $node->field_uwwaccidents[LANGUAGE_NONE][0]['value'] == 1){
			$uwwAccidents = "of major accident(s)";
		}
		if(isset($node->field_uwwbaddesign[LANGUAGE_NONE]) && $node->field_uwwbaddesign[LANGUAGE_NONE][0]['value'] == 0){
			$uwwBadDesign = "";
		}else if(isset($node->field_uwwbaddesign[LANGUAGE_NONE]) && $node->field_uwwbaddesign[LANGUAGE_NONE][0]['value'] == 1){
			$uwwBadDesign = "of bad design.";
		}
		if(isset($node->field_uwwinformation[LANGUAGE_NONE]) && $node->field_uwwinformation[LANGUAGE_NONE][0]['value'] == ""){
			$uwwInformation = "";
		}else if(isset($node->field_uwwinformation[LANGUAGE_NONE]) && $node->field_uwwinformation[LANGUAGE_NONE][0]['value'] != ""){
			$uwwInformation = "Further information on cause of failure: ".$node->field_uwwinformation[LANGUAGE_NONE][0]['value'];
		}
		if(($uwwBadPerformance == "")&&($uwwAccidents == "")&& ($uwwBadDesign == "") && ($uwwInformation == "")){
			$reason = "";
		}else{
			$reason = 'Because'.$uwwBadPerformance.' '.$uwwAccidents. ' '.$uwwBadDesign.' '.$uwwInformation;
		}
		
        foreach($node->field_linked_agglomerations['und'] as $nidagg) {
            $agg = node_load($nidagg['nid']);
            $listAgglo['id'][] = $agg->field_inspireidlocalid['und'][0]['value'];
            $listAgglo['name'][] = $agg->title;            
        }

        $uwwtpData[] = array(
            $node->field_inspireidlocalid['und'][0]['value'],
            $node->title,
            implode(', ', $listAgglo['id']),
            implode(', ', $listAgglo['name']),
            $node->field_uwwcompliance[LANGUAGE_NONE][0]['value'],
            $reason,
            '', 	
			'',	
			'',	
			'',	
			'',	
			'',	
			'',	
			'', 	
			'',	
			'',	
			'',	
			'', 
			'', 				
			'', 
			'', 
			'', 
			'', 
			'', 
			$node->field_uwwloadenteringuwwtp[LANGUAGE_NONE][0]['value'],    
        );
    
        unset($node);
		
	}

	function trieUwwtp($uwwtpData, $b){
        $aggKey = array('NC'=> 0, 'PD'=>1, 'NR'=>2, 'NI'=>3, 'C'=>4,  );
		if($uwwtpData[4] == $b[4]){
			if($uwwtpData[24] == $b[24]){
				return 0;
			}elseif($uwwtpData[24] > $b[24]){
				return -1;
			}else{
				return 1;
			}
		}elseif($aggKey[$uwwtpData[4]] > $aggKey[$b[4]]){
			return 1;
		}else{
			return -1;
		}
	}
	usort($uwwtpData, "trieUwwtp");

	foreach($uwwtpData as $key => $val){
		unset($val[23]);
		unset($val[24]);
		if($val[4] == "NR"){
			$val[4] = "Not Relevant";
		}elseif($val[4] == "NC"){
			$val[4] = "Not Compliant";
		}elseif($val[4] == "C"){
			$val[4] = "Compliant";
		}elseif($val[4] == "NI"){
			$val[4] = "No Information";
		}elseif($val[4] == "PD"){
			$val[4] = "Pending deadlines";
		}
		fputcsv($rFile, $val, ';');
	}

    fclose($rFile);
    
    ini_set("auto_detect_line_endings", false); //for Mac user    
    $aHeaders = array(
          'Content-Type'        => 'application/octet-stream', 
          'Content-Disposition' => 'attachment; filename="uwwtp_art17_example_'.$annee.'.csv' . '"',
          'Expires'             => '0',
          'Cache-Control'       => 'must-revalidate',
          'Pragma'              =>'public',
          'Content-Length'      => filesize($filename),
      );            
    foreach ($aHeaders as $sName => $sValue) {
        drupal_add_http_header($sName, $sValue);
    }
    readfile($filename); 
    unlink($filename);
    exit();  
}
################################ DATA INPUT ################################
function uwwtd_art17_import_form($form, &$form_state){

//     dsm(__FUNCTION__);
	if(!isset($_SESSION['uwwtd_annee'])){
		drupal_goto('data/article17');
	}
	else{
		// le calcul consiste à vérifier la formule suivante pour toutes les agglos de >2000 pe:
		// field_agggenerated_value> 2000

		$totalAgg = 0;
		$NbtotalAgg = 0;
		$totalAggNC = 0;
		$NbAggNC = 0;
		
		$queryAggGene = "SELECT entity_id, field_agggenerated_value
		FROM drupal_field_data_field_agggenerated 
		WHERE field_agggenerated_value> 2000";
		
		$resultAggGene = db_query($queryAggGene);
		$recordAggGene = $resultAggGene->fetchAll();
		
		foreach($recordAggGene as $totalAggGene){
			$totalAgg = ($totalAggGene->field_agggenerated_value) + $totalAgg;
			$NbtotalAgg = $NbtotalAgg +1;			
		}
        
		// dsm($totalAgg);
		// dsm($NbtotalAgg);
		$queryAggComp = "SELECT aggGene.entity_id, aggGene.field_agggenerated_value, aggCompl.field_aggcompliance_value
		FROM drupal_field_data_field_agggenerated aggGene
		INNER JOIN drupal_field_data_field_aggcompliance aggCompl
		ON aggGene.entity_id = aggCompl.entity_id
		WHERE field_agggenerated_value> 2000
		AND aggCompl.field_aggcompliance_value = 'NC'";
		
		$resultAggComp = db_query($queryAggComp);
		$recordAggComp = $resultAggComp->fetchAll();
		foreach($recordAggComp as $totalAggCom){
			$totalAggNC = ($totalAggCom->field_agggenerated_value) + $totalAggNC;
			$NbAggNC = $NbAggNC +1;
		}
		// dsm($totalAggNC);
		// dsm($NbAggNC);
		$peAggGene = 100 * $totalAggNC / $totalAgg;
		$nbAgg = 100 * $NbAggNC / $NbtotalAgg;
		// dsm($peAggGene);
		// dsm($nbAgg);
		// SI(((totalAgg -  totalAggNC)>=97% ou (NbtotalAgg - NbAggNC)>=97%)); "optional"; "mandatory")
		// 2 017 458 - 132 618 = 1 884 840   OU 182 - 8 
		// 100* 132 618/ 2 017 458 = 6.57%   OU  100* 8 /182 = 4.39%
		
		if($peAggGene >= 97 || $nbAgg >=97){
			$article17 = "optional";
		}else{
			$article17 = "mandatory";
		}

		global $base_url;
		$site_url = $base_url.'/';

		// Definition des variables pour le formulaire
		$annee = $_SESSION['uwwtd_annee'];
		
//         <li><a  href="'.base_path().'data/article17/agglomeration/'.$_SESSION['uwwtd_annee'].'">'.t('Agglomerations article 17 pre-generate csv').' ('.$article17.')</a></li>
//             <li><a  href="'.base_path().'data/article17/uwwtp/'.$_SESSION['uwwtd_annee'].'">'.t('Uwwtps article 17 pre-generate csv').' ('.$article17.')</a></li>
            
		$form['uwwtd_text'] = array(
			'#markup' => '<h4>'.t('Article 17 import for the year').' : '.$annee.'</h4><br><p>'.t('Your CSV file must be correctly formatted using \' ; \' as the cell separator and \' " \' as the text separator. The file must be encoded in UTF-8 to ensure character readability.').'</p>'
			.'<p>'.t('To help help you having to make your own files we have created for you a file for both the agglomerations and the treatment plants:')
			.'</p><ul> 
            
            <li><a  href="'.base_path().'data/article17/export/'.$_SESSION['uwwtd_annee'].'">'.t('Article 17 pre-filled file').' ('.$article17.')</a></li>
            
            </ul><br>'
		);
		
		// definition du champ input de type file
		$form['uwwtd_file'] = array(
			'#type' => 'managed_file',
			'#title' => t('Data file'),
// 			'#upload_validators' => array('file_validate_extensions' => array('csv')),
            '#upload_validators' => array('file_validate_extensions' => array('xlsx')),
			'#required' => TRUE,
		);
		
		// Bouton envoyer
		$form['submit_button'] = array(
			'#type' => 'submit',
			'#value' => t('Submit'),
		);
		
		// Fonction a appeller quand on clique sur envoyer
		$form['#submit'][] = 'uwwtd_art17_import_submit_handler_xlsx';
		return $form;
	}
}

// function uwwtd_art17_import_submit_handler_csv($form, &$form_state) {
// 	
// 	// Definition et recup des variables
// 	if(isset($_SESSION['uwwtd_errors'])) unset($_SESSION['uwwtd_errors']);
// 	if(isset($_SESSION['uwwtd_warnings'])) unset($_SESSION['uwwtd_warnings']);
// 	$annee = $_SESSION['uwwtd_annee'];
// 	$file = file_load($form_state['values']['uwwtd_file']);
// 	$uri = $file->uri;
// 	
// 	// On upload le file et la fonction renvoie le nouveau nom du fichier
// 	$newFile = uwwtd_file_upload($file, '.csv'); 
// 	
// 	$datas = uwwtd_csv_to_array($uri, ';');
// 	//$datas = uwwtd_xml_to_array($uri);
// 	
// 	uwwtd_art17_setup_batch($newFile, $annee, $datas);	
// }

function uwwtd_art17_import_submit_handler_xlsx($form, &$form_state) {
	
//     dsm(__FUNCTION__);
	// Definition et recup des variables
	if(isset($_SESSION['uwwtd_errors'])) unset($_SESSION['uwwtd_errors']);
	if(isset($_SESSION['uwwtd_warnings'])) unset($_SESSION['uwwtd_warnings']);
	$annee = $_SESSION['uwwtd_annee'];
	$file = file_load($form_state['values']['uwwtd_file']);
	$uri = $file->uri;
	
	// On upload le file et la fonction renvoie le nouveau nom du fichier
	$newFile = uwwtd_file_upload($file, '.xlsx'); 
	
// 	$datas = uwwtd_csv_to_array($uri, ';');
	//$datas = uwwtd_xml_to_array($uri);
	
	uwwtd_art17_setup_batch_xlsx($newFile, $annee);	
}

// function uwwtd_art17_setup_batch($newFile, $annee, $datas){
// 	$batch = array(
// 		'title' => t('Data import'),
// 		'operations' => array(
// 			array('uwwtd_art17_import_article17_process', array($newFile, $annee, $datas))
// 		),
// 		'error_message' => t('Error!'),
// 		'finished' => 'uwwtd_art17_import_finished',
// 		'file' => drupal_get_path('module','uwwtd').'/inc/data_center.inc'
// 	);
// 
// 	batch_set($batch);
// 	batch_process('data/article17/import');
// }

function uwwtd_art17_setup_batch_xlsx($newFile, $annee){
//     dsm(__FUNCTION__);
	unset($_SESSION['uwwtd_error']);
	unset($_SESSION['uwwtd_warnings']);
       
	$batch = array(
		'title' => t('Data import'),
		'operations' => array(
            array('uwwtd_delete_error', array($annee, 'article17')),    
			array('uwwtd_art17_import_article17_uwwtp', array($newFile, $annee)),
            array('uwwtd_art17_import_article17_agglo', array($newFile, $annee)),
		),     
		'error_message' => t('Error!'),
		'finished' => 'uwwtd_art17_import_finished',
		'file' => drupal_get_path('module','uwwtd').'/inc/data_center.inc'
	);

	batch_set($batch);
	batch_process('data/article17/import');
}

/**
 *
 */ 
function uwwtd_art17_import_article17_uwwtp($newFile, $annee, &$context)
{
//     dsm(__FUNCTION__);
	$GLOBALS['uwwtd_errors'] = array();
	$timestamp= time();
// 	unset($_SESSION['uwwtd_error']);
// 	unset($_SESSION['uwwtd_warnings']);
	$e = 0;
    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
    $filename = drupal_realpath('public://data_sources/' .$newFile->filename);
	if (!isset($context['sandbox']['progress'])) {
		$context['sandbox']['progress'] = 0;
//         dsm($filename);
        $context['sandbox']['list_worksheet'] = $objReader->listWorksheetNames($filename);
        $context['sandbox']['sheetname'] = $context['sandbox']['list_worksheet'][ $GLOBALS['uwwtd']['sheet_art17']['uwwtp']['sheet_index'] ];
//         dsm($sheetname);
        $objReader->setLoadSheetsOnly(array($context['sandbox']['sheetname']));
        $objPHPExcel = $objReader->load($filename); 
        $sheet = $objPHPExcel->getSheetByName($context['sandbox']['sheetname']);         
        $context['sandbox']['max'] = $sheet->getHighestRow();         
	} else {
        $objReader->setLoadSheetsOnly(array($context['sandbox']['sheetname']));
        //TODO load only the 10 row we need for this loop (check doc phpexcel)
        $objPHPExcel = $objReader->load($filename);
        $sheet = $objPHPExcel->getSheetByName($context['sandbox']['sheetname']);          
    }
//     dsm($context);
//     $i = $context['sandbox']['progress'];

    $line = 3 + $context['sandbox']['progress'];
    $j = 0;
    while ($j < 10 && $context['sandbox']['progress'] < $context['sandbox']['max'])
    {   
		$field_art17uwwtp_uwwcode = $sheet->getCellByColumnAndRow(1,$line)->getValue();
		$field_art17uwwtp_uwwname = $sheet->getCellByColumnAndRow(2,$line)->getValue();
		$field_art17uwwtp_aggcode = $sheet->getCellByColumnAndRow(3,$line)->getValue();
		$field_art17uwwtp_aggname = $sheet->getCellByColumnAndRow(4,$line)->getValue();
		$field_art17_flatpstatus = $sheet->getCellByColumnAndRow(5,$line)->getValue();
		$field_art17_flatpreasons = $sheet->getCellByColumnAndRow(6,$line)->getValue();
		$field_art17_flatpmeasures = $sheet->getCellByColumnAndRow(7,$line)->getValue();
		$field_art17_flatpexpload = $sheet->getCellByColumnAndRow(8,$line)->getValue();
		$field_art17_flatpexpcapacity = $sheet->getCellByColumnAndRow(9,$line)->getValue();
		$field_art17_flatptexpectreatment = $sheet->getCellByColumnAndRow(10,$line)->getValue();
        
        $field_art17_flatpexpecdatestart = $sheet->getCellByColumnAndRow(11,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(11,$line))) {
             $field_art17_flatpexpecdatestart = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flatpexpecdatestart)); 
        }
        
		$field_art17_flatpexpecdatestartw = $sheet->getCellByColumnAndRow(12,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(12,$line))) {
             $field_art17_flatpexpecdatestartw = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flatpexpecdatestartw)); 
        }
                
		$field_art17_flatpexpecdatecomple = $sheet->getCellByColumnAndRow(13,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(13,$line))) {
             $field_art17_flatpexpecdatecomple = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flatpexpecdatecomple)); 
        }
                 
		$field_art17_flatpexpecdateperfor = $sheet->getCellByColumnAndRow(14,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(14,$line))) {
             $field_art17_flatpexpecdateperfor = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flatpexpecdateperfor)); 
        }
                
		$field_art17_flatpinv = $sheet->getCellByColumnAndRow(15,$line)->getValue();
		$field_art17_flatpeufundname = $sheet->getCellByColumnAndRow(16,$line)->getValue();
		$field_art17_flatpeufund = $sheet->getCellByColumnAndRow(17,$line)->getValue();
		$field_art17_flatpcomments = $sheet->getCellByColumnAndRow(18,$line)->getValue();
		$field_art17_flatpexploadtruck = $sheet->getCellByColumnAndRow(19,$line)->getValue();
		$field_art17_flatpotherfund = $sheet->getCellByColumnAndRow(20,$line)->getValue();
		$field_art17_flatpotherfundname = $sheet->getCellByColumnAndRow(21,$line)->getValue();
		$field_art17_flatploan = $sheet->getCellByColumnAndRow(22,$line)->getValue();
        $field_art17_flatploanname = $sheet->getCellByColumnAndRow(23,$line)->getValue(); 
        
          
    
        //if empty line do nothing
        if (empty($field_art17uwwtp_uwwcode )&&
            empty($field_art17uwwtp_uwwname )&&
            empty($field_art17uwwtp_aggcode )&&
            empty($field_art17uwwtp_aggname )&&
            empty($field_art17_flatpstatus )&&
            empty($field_art17_flatpreasons )&&
            empty($field_art17_flatpmeasures )&&
            empty($field_art17_flatpexpload )&&
            empty($field_art17_flatpexpcapacity )&&
            empty($field_art17_flatptexpectreatment )&&
            empty($field_art17_flatpexpecdatestart )&&
            empty($field_art17_flatpexpecdatestartw )&&
            empty($field_art17_flatpexpecdatecomple )&&
            empty($field_art17_flatpexpecdateperfor )&&
            empty($field_art17_flatpinv )&&
            empty($field_art17_flatpeufundname )&&
            empty($field_art17_flatpeufund )&&
            empty($field_art17_flatpcomments )&&
            empty($field_art17_flatpexploadtruck )&&
            empty($field_art17_flatpotherfund )&&
            empty($field_art17_flatpotherfundname )&&
            empty($field_art17_flatploan )&&
            empty($field_art17_flatploanname )) { 
                $j++;
                $line++;
                $context['sandbox']['progress']++;        
                continue;
        }
        
// dsm($field_art17uwwtp_uwwcode );
// dsm($field_art17uwwtp_uwwname );
// dsm($field_art17uwwtp_aggcode );
// dsm($field_art17uwwtp_aggname );
// dsm($field_art17_flatpstatus );
// dsm($field_art17_flatpreasons );
// dsm($field_art17_flatpmeasures );
// dsm($field_art17_flatpexpload );
// dsm($field_art17_flatpexpcapacity );
// dsm($field_art17_flatptexpectreatment );
// dsm($field_art17_flatpexpecdatestart );
// dsm($field_art17_flatpexpecdatestartw );
// dsm($field_art17_flatpexpecdatecomple );
// dsm($field_art17_flatpexpecdateperfor );
// dsm($field_art17_flatpinv );
// dsm($field_art17_flatpeufundname );
// dsm($field_art17_flatpeufund );
// dsm($field_art17_flatpcomments );
// dsm($field_art17_flatpexploadtruck );
// dsm($field_art17_flatpotherfund );
// dsm($field_art17_flatpotherfundname );
// dsm($field_art17_flatploan );
// dsm($field_art17_flatploanname );        
    
		// article 17 Station
		if(empty($field_art17uwwtp_uwwcode)){
			$e = 1;
			$emes = t('The data you are trying to add for the "uwwCode" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17uwwtp_uwwname)){
			$e = 1;
			$emes = t('The data you are trying to add for the "uwwName" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17uwwtp_aggcode)){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggCode" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17uwwtp_aggname)){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggName" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpstatus)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpStatus" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpreasons)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpreasons" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpmeasures)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpMeasures" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpload)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpload" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpcapacity)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpCapacity" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatptexpectreatment)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecTreatment" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpecdatestart)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateStart" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpecdatestartw)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateStartWork" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpecdatecomple)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateCompletion" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpexpecdateperfor)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateperformance" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpinv)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpInv" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpeufundname)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpEUfundname" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flatpeufund)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpEUfund" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}

    	// Check if no errors were found
    	if($e == 0){
    
    		// Variables
//     		$uri = $newFile->uri;
//     		$filename = $newFile->filename;
//     		$filename .= ".csv";
//     		$fid = $newFile->fid;
  			$siteId = $annee.'_uww_'.uwwtd_check_text($field_art17uwwtp_uwwcode);

    		// Check if id exists
    		$exists = uwwtd_check_exist($siteId);
    		// If the element exists
    		if($exists != false){
    			// load the exisiting element
    			$element = node_load($exists);
    			$art17_title = $element->field_siteid['und'][0]['value'] .' - Article 17 data '.$annee;
    			// dsm($element);

				if(isset($element->field_article17_uwwtp['und'][0]['nid']) && ($element->field_article17_uwwtp['und'][0]['nid']!= "" || $element->field_article17_uwwtp['und'][0]['nid']!= NULL)){
					$art = node_load($element->field_article17_uwwtp['und'][0]['nid']);
				}else{
					// Create new article 17 node
					$art = new StdClass();
					$art->type = 'article_17_uwwtp';
					$art->title = $art17_title;
				}
			
				// Article 17 mapping for UWWTP
				$art->field_art17uwwtp_uwwcode['und'][0]['value'] = $field_art17uwwtp_uwwcode;
				$art->field_art17uwwtp_uwwname['und'][0]['value'] = $field_art17uwwtp_uwwname;
				$art->field_art17uwwtp_aggcode['und'][0]['value'] = $field_art17uwwtp_aggcode;
				$art->field_art17uwwtp_aggname['und'][0]['value'] = $field_art17uwwtp_aggname;
				$art->field_art17_flatpstatus['und'][0]['value'] = $field_art17_flatpstatus;
				$art->field_art17_flatpreasons['und'][0]['value'] = $field_art17_flatpreasons;
				$art->field_art17_flatpmeasures['und'][0]['value'] = $field_art17_flatpmeasures ;
                
                $check = uwwtd_check_numeric($field_art17_flatpexpload );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                } else { 
				    $art->field_art17_flatpexpload['und'][0]['value'] = $check;
                }
                
                $check = uwwtd_check_numeric($field_art17_flatpexpcapacity );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                } else {                 
				    $art->field_art17_flatpexpcapacity['und'][0]['value'] = $check;
				}
                
                $art->field_art17_flatptexpectreatment['und'][0]['value'] = $field_art17_flatptexpectreatment;
                
                $check = uwwtd_check_date($field_art17_flatpexpecdatestart, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                
				    $art->field_art17_flatpexpecdatestart['und'][0]['value'] = $check;
                }
                
                $check = uwwtd_check_date($field_art17_flatpexpecdatestartw, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
				    $art->field_art17_flatpexpecdatestartw['und'][0]['value'] = $check;
                }
                
                $check = uwwtd_check_date($field_art17_flatpexpecdatecomple, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
				    $art->field_art17_flatpexpecdatecomple['und'][0]['value'] = $check;
                }
                
                $check = uwwtd_check_date($field_art17_flatpexpecdateperfor, $message  );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
				    $art->field_art17_flatpexpecdateperfor['und'][0]['value'] = $check;
                }
                
                $check = uwwtd_check_numeric($field_art17_flatpinv );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);                       
                } else {                 
				    $art->field_art17_flatpinv['und'][0]['value'] = $check;
                }
				$art->field_art17_flatpeufundname['und'][0]['value'] = $field_art17_flatpeufundname;
                
                $check = uwwtd_check_numeric($field_art17_flatpeufund);
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                } else {                
				    $art->field_art17_flatpeufund['und'][0]['value'] = $check;
                }
                ///////////////////////////////////////////
                //optional  
                ///////////////////////////////////////////              
				if(!empty($field_art17_flatpcomments)) $art->field_art17_flatpcomments['und'][0]['value'] = $field_art17_flatpcomments ;
                ///////////////////////////////////////////
                if(!empty($field_art17_flatpexploadtruck)) {
                    $check = uwwtd_check_decimal($field_art17_flatpexploadtruck);
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['decimal_error'], $timestamp, $line);    
                    } else {                 
    				    $art->field_art17_flatpexploadtruck['und'][0]['value'] = $check;
                    }
                }
                ///////////////////////////////////////////
                if(!empty($field_art17_flatpotherfund)) {
                    $check = uwwtd_check_numeric($field_art17_flatpotherfund);
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                    } else {                
    				    $art->field_art17_flatpotherfund['und'][0]['value'] = $check;
                    }
                }
                /////////////////////////////////////////// 
				if(!empty($field_art17_flatpotherfundname )) $art->field_art17_flatpotherfundname['und'][0]['value'] = $field_art17_flatpotherfundname ;
                ///////////////////////////////////////////
                if(!empty($field_art17_flatploan )) {
                    $check = uwwtd_check_numeric($field_art17_flatploan );
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                    } else {                
    				    $art->field_art17_flatploan['und'][0]['value'] = $check;
                    }
                }
                ///////////////////////////////////////////
				if(!empty($field_art17_flatploanname )) $art->field_art17_flatploanname['und'][0]['value'] = $field_art17_flatploanname ;
                ///////////////////////////////////////////
                				
                $art->field_anneedata['und'][0]['value'] = $annee;
				$art->uid = 1;
				$art->language = $element->language;
				// Article 17 link to element
				$art->field_art17uwwtp_link_uwwtp['und'][0]['nid'] = $element->nid;
    			
    			// Save the article 17 element
    			node_save($art);
    			
    			// Link element tot Article 17
    			$element->field_article17_uwwtp['und'][0]['nid'] = $art->nid;
    			// Save the element
    			node_save($element);
    		}
    		else{
    			$emes = t('WARNING : the element at index').': '.$line.' '.t('does not correspond to any identifier in the database.');
    			uwwtd_set_warning($line, $emes);
    
    		}
    	}
        $j++;
        $line++;
        $context['sandbox']['progress']++;
    }
	uwwtd_flush_errors();
	
	$context['message'] = '(' .$annee . ') ' . t('Processing Article 17 uwwtp ...' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);
	
	if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
		$context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
	}
}

/**
 *
 */
function uwwtd_art17_import_article17_agglo($newFile, $annee, &$context)
{
//     dsm(__FUNCTION__);
	$GLOBALS['uwwtd_errors'] = array();
	$timestamp= time();

	$e = 0;
    $objReader = PHPExcel_IOFactory::createReader($GLOBALS['uwwtd']['sheet_art17']['model_type']);
    $filename = drupal_realpath('public://data_sources/' .$newFile->filename);
	if (!isset($context['sandbox']['progress'])) {
		$context['sandbox']['progress'] = 0;
//         dsm($filename);
        $context['sandbox']['list_worksheet'] = $objReader->listWorksheetNames($filename);
        $context['sandbox']['sheetname'] = $context['sandbox']['list_worksheet'][ $GLOBALS['uwwtd']['sheet_art17']['agglo']['sheet_index'] ];
//         dsm($sheetname);
        $objReader->setLoadSheetsOnly(array($context['sandbox']['sheetname']));
        $objPHPExcel = $objReader->load($filename); 
        $sheet = $objPHPExcel->getSheetByName($context['sandbox']['sheetname']);         
        $context['sandbox']['max'] = $sheet->getHighestRow(); //todo check if we take the last line or + 1        
	} else {
        $objReader->setLoadSheetsOnly(array($context['sandbox']['sheetname']));
        $objPHPExcel = $objReader->load($filename);
        $sheet = $objPHPExcel->getSheetByName($context['sandbox']['sheetname']);          
    }
//     dsm($context);
//     $i = $context['sandbox']['progress'];
    $line = 3 + $context['sandbox']['progress'];
    $j = 0;
    while ($j < 10 && $context['sandbox']['progress'] < $context['sandbox']['max'])
    {   
        $field_art17agg_aggcode = $sheet->getCellByColumnAndRow(1,$line)->getValue();
        $field_art17agg_aggname = $sheet->getCellByColumnAndRow(2,$line)->getValue();
        $field_art17_flaggstatus = $sheet->getCellByColumnAndRow(3,$line)->getValue();
        $field_art17_flaggreasons = $sheet->getCellByColumnAndRow(4,$line)->getValue();
        $field_art17_flaggmeasures = $sheet->getCellByColumnAndRow(5,$line)->getValue();
        
        $field_art17_flaggexpecdatestart = $sheet->getCellByColumnAndRow(6,$line)->getValue();        		
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(6,$line))) {
             $field_art17_flaggexpecdatestart = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flaggexpecdatestart)); 
        } 
        
        $field_art17_flaggexpecdatestartw = $sheet->getCellByColumnAndRow(7,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(7,$line))) {
             $field_art17_flaggexpecdatestartw = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flaggexpecdatestartw)); 
        } 
                
        $field_art17_flaggexpecdatecomple = $sheet->getCellByColumnAndRow(8,$line)->getValue();
        if (PHPExcel_Shared_Date::isDateTime($sheet->getCellByColumnAndRow(8,$line))) {
             $field_art17_flaggexpecdatecomple = date('Y-m-d', PHPExcel_Shared_Date::ExcelToPHP($field_art17_flaggexpecdatecomple)); 
        } 
                
        $field_art17_flagginv = $sheet->getCellByColumnAndRow(9,$line)->getValue();
        $field_art17_flaggeufundname = $sheet->getCellByColumnAndRow(10,$line)->getValue();
        $field_art17_flaggeufund = $sheet->getCellByColumnAndRow(11,$line)->getValue();
        $field_art17_flaggcomments = $sheet->getCellByColumnAndRow(12,$line)->getValue();
        //optional
        $field_art17_flaggexpload = $sheet->getCellByColumnAndRow(13,$line)->getValue();
        $field_art17_flaggexploadcoll = $sheet->getCellByColumnAndRow(14,$line)->getValue();
        $field_art17_flaggexploadias = $sheet->getCellByColumnAndRow(15,$line)->getValue();
        $field_art17_flaggotherfund = $sheet->getCellByColumnAndRow(16,$line)->getValue();
        $field_art17_flaggotherfundname = $sheet->getCellByColumnAndRow(17,$line)->getValue();
        $field_art17_flaggloan = $sheet->getCellByColumnAndRow(18,$line)->getValue();
        $field_art17_flaggloanname = $sheet->getCellByColumnAndRow(19,$line)->getValue();
    
        if (empty($field_art17agg_aggcode ) &&
            empty($field_art17agg_aggname ) &&
            empty($field_art17_flaggstatus ) &&
            empty($field_art17_flaggreasons ) &&
            empty($field_art17_flaggmeasures ) &&
            empty($field_art17_flaggexpecdatestart ) &&
            empty($field_art17_flaggexpecdatestartw ) &&
            empty($field_art17_flaggexpecdatecomple ) &&
            empty($field_art17_flagginv ) &&
            empty($field_art17_flaggeufundname ) &&
            empty($field_art17_flaggeufund ) &&
            empty($field_art17_flaggcomments ) &&
            empty($field_art17_flaggexpload ) &&
            empty($field_art17_flaggexploadcoll ) &&
            empty($field_art17_flaggexploadias ) &&
            empty($field_art17_flaggotherfund ) &&
            empty($field_art17_flaggotherfundname ) &&
            empty($field_art17_flaggloan ) &&
            empty($field_art17_flaggloanname )
            ) { 
                $j++;
                $line++;
                $context['sandbox']['progress']++;        
                continue;
        }  
        
// dsm($field_art17agg_aggcode );
// dsm($field_art17agg_aggname );
// dsm($field_art17_flaggstatus );
// dsm($field_art17_flaggreasons );
// dsm($field_art17_flaggmeasures );
// dsm($field_art17_flaggexpecdatestart );
// dsm($field_art17_flaggexpecdatestartw );
// dsm($field_art17_flaggexpecdatecomple );
// dsm($field_art17_flagginv );
// dsm($field_art17_flaggeufundname );
// dsm($field_art17_flaggeufund );
// dsm($field_art17_flaggcomments );
// dsm($field_art17_flaggexpload );
// dsm($field_art17_flaggexploadcoll );
// dsm($field_art17_flaggexploadias );
// dsm($field_art17_flaggotherfund );
// dsm($field_art17_flaggotherfundname );
// dsm($field_art17_flaggloan );
// dsm($field_art17_flaggloanname );          
    
// dsm($field_art17uwwtp_uwwcode );
		if(empty($field_art17agg_aggcode)){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggCode" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17agg_aggname)){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggName" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggstatus)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggStatus" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggreasons)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggreasons" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggmeasures)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggMeasures" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggexpecdatestart)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateStart" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggexpecdatestartw)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateStartWork" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggexpecdatecomple)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateCompletion" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flagginv)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggInv" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggeufundname)){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggEUfundname" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}
		if(empty($field_art17_flaggeufund)){
			$e = 1;
			$emes = t('The data you are trying to add for the "FlaggEUfund" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($line, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 input'], $emes, $timestamp);
		}

    	if($e == 0) {    
            $siteId = $annee.'_agg_'.uwwtd_check_text($field_art17agg_aggcode);

    		// Check if id exists
    		$exists = uwwtd_check_exist($siteId);
    		// If the element exists
    		if($exists != false){
    			// load the exisiting element
    			$element = node_load($exists);
    			$art17_title = $element->field_siteid['und'][0]['value'] .' - Article 17 data '.$annee;
    			
				if(isset($element->field_article17_agglo['und'][0]['nid']) && $element->field_article17_agglo['und'][0]['nid']!= ""){
					$art = node_load($element->field_article17_agglo['und'][0]['nid']);
				}else{
					// Create new article 17 node
					$art = new StdClass();
					$art->type = 'article_17_agglomeration';
					$art->title = $art17_title;
				}
			
				// Article 17 mapping for UWWTP
				$art->field_art17agg_aggcode['und'][0]['value'] = $field_art17agg_aggcode;
				$art->field_art17agg_aggname['und'][0]['value'] = $field_art17agg_aggname;
				$art->field_art17_flaggstatus['und'][0]['value'] = $field_art17_flaggstatus;
				$art->field_art17_flaggreasons['und'][0]['value'] = $field_art17_flaggreasons;
				$art->field_art17_flaggmeasures['und'][0]['value'] = $field_art17_flaggmeasures;
				////////
                $check = uwwtd_check_date($field_art17_flaggexpecdatestart, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
                    $art->field_art17_flaggexpecdatestart['und'][0]['value'] = $check;
				}
                ////////
                $check = uwwtd_check_date($field_art17_flaggexpecdatestartw, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
                    $art->field_art17_flaggexpecdatestartw['und'][0]['value'] = $check;
				}
                ////////
                $check = uwwtd_check_date($field_art17_flaggexpecdatecomple, $message );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $message, $timestamp, $line);    
                } else {                 
                    $art->field_art17_flaggexpecdatecomple['und'][0]['value'] = $check;
				}
                ////////
                $check = uwwtd_check_decimal($field_art17_flagginv);
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['decimal_error'], $timestamp, $line);    
                } else {                  
                    $art->field_art17_flagginv['und'][0]['value'] = $check;
				}
                ////////
                $art->field_art17_flaggeufundname['und'][0]['value'] = $field_art17_flaggeufundname;
				////////
                $check = uwwtd_check_numeric($field_art17_flaggeufund );
                if ($check === false) {
                    uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                } else {                
                    $art->field_art17_flaggeufund['und'][0]['value'] = $check;
                }
                /////////////////////////////////////////////
                //optionnal
                /////////////////////////////////////////////
				if(!empty($field_art17_flaggcomments)) $art->field_art17_flaggcomments['und'][0]['value'] = $field_art17_flaggcomments;
                ////////
                if(!empty($field_art17_flaggexpload)) {
                    $check = uwwtd_check_numeric($field_art17_flaggexpload );
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                    } else {                
    				    $art->field_art17_flaggexpload['und'][0]['value'] = $check;
                    }
                }
				////////
                if(!empty($field_art17_flaggexploadcoll)) {
                    $check = uwwtd_check_decimal($field_art17_flaggexploadcoll);
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['decimal_error'], $timestamp, $line);    
                    } else {                  
                        $art->field_art17_flaggexploadcoll['und'][0]['value'] = $check;
                    }
                }
				////////
                if(!empty($field_art17_flaggexploadias)) {
                    $check = uwwtd_check_decimal($field_art17_flaggexploadias);
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['decimal_error'], $timestamp, $line);    
                    } else {                  
                        $art->field_art17_flaggexploadias['und'][0]['value'] = $check;
                    }
                }
				////////
                if(!empty($field_art17_flaggotherfund)) { 
                    $check = uwwtd_check_numeric($field_art17_flaggotherfund );
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                    } else {                
                        $art->field_art17_flaggotherfund['und'][0]['value'] = $check;
                    }
                }
				////////
                if(!empty($field_art17_flaggotherfundname)) $art->field_art17_flaggotherfundname['und'][0]['value'] = $field_art17_flaggotherfundname;
				////////
                if(!empty($field_art17_flaggloan)) {
                    $check = uwwtd_check_numeric($field_art17_flaggloan );
                    if ($check === false) {
                        uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['error'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $GLOBALS['uwwtd']['message']['numeric_error'], $timestamp, $line);    
                    } else {                
                        $art->field_art17_flaggloan['und'][0]['value'] = $check;
                    }
                }
				////////
                if(!empty($field_art17_flaggloanname)) $art->field_art17_flaggloanname['und'][0]['value'] = $field_art17_flaggloanname;
				////////                
                $art->field_anneedata['und'][0]['value'] = $annee;
				$art->uid = 1;
				$art->language = $element->language;
				// Article 17 link to element
                $art->field_art17agg_link_agglo['und'][0]['nid'] = $element->nid;
    			
    			// Save the article 17 element
    			node_save($art);
    			
    			// Link element tot Article 17
                $element->field_article17_agglo['und'][0]['nid'] = $art->nid;
    			// Save the element
    			node_save($element);
    		}
    		else{
    			$emes = t('WARNING : the element at index').': '.$line.' '.t('does not correspond to any identifier in the database.');
    			uwwtd_set_warning($line, $emes);    
    		}
    	}
        $j++;
        $line++;
        $context['sandbox']['progress']++;
    }
	uwwtd_flush_errors();
	
	$context['message'] = '(' .$annee . ') ' . t('Processing Article 17 agglomeration...' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);
	
	if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
		$context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
	}    
}

function uwwtd_art17_import_article17_process($newFile, $annee, $datas, &$context){
	$GLOBALS['uwwtd_errors'] = array();
	$timestamp= time();
	unset($_SESSION['uwwtd_error']);
	unset($_SESSION['uwwtd_warnings']);
	 $e = 0;
	if (!isset($context['sandbox']['progress'])) {
		$context['sandbox']['max'] = count($datas);
		$context['sandbox']['progress'] = 0;
		$context['sandbox']['ids'] = $datas;
	}
	$i = $context['sandbox']['progress'];
	$data = $context['sandbox']['ids'][$i];
	// $keyData = array_keys($data);

	//station
	// $context['sandbox']['existsUwwtp'] = 1;
	///agglo
	$context['sandbox']['existsUwwtp'] = 0;
	
	if($context['sandbox']['existsUwwtp'] == 1){
		// article 17 Station
		if(isset($data[0]) &&($data[0] == '' || empty($data[0]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "uwwCode" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[1]) &&($data[1] == '' || empty($data[1]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "uwwName" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[2]) && ($data[2] == '' || empty($data[2]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggCode" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[3]) &&($data[3] == '' || empty($data[3]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggName" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[4]) && ($data[4] == '' || empty($data[4]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpStatus" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $fata);
		}
		if(isset($data[5]) && ($data[5] == '' || empty($data[5]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpreasons" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[6]) && ($data[6] == '' || empty($data[6]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpMeasures" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[7]) && ($data[7] == '' || empty($data[7]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpload" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[8]) && ($data[8] == '' || empty($data[8]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpCapacity" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[9]) && ($data[9] == '' || empty($data[9]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecTreatment" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[10]) && ($data[10] == '' || empty($data[10]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateStart" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[11]) && ($data[11] == '' || empty($data[11]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateStartWork" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[12]) && ($data[12] == '' || empty($data[12]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateCompletion" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[13]) && ($data[13] == '' || empty($data[13]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpExpecDateperformance" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[14]) && ($data[14] == '' || empty($data[14]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpInv" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[15]) && ($data[15] == '' || empty($data[15]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpEUfundname" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[16]) && ($data[16] == '' || empty($data[16]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flatpEUfund" column in the Uwwtps article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}

	}
	//Agglo
	if($context['sandbox']['existsUwwtp'] == 0){
		if(isset($data[0]) && ($data[0] == '' || empty($data[0]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggCode" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[1]) && ($data[1] == '' || empty($data[1]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "aggName" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[2]) && ($data[2] == '' || empty($data[2]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggStatus" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[3]) && ($data[3] == '' || empty($data[3]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggreasons" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[4]) && ($data[4] == '' || empty($data[4]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggMeasures" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[5]) && ($data[5] == '' || empty($data[5]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateStart" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[6]) && ($data[6] == '' || empty($data[6]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateStartWork" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[7]) && ($data[7] == '' || empty($data[7]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggExpecDateCompletion" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[8]) && ($data[8] == '' || empty($data[8]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggInv" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[9]) && ($data[9] == '' || empty($data[9]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "flaggEUfundname" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
		if(isset($data[10]) && ($data[10] == '' || empty($data[10]))){
			$e = 1;
			$emes = t('The data you are trying to add for the "FlaggEUfund" column in the Agglomerations article 17 doesn\'t contain an identifier');
			uwwtd_set_error($i, $emes);
			uwwtd_add_error($annee, $GLOBALS['uwwtd_errors_type']['type']['warning'], $GLOBALS['uwwtd_errors_type']['category']['article17 format'], $emes, $timestamp, null, $data);
		}
	}

	// Check if no errors were found
	if($e == 0){

		// Variables
		$uri = $newFile->uri;
		$filename = $newFile->filename;
		$filename .= ".csv";
		$fid = $newFile->fid;
		
		if($context['sandbox']['existsUwwtp'] == 1) {
			$siteId = $annee.'_uww_'.uwwtd_check_text($data[0]);
		}else{
			$siteId = $annee.'_agg_'.uwwtd_check_text($data[0]);
		}
		// Check if id exists
		$exists = uwwtd_check_exist($siteId);
		// If the element exists
		if($exists != false){
			// load the exisiting element
			$element = node_load($exists);
			$art17_title = $element->field_siteid['und'][0]['value'] .' - Article 17 data '.$annee;
			// dsm($element);
			if($element->type == 'agglomeration'){
				if(isset($element->field_article17_agglo['und'][0]['nid']) && $element->field_article17_agglo['und'][0]['nid']!= ""){
					$art = node_load($element->field_article17_agglo['und'][0]['nid']);
				}else{
					// Create new article 17 node
					$art = new StdClass();
					$art->type = 'article_17_agglomeration';
					$art->title = $art17_title;
				}
				// Article 17 mapping for Agglomerations
				if(isset($data[0]) && !empty($data[0])) $art->field_art17agg_aggcode['und'][0]['value'] = $data[0];
				if(isset($data[1]) && !empty($data[1])) $art->field_art17agg_aggname['und'][0]['value'] = $data[1];
				if(isset($data[2]) && !empty($data[2])) $art->field_art17_flaggstatus['und'][0]['value'] = $data[2];
				if(isset($data[3]) && !empty($data[3])) $art->field_art17_flaggreasons['und'][0]['value'] = $data[3];
				if(isset($data[4]) && !empty($data[4])) $art->field_art17_flaggmeasures['und'][0]['value'] = $data[4];
				if(isset($data[5]) && !empty($data[5])) $art->field_art17_flaggexpecdatestart['und'][0]['value'] = uwwtd_check_date($data[5], $timestamp);
				if(isset($data[6]) && !empty($data[6])) $art->field_art17_flaggexpecdatestartw['und'][0]['value'] = uwwtd_check_date($data[6], $timestamp);
				if(isset($data[7]) && !empty($data[7])) $art->field_art17_flaggexpecdatecomple['und'][0]['value'] = uwwtd_check_date($data[7], $timestamp);
				if(isset($data[8]) && !empty($data[8])) $art->field_art17_flagginv['und'][0]['value'] = uwwtd_check_decimal($data[8], $timestamp);
				if(isset($data[9]) && !empty($data[9])) $art->field_art17_flaggeufundname['und'][0]['value'] = $data[9];
				if(isset($data[10]) && !empty($data[10])) $art->field_art17_flaggeufund['und'][0]['value'] = uwwtd_check_numeric($data[10], $timestamp);
				if(isset($data[11]) && !empty($data[11])) $art->field_art17_flaggcomments['und'][0]['value'] = $data[11];
				if(isset($data[12]) && !empty($data[12])) $art->field_art17_flaggexpload['und'][0]['value'] = uwwtd_check_numeric($data[12], $timestamp);
				if(isset($data[13]) && !empty($data[13])) $art->field_art17_flaggexploadcoll['und'][0]['value'] = uwwtd_check_decimal($data[13], $timestamp);
				if(isset($data[14]) && !empty($data[14])) $art->field_art17_flaggexploadias['und'][0]['value'] = uwwtd_check_decimal($data[14], $timestamp);
				if(isset($data[15]) && !empty($data[15])) $art->field_art17_flaggotherfund['und'][0]['value'] = uwwtd_check_numeric($data[15], $timestamp);
				if(isset($data[16]) && !empty($data[16])) $art->field_art17_flaggotherfundname['und'][0]['value'] = $data[16];
				if(isset($data[17]) && !empty($data[17])) $art->field_art17_flaggloan['und'][0]['value'] = uwwtd_check_numeric($data[17], $timestamp);
				if(isset($data[18]) && !empty($data[18])) $art->field_art17_flaggloanname['und'][0]['value'] = $data[18];
				
				$art->field_anneedata['und'][0]['value'] = $annee;
				$art->uid = 1;
				$art->language = $element->language;
				// Article 17 link to element
				$art->field_art17agg_link_agglo['und'][0]['nid'] = $element->nid;
			}else{
				if(isset($element->field_article17_uwwtp['und'][0]['nid']) && ($element->field_article17_uwwtp['und'][0]['nid']!= "" || $element->field_article17_uwwtp['und'][0]['nid']!= NULL)){
					$art = node_load($element->field_article17_uwwtp['und'][0]['nid']);
				}else{
					// Create new article 17 node
					$art = new StdClass();
					$art->type = 'article_17_uwwtp';
					$art->title = $art17_title;
				}
			
				// Article 17 mapping for UWWTP
				if(isset($data[0]) && !empty($data[0])) $art->field_art17uwwtp_uwwcode['und'][0]['value'] = $data[0];
				if(isset($data[1]) && !empty($data[1])) $art->field_art17uwwtp_uwwname['und'][0]['value'] = $data[1];
				if(isset($data[2]) && !empty($data[2])) $art->field_art17uwwtp_aggcode['und'][0]['value'] = $data[2];
				if(isset($data[3]) && !empty($data[3])) $art->field_art17uwwtp_aggname['und'][0]['value'] = $data[3];
				if(isset($data[4]) && !empty($data[4])) $art->field_art17_flatpstatus['und'][0]['value'] = $data[4];
				if(isset($data[5]) && !empty($data[5])) $art->field_art17_flatpreasons['und'][0]['value'] = $data[5];
				if(isset($data[6]) && !empty($data[6])) $art->field_art17_flatpmeasures['und'][0]['value'] = $data[6];
				if(isset($data[7]) && !empty($data[7])) $art->field_art17_flatpexpload['und'][0]['value'] = uwwtd_check_numeric($data[7], $timestamp);
				if(isset($data[8]) && !empty($data[8])) $art->field_art17_flatpexpcapacity['und'][0]['value'] = uwwtd_check_numeric($data[8],$timestamp);
				if(isset($data[9]) && !empty($data[9])) $art->field_art17_flatptexpectreatment['und'][0]['value'] = $data[9];
				if(isset($data[10]) && !empty($data[10])) $art->field_art17_flatpexpecdatestart['und'][0]['value'] = uwwtd_check_date($data[10], $timestamp);
				if(isset($data[11]) && !empty($data[11])) $art->field_art17_flatpexpecdatestartw['und'][0]['value'] = uwwtd_check_date($data[11], $timestamp);
				if(isset($data[12]) && !empty($data[12])) $art->field_art17_flatpexpecdatecomple['und'][0]['value'] = uwwtd_check_date($data[12], $timestamp);
				if(isset($data[13]) && !empty($data[13])) $art->field_art17_flatpexpecdateperfor['und'][0]['value'] = uwwtd_check_date($data[13], $timestamp);
				if(isset($data[14]) && !empty($data[14])) $art->field_art17_flatpinv['und'][0]['value'] = uwwtd_check_numeric($data[14], $timestamp);
				if(isset($data[15]) && !empty($data[15])) $art->field_art17_flatpeufundname['und'][0]['value'] = $data[15];
				if(isset($data[16]) && !empty($data[16])) $art->field_art17_flatpeufund['und'][0]['value'] = uwwtd_check_numeric($data[16], $timestamp);
				if(isset($data[17]) && !empty($data[17])) $art->field_art17_flatpcomments['und'][0]['value'] = $data[17];
				if(isset($data[18]) && !empty($data[18])) $art->field_art17_flatpexploadtruck['und'][0]['value'] = uwwtd_check_decimal($data[18], $timestamp);
				if(isset($data[19]) && !empty($data[19])) $art->field_art17_flatpotherfund['und'][0]['value'] = uwwtd_check_numeric($data[19], $timestamp);
				if(isset($data[20]) && !empty($data[20])) $art->field_art17_flatpotherfundname['und'][0]['value'] = $data[20];
				if(isset($data[22]) && !empty($data[21])) $art->field_art17_flatploan['und'][0]['value'] = uwwtd_check_numeric($data[21], $timestamp);
				if(isset($data[22]) && !empty($data[22])) $art->field_art17_flatploanname['und'][0]['value'] = $data[22];
				$art->field_anneedata['und'][0]['value'] = $annee;
				$art->uid = 1;
				$art->language = $element->language;
				// Article 17 link to element
				$art->field_art17uwwtp_link_uwwtp['und'][0]['nid'] = $element->nid;
			}
			// Save the article 17 element
			node_save($art);
			
			// Link element tot Article 17
			if($element->type == 'agglomeration'){
				$element->field_article17_agglo['und'][0]['nid'] = $art->nid;
			}else{
				$element->field_article17_uwwtp['und'][0]['nid'] = $art->nid;
			}
			// Save the element
			node_save($element);
		}
		else{
			$emes = t('WARNING : the element at index').': '.$i.' '.t('does not correspond to any identifier in the database.');
			uwwtd_set_warning($i, $emes);

		}
	}
	uwwtd_flush_errors();
	$context['sandbox']['progress']++;
	$context['message'] = '(' .$annee . ') ' . t('Processing Article 17...' . $context['sandbox']['progress'] .'/'. $context['sandbox']['max']);
	
	if ($context['sandbox']['progress'] != $context['sandbox']['max']) {
		$context['finished'] = $context['sandbox']['progress'] / $context['sandbox']['max'];
	}
}

// function uwwtd_art17_date($string){
	// $exploded = explode('/', $string);
	// if(count($exploded) > 1){
		// $date = $exploded[1].'-'.$exploded[0].'-01 00:00:00';
		// dsm($date);
		// return $date;
	// }
// }

function uwwtd_art17_import_finished($success, $results, $operations){
	if ($success) {
		drupal_set_message(t('All the Article 17 data has been added to the site.'));
		if(isset($_SESSION['uwwtd_error'])){
			foreach($_SESSION['uwwtd_error'] as $error){
				drupal_set_message(t('Error occured on row index : ').$error[0].' (" '.$error[1].' ") '.t(' of your file. This element was not added, please check your input file.'), 'error');
			}
		}
		if(isset($_SESSION['uwwtd_warnings'])){
			foreach($_SESSION['uwwtd_warnings'] as $warning){
				drupal_set_message(t('Warning occured on row index : ').$warning[0].' (" '.$warning[1].' ") '.t(' of your file. This element was not added, please check your input file.'), 'warning');
			}
		}
	}
	else {
		// An error occurred.
		// $operations contains the operations that remained unprocessed.
		$error_operation = reset($operations);
		drupal_set_message(
			t('An error occurred while processing @operation with arguments : @args',
				array(
					'@operation' => $error_operation[0],
					'@args' => print_r($error_operation[0], TRUE),
				)
			)
		);
	}
}

