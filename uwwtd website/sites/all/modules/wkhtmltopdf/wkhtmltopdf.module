<?php 

function wkhtmltopdf_menu() {
     $items = array();
     $items['wkhtmltopdf/print'] = array(
          'page callback'		=> 'wkhtmltopdf_print_js',
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
          'file' => 'WkHtmlToPdf.php',
          'file path' => drupal_get_path('module', 'wkhtmltopdf').'/lib',
     );
     $items['wkhtmltopdf/getCache/%'] = array(
          'page callback'		=> 'wkhtmltopdf_getCache',
          'page arguments' => array(2),
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
     );
     $items['wkhtmltopdf/getContent'] = array(
          'page callback'		=> 'wkhtmltopdf_getContent',
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
     );
     /*$items['wkhtmltopdf/getFooter'] = array(
          'page callback'		=> 'wkhtmltopdf_getFooter',
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
     );
     $items['wkhtmltopdf/getHeader'] = array(
          'page callback'		=> 'wkhtmltopdf_getHeader',
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
     );
     */
     $items['wkhtmltopdf/getCover'] = array(
          'page callback'		=> 'wkhtmltopdf_getCover',
		  //'access callback' => 'node_access',
		  'access arguments' => true,
		  'access callback' => true,
          'type'				=> MENU_NORMAL_ITEM,
     );
     $items['admin/config/wkhtmltopdf'] = array (
		'title'=>t('WKHTMLTOPDF'),
		'access arguments' => array('administer wkhtmltopdf'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('wkhtmltopdf_admin_settings'),
		'file' => 'wkhtmltopdf.admin.inc',
		'file path' => drupal_get_path('module', 'wkhtmltopdf'),
	);
     return $items;
}

function wkhtmltopdf_init(){
    drupal_add_css(drupal_get_path('module', 'wkhtmltopdf') . '/style/wkhtmltopdf_form.css'); 
	drupal_add_js(drupal_get_path('module', 'wkhtmltopdf') . '/js/wkhtmltopdf.js');
	drupal_add_library('system', 'ui.dialog');
}

function wkhtmltopdf_getCache($cid, $exit=true){
    $cache=cache_get($cid);
    if($cache && !empty($cache->data)){
        $html = $cache->data;
    }
    else{
        $html ='<html><body>bad cache !!!</body></html>';
    }
    if($exit){
        exit($html);
    }
    else{
        return $html;
    }
}

function wkhtmltopdf_print_js(){
    $path =  wkhtmltopdf_print($_POST);
    exit(drupal_json_encode(array('file'=>$path)));
}

//fonction de lancement de l'impression
//tous les les elements dans params doivent avoir une clé commencant par wkhtmltopdf_*
function wkhtmltopdf_print($params=array()){
    $conf =wkhtmltopdf_get_conf();
    if(empty($conf)){
        exit("wkhtmltopdf n'est pas configuré");
    }
    
    $dir = file_default_scheme().'://wkhtmltopdf';
    //On traite les paramétres afin de ne recuperer que ceux destinés à wkhtmltopdf
//     uwwtd_wkhtml_trace(var_export($conf, true));
//     uwwtd_wkhtml_trace(var_export($params, true));
    $data =wkhtmltopdf_getData($params);

    //On recupere les valeurs par défaut
    $dd = wkhtmltopdf_getDefaultData($conf);
    //On fusionne les tableaux afin de ne garder que l'essentiel
    $data = wkhtmltopdf_array_merge_recursive_distinct($dd, $data);
    //Id generique pour le cache
    $cid = 'wkhtmltopdf_'.time();
    
    //On regarde si on a le minimum syndicale pour lancer une impression à savoir :  un titre et un contenu
    if($data['title']['value']==''){
        exit("ERREUR : les paramètres d'impression ne contiennent pas de titre");
    }
    if($data['content']['value']==''){
        exit("ERREUR : les paramètres d'impression ne contiennent pas de contenu");
    }
    //krumo($data);
    //Generation des header, footer, cover et content
    $content=wkhtmltopdf_getContent($data);
//         cache_set($cid.'_content', $content);
        file_put_contents(drupal_realpath($dir).'/' . $cid.'_content.html', $content);
        //exit($content);
    if($conf['header_display']){
        $header=wkhtmltopdf_getHeader($data);
//         cache_set($cid.'_header', $header);
        file_put_contents(drupal_realpath($dir).'/' . $cid.'_header.html', $header);
    }
    if($conf['footer_display']){
        $footer=wkhtmltopdf_getFooter($data);
//         cache_set($cid.'_footer', $footer);
        file_put_contents(drupal_realpath($dir).'/' . $cid.'_footer.html', $footer);
    }
    if($conf['cover_display']){
        $cover=wkhtmltopdf_getCover($data);
        //exit($cover);
//         cache_set($cid.'_cover', $cover);
        file_put_contents(drupal_realpath($dir).'/' . $cid.'_cover.html', $cover);
    } 
    
    //exit($cid);
    try {
        //Check if  wkhtmltopdf directory exist
//         $dir = file_default_scheme().'://wkhtmltopdf'; 
        file_prepare_directory($dir, $mode = FILE_CREATE_DIRECTORY);
        
        //On fait le ménage sur le disk en supprimant tous les fichiers qui on plus de 24 heures
        //file_scan_directory($dir, '[.pdf|.html]', array(), 'wkhtmltopdf_remove_old_file');
        
        $options= array(
            //'path' => $conf['path'], ///var/www/html/dev/pdf
            'path'=>drupal_realpath($dir).'/',
            'binpath'=>$conf['bin_path'], //'binpath'=>'/home/wkhtmltopdf-i386',
            'html'=>$content,
        );
		
        if($conf['disablePdfCompression']){$options['pdfCompression']=false;}
        
//         if($conf['footer_display']){$options['footer_html']=url('wkhtmltopdf/getCache/'.$cid.'_footer', array('absolute'=>true));}
//         if($conf['header_display']){$options['header_html']=url('wkhtmltopdf/getCache/'.$cid.'_header', array('absolute'=>true));}
//         if($conf['cover_display']){$options['cover_html']=url('wkhtmltopdf/getCache/'.$cid.'_cover', array('absolute'=>true));}
        
        if($conf['footer_display']){$options['footer_html']=drupal_realpath($dir).'/' . $cid.'_footer.html';}    
        if($conf['header_display']){$options['header_html']=drupal_realpath($dir).'/' . $cid.'_header.html';}    
        if($conf['cover_display']){$options['cover_html']=drupal_realpath($dir).'/' . $cid.'_cover.html';}        
        
        
        if($conf['margins']){$options['margins']=$conf['margins'];}
		if($conf['toc_display']){
            $options['toc']=true;
            if($conf['toc_depth']){$options['toc_depth']=$conf['toc_depth'];}
        }
		
        $wkhtmltopdf = new Wkhtmltopdf($options);
		//exit($wkhtmltopdf);
        $date = date("_Ymd_his");
        $wkhtmltopdf->setTitle(utf8_decode($data['title']['value'])); //pdf are encode in ISO-8859-1
//         uwwtd_wkhtml_trace('start output');
        $wkhtmltopdf->output(Wkhtmltopdf::MODE_SAVE, ($data['filename']['value']!=''?$data['filename']['value'].$date.'.pdf':"file.pdf"));
//         uwwtd_wkhtml_trace('end output');    
        //On fait le ménage dans le cache
//         cache_clear_all($cid, 'cache', true);
        if($conf['footer_display']){$options['footer_html']=unlink(drupal_realpath($dir).'/' . $cid.'_footer.html');}    
        if($conf['header_display']){$options['header_html']=unlink(drupal_realpath($dir).'/' . $cid.'_header.html');}    
        if($conf['cover_display']){$options['cover_html']=unlink(drupal_realpath($dir).'/' . $cid.'_cover.html');}
       
	    $path = $dir.'/'.($data['filename']['value']!=''?$data['filename']['value'].$date.'.pdf':"file.pdf");
        return file_create_url($path);
    } catch (Exception $e) {
        echo $e->getMessage();
    }
}


function wkhtmltopdf_array_merge_recursive_distinct(){
    $aArrays = func_get_args();
    $aMerged = $aArrays[0];
   
    for($i = 1; $i < count($aArrays); $i++){
        if (is_array($aArrays[$i])){
            foreach ($aArrays[$i] as $key => $val){
                if (is_array($aArrays[$i][$key])){
                    $aMerged[$key] = is_array($aMerged[$key]) ? wkhtmltopdf_array_merge_recursive_distinct($aMerged[$key], $aArrays[$i][$key]) : $aArrays[$i][$key];
                }
                else{
                    $aMerged[$key] = $val;
                }
            }
        }
    }
   
    return $aMerged;
}

function wkhtmltopdf_getData($params=array()){
    foreach((array)$params as $key=>$value){
        if(substr($key, 0, 12)=='wkhtmltopdf_'){
            $data[substr($key, 12)]['value']=(string)$value;
        }
    }
    return $data;
}
function wkhtmltopdf_getDefaultData($conf = array()){
    $dd=wkhtmltopdf_conf_default_metadata_to_array($conf);
    $dd['title']=array('label'=>'Title');
    $dd['identifier']=array('label'=>'Link');
    $dd['date']=array('label'=>"Date",'value'=>date('d/m/Y'));
    
    
    /*
    $dd['author']=array('label'=>'Auteur','value'=>"Office National de l'Eau et des Milieux Aquatiques (ONEMA)");
    $dd['contributor']=array('label'=>'Contributeur','value'=>"Office International de l'Eau (OIEau)");
    $dd['author']=array('label'=>"Auteur",'value'=>"Gest'eau");
    $dd['editor']=array('label'=>"Editeur",'value'=>"République française. Office National de l'Eau et des Milieux Aquatiques (ONEMA)");
    $dd['language']=array('label'=>"Langue",'value'=>"Fr");
    $dd['spatial']=array('label'=>"Couverture géographique",'value'=>"France entière");
    $dd['rights']=array('label'=>"Droits d'usage",'value'=>l("http://creativecommons.org/licenses/by-nc-sa/2.0/fr", "http://creativecommons.org/licenses/by-nc-sa/2.0/fr"));
    */
    
    return $dd;
}

function wkhtmltopdf_conf_default_metadata_to_array($conf=array()){
    $dd=array();
    if(isset($conf['default_metadata'])){
        $lines=explode("\n", $conf['default_metadata']);
        foreach($lines as $line){
            $l = explode('|', trim($line));
            $dd[trim($l[0])]=array(
                'label'=>trim($l[1]),
                'value'=>trim($l[2])
            );
        }
    }
    
    return $dd;
}

//Fonction de génération du header
function wkhtmltopdf_getHeader($data=array()){   
//     return theme('wkhtmltopdf_header', array());
    $variables = array();
    if($data['date']['value']!='') $variables['date'] = t('Last calculated : @date', array('@date' => $data['date']['value']));
    $variables['title'] = t('UWWTD-SIIF platform: @country National wastewater SIIF', array('@country' => variable_get('siif_eru_country_name')));
    return theme('wkhtmltopdf_header', $variables);
}
//Fonction de génération du header
function wkhtmltopdf_getFooter($data=array()){
    
    global $base_url;
    
    $variables=array();    
    $variables['base_url'] = $base_url; 
    return theme('wkhtmltopdf_footer', $variables);
}
//Fonction de génération du Cover
function wkhtmltopdf_getCover($data=array()){
    $variables=array();

    $variables['title'] = '<div class="wkhtmltopdf_title">'.$data['title']['value'].'</div>';
//     if($data['creator']['value']!='') $variables['creator'] = '<div class="wkhtmltopdf_creator">'.$data['creator']['value'].'</div>';
    if($data['date']['value']!='') $variables['date'] = '<br/><br/><br/><div class="wkhtmltopdf_date">' . t('Date of production:') .' '.$data['date']['value'].'</div>';
    
	$variables['doc-info'] =  $variables['title']
                                .'<div class="wkhtmltopdf_sitename">'.variable_get('site_name'). '</div>'
                                .$variables['date'];
    
    $variables['cartouche']=wkhtmltopdf_AddDCMetadata($data);
    $variables['disclaimer']=wkhtmltopdf_getDisclaimer($data);
    $variables['nota']=wkhtmltopdf_cover_nota($data);  
    return theme('wkhtmltopdf_cover', $variables);
}

function wkhtmltopdf_getDisclaimer($data){
    return t('<p class="title_disclaimer">Disclaimer:</p>
              The UWWTD SIIF platform is developed to enhance expert and citizen access to information about imple-mentation of Urban Waste Water Directive (91/271/EEC). Our goal is to keep this information timely and accurate. If errors are brought to our attention, we will try to correct them. However, the Commission and its consultant accept no responsibility or liability whatsoever with regard to the information on these sheets.
              The information presented is purely summary of the data collected, and implementation of calculations defined on the basis of the Directive with no interpretation and the way it is presented was agreed by the DG ENV representatives. It may not in any circumstances be regarded as stating an official position of the European Commission.', 
              array('@country' => variable_get('siif_eru_country_name')));
}

function wkhtmltopdf_cover_nota($data){
    global $base_url;
// $base_url;                                           
    return t('Nota: This document was produced by the website @websitename (@url), a website presenting information on waste water relevant for implementation of the European Directive 91/271/EEC.', 
                array('@websitename' => variable_get('site_name'),
                        '@url' => $base_url));
}

//Fonction de génération du Content
function wkhtmltopdf_getContent($data=array()){
    drupal_theme_initialize();

    $html = $data['content']['value'];
    
    //=================== Spécial geosie
    //Si les module existe et qu'on a des éléments portant à croire que le contenu courant peut contenir une carte...alors attention 
    if(module_exists('geosie') && strpos($html,'<div id="container_geosie_brique">')!==false){
        geosie_add_common_js_css();
    }
    //===================
    $variables['css'] = drupal_add_css ( drupal_get_path ( 'module' , 'openlayers_plus' ) . '/theme/openlayers_plus.css' , array( 'group' => CSS_DEFAULT , 'every_page' => TRUE )); 
	$variables['css'] = drupal_add_css ( drupal_get_path ( 'module' , 'contextual' ) . '/contextual.css' , array( 'group' => CSS_DEFAULT , 'every_page' => TRUE )); 
	$variables['css'] = drupal_add_css ( drupal_get_path ( 'module' , 'openlayers_gazetteer' ) . '/css/openlayers_gazetteer.css' , array( 'group' => CSS_DEFAULT , 'every_page' => TRUE )); 
	$variables['js'] = drupal_add_js ( drupal_get_path ( 'module' , 'views' ) . '/js/views-contextual.js');
    
    //flot    
    $variables['css'] = drupal_add_css ( drupal_get_path ( 'module' , 'flot' ) . '/flot.pie.css' , array( 'group' => CSS_DEFAULT , 'every_page' => TRUE ));
    $variables['js'] = drupal_add_js ( drupal_get_path ( 'module' , 'uwwtd' ) . '/js/uwwtd.js');
    $variables['js'] = drupal_add_js ( drupal_get_path ( 'module' , 'flot' ) . '/../../libraries/flot/jquery.flot.js');
    $variables['js'] = drupal_add_js ( drupal_get_path ( 'module' , 'flot' ) . '/flot.utils.js');
    $variables['js'] = drupal_add_js ( drupal_get_path ( 'module' , 'flot' ) . '/../../libraries/flot/jquery.flot.pie.js');
    $variables['js'] = drupal_add_js ( 'Drupal.flot = {};', 'inline');
//     $variables['js'] = drupal_add_js ( 'function uwwtd_labelformaterpie(label, series) {
//     return "<div class=\"pie_slice\">" + Math.round(series.percent) + "%</div>";
// }     
// 
// function uwwtd_labelformaterpie_legend(label, series) {
//     return "<div class=\"pie_legend\">" + label + " (" + Math.round(series.percent) + "%)</div>";  
// } ', 'inline');
    
//     @import url("http://webnuxdev.rnde.tm.fr/ev_uwwtd_si/sites/all/modules/flot/flot.pie.css?nwgouq");
// <script src="http://webnuxdev.rnde.tm.fr/ev_uwwtd_si/sites/all/libraries/flot/jquery.flot.js?nwgouq"></script>
// <script>Drupal.flot = {};</script>     
	
	$variables['css'] = wkhtmltopdf_make_link_absolute(drupal_get_css());
    $variables['js'] = wkhtmltopdf_make_link_absolute(drupal_get_js());
    //$variables['js_footer'] = wkhtmltopdf_make_link_absolute(drupal_get_js('js_footer'));
    $variables['footer'] = wkhtmltopdf_make_link_absolute(drupal_get_js('footer'));
	$variables['title'] = $data['title']['value'];

    //On remplace dans les fiedsets collapse pour voir tout le texte
    $html = str_replace('collapse', 'collapsible',$html); // base64_decode($_POST['contenu'])
    $html = str_replace('class="table-responsive"', '',$html);
    //delete flot code
//     $html = str_replace('Drupal.flot', '//Drupal.flot',$html);
    //desactivate flip             
    $html = str_replace('class="container flip"', '',$html);
    
    
    
   // 
// $html = str_replace('"height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;" class="rightgraph', '"margin-left:2px;" class="rightgraph',$html);
// $html = str_replace('"transform: rotateY(-180deg); height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;" class="rightgraph', '"margin-left:2px;" class="rightgraph',$html);
// $html = str_replace('"height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;" class="leftgraph', '"margin-right:2px;" class="leftgraph',$html);
// $html = str_replace('"transform: rotateY(-180deg); height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;" class="leftgraph', '"margin-right:2px;" class="leftgraph',$html);
// //page agglo/connexion only one graph
// //     $html = str_replace('"height: 280px; width: 1110px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden; transform: rotateY(0deg);"', '"width:50%;margin:auto;"',$html);
// //this line reduce the larger of the map!
// //     $html = str_replace('"height: 280px; width: 1110px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;"', '"width:50%;margin:auto;"',$html);
// $html = str_replace('"height: 280px; width: 1110px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;"', '"width: 1110px;margin:auto;"',$html);
// $html = str_replace('"transform: rotateY(-180deg); height: 280px; width: 1110px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;"', '""',$html);
   
   //  
    
    
        
    //desactivate flot graph canvas
//     $html = str_replace('class="" id="flot-auto-identifier-"', 'class="marginauto" id="flot-auto-identifier-"',$html);
    $html = str_replace('flot-auto-identifier-', 'flot-auto-identifier-old-', $html);
    $html = str_replace('canvas', 'canvas__old', $html);
    //ide flot backgroun color => cant because rebuild by js 
    //$html = str_replace('opacity: 0.85;', 'opacity: 0',  $html);
    //force larger of the page, the map will be full displayed, else the map will be truncated      
    $html = str_replace('<!--markerprinttable-->', '<table border="1" style="width:1140px;visibility:hidden;"><tbody><tr><td></td></tr></tbody></table>',$html);
     
    
    
//     $html = str_replace('position: absolute; width: 250px; height: 60px; top: 5px; right: 5px; background-color: rgb(248, 248, 248); opacity: 0.85;', 'position: absolute; width: 250px; height: 60px; top: 5px; right: 5px; background-color: #FFFFFF; opacity: 0.85;', $html);
//     $html = str_replace('position:absolute;top:5px;right:5px;;font-size:smaller;color:#545454', 'position:absolute;top:5px;right:-5px;;font-size:smaller;color:#545454', $html);
       
//     height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;
//     transform: rotateY(-180deg); height: 280px; width: 529px; transform-style: preserve-3d; position: absolute; transition: all 0.5s ease-out 0s; backface-visibility: hidden;
//     class="back" style
    
    //todo desactivate javascript

    $html = wkhtmltopdf_make_link_absolute($html);
    $variables['content'] = $html;
	//exit($html);
    $s = theme('wkhtmltopdf_content', $variables);
//     file_put_contents('/var/www/html/ev_uwwtd_si/sites/default/files/wkhtmltopdf/courant.html', $s);
    return $s;
}

function wkhtmltopdf_make_link_absolute($str){
    //New remote file notation -> return to old way
    $str = str_replace('src="//', 'src="http://', $str);
    $str = str_replace('href="//', 'href="http://', $str);
    
    //Local path
    $str = str_replace('href="/', 'href="http://'.$_SERVER['SERVER_NAME'].'/',$str); 
    $str = str_replace('src="/', 'src="http://'.$_SERVER['SERVER_NAME'].'/',$str);

    return $str;
}

//Fonction de chargement de la configuration du module
function wkhtmltopdf_get_conf(){
	return variable_get('wkhtmltopdf_configurations', array());
}
//Fonction d'enregistrement de la configuration du module
function wkhtmltopdf_set_conf($conf){
    //dsm($conf);
	return variable_set('wkhtmltopdf_configurations', $conf);
}

//TODO: mettre cette fonction comme un theme
//$selector : selecteur jquery pour la selection d'un element html 
function wkhtmltopdf_tag($selector=array('body'), $options=array()){
$s = drupal_json_encode((array)$selector);
//if(!isset($options['title'])) $options['title'] = variable_get('site_name', '');
$options = drupal_json_encode($options);

$tag ='
<div class="wkhtmltopdf_printer">
    <div class="wkhtmltopdf_starter"><a name="wkhtmltopdf" rel="nofollow" onclick=\'wkhtmltopdf_print('.$s.', this, Drupal.settings.basePath, '.$options.');\'>'.t('Print').'</a></div>
    <div id="wkhtmltopdf_dialog"></div>
    <div id="wkhtmltopdf_dialogResult"></div>
</div>
';
    return $tag;
}

function wkhtmltopdf_theme( &$existing, &$type, &$theme, &$path ){
  return array(
    'wkhtmltopdf_footer' => array(
		'template' => 'tpl/wkhtmltopdf_footer',
        'variables' => array( 'variables' => null )
    ),
    'wkhtmltopdf_header' => array(
		'template' => 'tpl/wkhtmltopdf_header',
        'variables' => array( 'variables' => null )
    ),
    'wkhtmltopdf_cover' => array(
		'template' => 'tpl/wkhtmltopdf_cover',
        'variables' => array( 'variables' => null )
    ),
    'wkhtmltopdf_content' => array(
		'template' => 'tpl/wkhtmltopdf_content',
        'variables' => array( 'variables' => null )
    )
  );
}

//Cartouche de métadonnée => selon les champs Dublin Core
function wkhtmltopdf_AddDCMetadata($data){
	$md = array();
	//Liste des champs Dublin Core => l'ordre dans le tableau defini l'ordre d'apparition dans le cartouche
	$dc=array(
		'title',
		'alternative',
		'creator',
		'subject',
		'description',
			'tableOfcontenus',
			'abstract',
		'publisher',
		'contributor',
		'date',
			'created',
			'valid',
			'available',
			'issued',
			'modified',
			'dateAccepted',
			'dateCopyrighted',
			'dateSubmitted',
		'type',
		'format',
			'extent',
			'medium',
		'identifier', 
		'source',
		'language',
		'coverage',
			'spatial',
			'temporal',
		'relation',
			'isVersionOf',
			'hasVersion',
			'isReplacedBy',
			'replaces',
			'isRequiredBy',
			'requires',
			'isPartOf',
			'hasPart',
			'isReferencedBy',
			'references',
			'isFormatOf',
			'hasFormat',
			'conformsTo',
		'rights',
		'audience',
			'mediator',
			'educationLevel',
	);
	foreach($dc as $metadata){
		if(isset($data[$metadata])){ $cartouche[]=$data[$metadata];}
	}

	if(!empty($cartouche)){
		foreach($cartouche as $ligne){
			if(!empty($ligne)){
				//Si la ligne est vide
                if($ligne['value']=="") $ligne['value']="-";
                //Si la ligne est une URL
                if(substr($ligne['value'],0,4)=='http'){
                    if (strlen($ligne['value']) > 120) {
                        $ligne['value'] = l(substr($ligne['value'], 0, 120) . '...', $ligne['value']);
                    } else {
                        $ligne['value'] = l($ligne['value'], $ligne['value']);
                    }                    
                }
                
                $ligne['value'] = str_replace('[#COUNTRY#]', variable_get('siif_eru_country_name'), $ligne['value']);
                
				$md['rows'][]= array('<b>'.$ligne['label'] .' :</b> '.$ligne['value']);
			}
		}
        return theme('table',$md);
	}
    else return false;
}

//Cette permet de supprimer un fichier s'il date de plus 24 heures
function wkhtmltopdf_remove_old_file($file){
    $crea_date = (int)@filectime($file);
    if((time() - $crea_date) > (60*60*24)){
        @unlink($file);
    }
}

function uwwtd_wkhtml_trace($message)
{
    return '';
    $file = drupal_realpath('public://data_errors/wkhtml_trace.log');
    $r = fopen($file, 'a');
    fputs($r, date("[Y-m-d H:i:s] ") . $message . "\n");
    fclose($r);
}
